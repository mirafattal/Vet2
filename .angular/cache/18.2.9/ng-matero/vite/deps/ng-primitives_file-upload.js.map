{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-primitives/fesm2022/ng-primitives-utils.mjs", "../../../../../../node_modules/ng-primitives/fesm2022/ng-primitives-internal.mjs", "../../../../../../node_modules/ng-primitives/fesm2022/ng-primitives-interactions.mjs", "../../../../../../node_modules/ng-primitives/fesm2022/ng-primitives-file-upload.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, DestroyRef, Injectable, signal, effect, Renderer2, ElementRef, afterNextRender, AfterRenderPhase } from '@angular/core';\nimport { coerceElement } from '@angular/cdk/coercion';\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Disposable functions are a way to manage timers, intervals, and event listeners\n * that should be cleared when a component is destroyed.\n *\n * This is heavily inspired by Headless UI disposables:\n * https://github.com/tailwindlabs/headlessui/blob/main/packages/%40headlessui-react/src/utils/disposables.ts\n */\nfunction injectDisposables() {\n  const destroyRef = inject(DestroyRef);\n  return {\n    /**\n     * Set a timeout that will be cleared when the component is destroyed.\n     * @param callback The callback to execute\n     * @param delay The delay before the callback is executed\n     * @returns A function to clear the timeout\n     */\n    setTimeout: (callback, delay) => {\n      const id = setTimeout(callback, delay);\n      const cleanup = () => clearTimeout(id);\n      destroyRef.onDestroy(cleanup);\n      return cleanup;\n    },\n    /**\n     * Set an interval that will be cleared when the component is destroyed.\n     * @param callback The callback to execute\n     * @param delay The delay before the callback is executed\n     * @param target\n     * @param type\n     * @param listener\n     * @param options\n     * @returns A function to clear the interval\n     */\n    addEventListener: (target, type, listener, options) => {\n      target.addEventListener(type, listener, options);\n      const cleanup = () => target.removeEventListener(type, listener, options);\n      destroyRef.onDestroy(cleanup);\n      return cleanup;\n    },\n    /**\n     * Set an interval that will be cleared when the component is destroyed.\n     * @param callback The callback to execute\n     * @param delay The delay before the callback is executed\n     * @returns A function to clear the interval\n     */\n    setInterval: (callback, delay) => {\n      const id = setInterval(callback, delay);\n      const cleanup = () => clearInterval(id);\n      destroyRef.onDestroy(cleanup);\n      return cleanup;\n    },\n    /**\n     * Set a requestAnimationFrame that will be cleared when the component is destroyed.\n     * @param callback The callback to execute\n     * @returns A function to clear the requestAnimationFrame\n     */\n    requestAnimationFrame: callback => {\n      const id = requestAnimationFrame(callback);\n      const cleanup = () => cancelAnimationFrame(id);\n      destroyRef.onDestroy(cleanup);\n      return cleanup;\n    }\n  };\n}\nclass FocusManager {\n  focus(element, origin = 'program') {\n    element = coerceElement(element);\n    switch (origin) {\n      case 'keyboard':\n        // trigger the focus-visible state for keyboard users\n        element.contentEditable = 'true';\n        element.focus({\n          preventScroll: true\n        });\n        element.contentEditable = 'false';\n        break;\n      default:\n        element.focus();\n        break;\n    }\n  }\n  static {\n    this.ɵfac = function FocusManager_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FocusManager)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FocusManager,\n      factory: FocusManager.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FocusManager, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Store a map of unique ids for elements so that there are no collisions.\n */\nconst uniqueIdMap = new Map();\n/**\n * Generate a unique id for an element\n * @param prefix - The prefix to use for the id\n * @returns The generated id\n */\nfunction uniqueId(prefix) {\n  const id = uniqueIdMap.get(prefix) ?? 0;\n  uniqueIdMap.set(prefix, id + 1);\n  return `${prefix}-${id}`;\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Listen for changes to a signal and call a function when the signal changes.\n * @param source\n * @param fn\n * @param options\n * @param options.injector\n * @internal\n */\nfunction onChange(source, fn, options) {\n  const previousValue = signal(source());\n  effect(() => {\n    const value = source();\n    if (value !== previousValue()) {\n      fn(value, previousValue());\n      previousValue.set(value);\n    }\n  }, {\n    allowSignalWrites: true,\n    injector: options?.injector\n  });\n  // call the fn with the initial value\n  fn(source(), null);\n}\n/**\n * Listen for changes to a boolean signal and call one of two functions when the signal changes.\n * @param source\n * @param onTrue\n * @param onFalse\n * @param options\n */\nfunction onBooleanChange(source, onTrue, onFalse, options) {\n  onChange(source, value => value ? onTrue?.() : onFalse?.(), options);\n}\n/**\n * A utility to sync the value of a signal with the Angular Forms onChange callback.\n * @param source The signal to sync with the onChange callback.\n * @param fn The onChange callback.\n * @param options The options for the effect.\n */\nfunction onFormControlChange(source, fn, options) {\n  const previousValue = signal(source());\n  effect(() => {\n    const value = source();\n    if (value !== previousValue() && value !== undefined && value !== null) {\n      fn?.(value);\n      previousValue.set(value);\n    }\n  }, {\n    allowSignalWrites: true,\n    injector: options?.injector\n  });\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Injects the dimensions of the element\n * @returns The dimensions of the element\n */\nfunction injectDimensions() {\n  const renderer = inject(Renderer2);\n  const element = inject(ElementRef);\n  const size = signal({\n    width: 0,\n    height: 0,\n    mounted: false\n  });\n  let transitionDuration, animationName;\n  afterNextRender(() => {\n    transitionDuration = element.nativeElement.style.transitionDuration;\n    animationName = element.nativeElement.style.animationName;\n  }, {\n    phase: AfterRenderPhase.EarlyRead\n  });\n  afterNextRender(() => {\n    // block any animations/transitions so the element renders at its full dimensions\n    renderer.setStyle(element.nativeElement, 'transitionDuration', '0s');\n    renderer.setStyle(element.nativeElement, 'animationName', 'none');\n  }, {\n    phase: AfterRenderPhase.Write\n  });\n  afterNextRender(() => {\n    const {\n      width,\n      height\n    } = element.nativeElement.getBoundingClientRect();\n    size.set({\n      width,\n      height,\n      mounted: true\n    });\n    // restore the original transition duration and animation name\n    renderer.setStyle(element.nativeElement, 'transitionDuration', transitionDuration);\n    renderer.setStyle(element.nativeElement, 'animationName', animationName);\n  }, {\n    phase: AfterRenderPhase.Read\n  });\n  return size;\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FocusManager, injectDimensions, injectDisposables, onBooleanChange, onChange, onFormControlChange, uniqueId };\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, inject, computed, signal, ElementRef, effect, PLATFORM_ID, Injectable } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { onBooleanChange, injectDisposables } from 'ng-primitives/utils';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst NgpDisabledToken = new InjectionToken('NgpDisabledToken');\n/**\n * Determine if we are in a disabled context.\n * @param disabled The disabled signal for the local context.\n * @returns The disabled signal.\n */\nfunction injectDisabled(disabled = signal(false)) {\n  const provider = inject(NgpDisabledToken, {\n    optional: true,\n    self: true\n  });\n  return computed(() => provider?.disabled() || disabled());\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction setupFocusVisible({\n  focusChange,\n  disabled = signal(false)\n}) {\n  /**\n   * Access the element that the directive is applied to.\n   */\n  const elementRef = inject(ElementRef);\n  /**\n   * Access the focus monitor.\n   */\n  const focusMonitor = inject(FocusMonitor);\n  /**\n   * Whether the element is currently focused.\n   */\n  const isFocused = signal(false);\n  // handle focus state\n  focusMonitor.monitor(elementRef.nativeElement).pipe(takeUntilDestroyed()).subscribe(origin =>\n  // null indicates the element was blurred\n  origin === null ? onBlur() : onFocus(origin));\n  // if the component becomes disabled and it is focused, hide the focus\n  onBooleanChange(disabled, () => focus(false));\n  // anytime the focus state changes we want to update the attribute\n  effect(() => isFocused() ? elementRef.nativeElement.setAttribute('data-focus-visible', '') : elementRef.nativeElement.removeAttribute('data-focus-visible'));\n  function onFocus(origin) {\n    if (disabled() || isFocused()) {\n      return;\n    }\n    // for some elements the focus visible state should always appear on focus\n    if (alwaysShowFocus()) {\n      focus(true);\n      return;\n    }\n    // if the focus origin is keyboard or program(focused programmatically), then the focus is visible\n    if (origin === 'keyboard' || origin === 'program') {\n      focus(true);\n      return;\n    }\n  }\n  function onBlur() {\n    if (disabled() || !isFocused()) {\n      return;\n    }\n    focus(false);\n  }\n  /**\n   * Trigger the focus signal along with the focusChange event.\n   */\n  function focus(value) {\n    if (isFocused() === value) {\n      return;\n    }\n    isFocused.set(value);\n    focusChange?.(value);\n  }\n  function alwaysShowFocus() {\n    const nonTextInputTypes = ['checkbox', 'radio', 'range', 'color', 'file', 'image', 'button', 'submit', 'reset'];\n    // if this is an input element and it is a text input\n    if (elementRef.nativeElement instanceof HTMLInputElement && !nonTextInputTypes.includes(elementRef.nativeElement.type)) {\n      return true;\n    }\n    // if this is a textarea\n    if (elementRef.nativeElement instanceof HTMLTextAreaElement) {\n      return true;\n    }\n    // if this is an element with contenteditable\n    if (elementRef.nativeElement.isContentEditable || elementRef.nativeElement.hasAttribute('contenteditable')) {\n      return true;\n    }\n    return false;\n  }\n  return {\n    isFocused\n  };\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * We use a service here as this value is a singleton\n * and allows us to register the dom events once.\n */\nclass GlobalPointerEvents {\n  constructor() {\n    /**\n     * Whether global mouse events should be ignored.\n     */\n    this.ignoreEmulatedMouseEvents = false;\n    /**\n     * Access the document.\n     */\n    this.document = inject(DOCUMENT);\n    /**\n     * Determine the platform id.\n     */\n    this.platformId = inject(PLATFORM_ID);\n    // we only want to setup events on the client\n    if (isPlatformBrowser(this.platformId)) {\n      this.setupGlobalTouchEvents();\n    }\n  }\n  setupGlobalTouchEvents() {\n    this.document.addEventListener('pointerup', this.handleGlobalPointerEvent.bind(this));\n    this.document.addEventListener('touchend', this.setGlobalIgnoreEmulatedMouseEvents.bind(this));\n  }\n  setGlobalIgnoreEmulatedMouseEvents() {\n    this.ignoreEmulatedMouseEvents = true;\n    // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n    // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n    // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n    // the distant future because a user previously touched the element.\n    setTimeout(() => this.ignoreEmulatedMouseEvents = false, 50);\n  }\n  handleGlobalPointerEvent(event) {\n    if (event.pointerType === 'touch') {\n      this.setGlobalIgnoreEmulatedMouseEvents();\n    }\n  }\n  static {\n    this.ɵfac = function GlobalPointerEvents_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GlobalPointerEvents)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: GlobalPointerEvents,\n      factory: GlobalPointerEvents.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GlobalPointerEvents, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n/**\n * Programatically add the hover functionality to an element.\n * This is useful in cases where we can't necessarily use a HostDirective,\n * because there is a chance the directive has already been used.\n */\nfunction setupHover({\n  hoverStart,\n  hoverEnd,\n  disabled = signal(false)\n}) {\n  /**\n   * Access the element.\n   */\n  const elementRef = inject(ElementRef);\n  /**\n   * Access the global pointer events handler.\n   */\n  const globalPointerEvents = inject(GlobalPointerEvents);\n  /**\n   * Access the disposable helper.\n   */\n  const disposables = injectDisposables();\n  /**\n   * Store the current hover state.\n   */\n  const hovered = signal(false);\n  /**\n   * Whether this element should ignore emulated mouse events.\n   */\n  let ignoreEmulatedMouseEvents = false;\n  /**\n   * Setup event listeners.\n   */\n  disposables.addEventListener(elementRef.nativeElement, 'pointerenter', onPointerEnter);\n  disposables.addEventListener(elementRef.nativeElement, 'pointerleave', onPointerLeave);\n  disposables.addEventListener(elementRef.nativeElement, 'touchstart', onTouchStart);\n  disposables.addEventListener(elementRef.nativeElement, 'mouseenter', onMouseEnter);\n  disposables.addEventListener(elementRef.nativeElement, 'mouseleave', onMouseLeave);\n  // anytime the disabled state changes to true, we must reset the hover state\n  if (disabled) {\n    onBooleanChange(disabled, reset);\n  }\n  // anytime the hover state changes we want to update the attribute\n  effect(() => hovered() ? elementRef.nativeElement.setAttribute('data-hover', '') : elementRef.nativeElement.removeAttribute('data-hover'));\n  /**\n   * Reset the hover state.\n   */\n  function reset() {\n    onHoverEnd('mouse');\n  }\n  /**\n   * Trigger the hover start events.\n   * @param event\n   * @param pointerType\n   */\n  function onHoverStart(event, pointerType) {\n    if (disabled() || pointerType === 'touch' || hovered() || !event.currentTarget?.contains(event.target)) {\n      return;\n    }\n    hovered.set(true);\n    hoverStart?.();\n  }\n  /**\n   * Trigger the hover end events.\n   * @param pointerType\n   */\n  function onHoverEnd(pointerType) {\n    if (pointerType === 'touch' || !hovered()) {\n      return;\n    }\n    hovered.set(false);\n    hoverEnd?.();\n  }\n  function onPointerEnter(event) {\n    if (globalPointerEvents.ignoreEmulatedMouseEvents && event.pointerType === 'mouse') {\n      return;\n    }\n    onHoverStart(event, event.pointerType);\n  }\n  function onPointerLeave(event) {\n    if (!disabled() && event.currentTarget?.contains(event.target)) {\n      onHoverEnd(event.pointerType);\n    }\n  }\n  function onTouchStart() {\n    ignoreEmulatedMouseEvents = true;\n  }\n  function onMouseEnter(event) {\n    if (!ignoreEmulatedMouseEvents && !globalPointerEvents.ignoreEmulatedMouseEvents) {\n      onHoverStart(event, 'mouse');\n    }\n    ignoreEmulatedMouseEvents = false;\n  }\n  function onMouseLeave(event) {\n    if (!disabled() && event.currentTarget?.contains(event.target)) {\n      onHoverEnd('mouse');\n    }\n  }\n  return {\n    hovered\n  };\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction setupPress({\n  pressStart,\n  pressEnd,\n  disabled = signal(false)\n}) {\n  /**\n   * Access the element reference.\n   */\n  const elementRef = inject(ElementRef);\n  /**\n   * Access the disposables helper.\n   */\n  const disposables = injectDisposables();\n  /**\n   * Whether the element is currently pressed.\n   */\n  const pressed = signal(false);\n  // setup event listeners\n  disposables.addEventListener(elementRef.nativeElement, 'pointerdown', onPointerDown);\n  // anytime the press state changes we want to update the attribute\n  effect(() => pressed() && !disabled() ? elementRef.nativeElement.setAttribute('data-press', '') : elementRef.nativeElement.removeAttribute('data-press'));\n  /**\n   * Reset the press state.\n   */\n  function reset() {\n    // if we are not pressing, then do nothing\n    if (!pressed()) {\n      return;\n    }\n    // clear any existing disposables\n    disposableListeners.forEach(dispose => dispose());\n    pressed.set(false);\n    pressEnd?.();\n  }\n  /**\n   * Store the list of disposables.\n   */\n  let disposableListeners = [];\n  function onPointerDown() {\n    if (disabled()) {\n      return;\n    }\n    // clear any existing disposables\n    disposableListeners.forEach(dispose => dispose());\n    // update the press state\n    pressed.set(true);\n    pressStart?.();\n    // setup global event listeners to catch events on elements outside the directive\n    const ownerDocument = elementRef.nativeElement.ownerDocument ?? document;\n    // if the pointer up event happens on any elements, then we are no longer pressing on this element\n    const pointerUp = disposables.addEventListener(ownerDocument, 'pointerup', () => reset(), false);\n    // Instead of relying on the `pointerleave` event, which is not consistently called on iOS Safari,\n    // we use the `pointermove` event to determine if we are still \"pressing\".\n    // By checking if the target is still within the element, we can determine if the press is ongoing.\n    const pointerMove = disposables.addEventListener(ownerDocument, 'pointermove', () => onPointerMove, false);\n    // if the pointer is cancelled, then we are no longer pressing on this element\n    const pointerCancel = disposables.addEventListener(ownerDocument, 'pointercancel', () => reset(), false);\n    disposableListeners = [pointerUp, pointerMove, pointerCancel];\n  }\n  function onPointerMove(event) {\n    if (elementRef.nativeElement !== event.target && !elementRef.nativeElement.contains(event.target)) {\n      reset();\n    }\n  }\n  return {\n    pressed\n  };\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Setup the button interactions without relying on HostDirectives.\n */\nfunction setupButton({\n  disabled = signal(false)\n}) {\n  setupHover({\n    disabled\n  });\n  setupPress({\n    disabled\n  });\n  setupFocusVisible({\n    disabled\n  });\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction setupFocus({\n  focus,\n  blur,\n  disabled = signal(false)\n}) {\n  /**\n   * Access the element reference.\n   */\n  const elementRef = inject(ElementRef);\n  /**\n   * Access the disposables helper.\n   */\n  const disposables = injectDisposables();\n  /**\n   * Whether the element is currently focused.\n   */\n  const isFocused = signal(false);\n  // setup event listeners\n  disposables.addEventListener(elementRef.nativeElement, 'focus', onFocus);\n  disposables.addEventListener(elementRef.nativeElement, 'blur', onBlur);\n  // anytime the focus state changes we want to update the attribute\n  effect(() => isFocused() ? elementRef.nativeElement.setAttribute('data-focus', '') : elementRef.nativeElement.removeAttribute('data-focus'));\n  /**\n   * Listen for focus events.\n   * @param event\n   */\n  function onFocus(event) {\n    if (disabled()) {\n      return;\n    }\n    const ownerDocument = event.target?.ownerDocument ?? document;\n    // ensure this element is still focused\n    if (ownerDocument.activeElement === event.target && event.currentTarget === event.target) {\n      focus?.();\n      isFocused.set(true);\n    }\n  }\n  /**\n   * Listen for blur events.\n   * @param event\n   */\n  function onBlur(event) {\n    if (disabled()) {\n      return;\n    }\n    if (event.currentTarget === event.target) {\n      blur?.();\n      isFocused.set(false);\n    }\n  }\n  return {\n    isFocused\n  };\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst NgpOrientationToken = new InjectionToken('NgpOrientationToken');\n/**\n * Determine if we are in a orientation context.\n * @param orientation The orientation signal for the local context.\n * @returns The orientation signal.\n */\nfunction injectOrientation(orientation = signal('horizontal')) {\n  const provider = inject(NgpOrientationToken, {\n    optional: true\n  });\n  return provider ? provider.orientation : orientation;\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * A utility service for injecting styles into the document.\n * Angular doesn't allow directives to specify styles, only components.\n * As we ship directives, occasionally we need to associate styles with them.\n * This service allows us to programmatically inject styles into the document.\n */\nclass StyleInjector {\n  constructor() {\n    /**\n     * Access the document.\n     */\n    this.document = inject(DOCUMENT);\n    /**\n     * Detect the platform.\n     */\n    this.platformId = inject(PLATFORM_ID);\n    /**\n     * Store the map of style elements with their unique identifiers.\n     */\n    this.styleElements = new Map();\n    if (isPlatformBrowser(this.platformId)) {\n      this.collectServerStyles();\n    }\n  }\n  /**\n   * Inject a style into the document.\n   * @param id The unique identifier for the style.\n   * @param style The style to inject.\n   */\n  add(id, style) {\n    if (this.styleElements.has(id)) {\n      return;\n    }\n    const styleElement = this.document.createElement('style');\n    styleElement.setAttribute('data-ngp-style', id);\n    styleElement.textContent = style;\n    this.document.head.appendChild(styleElement);\n    this.styleElements.set(id, styleElement);\n  }\n  /**\n   * Remove a style from the document.\n   * @param id The unique identifier for the style.\n   */\n  remove(id) {\n    const styleElement = this.styleElements.get(id);\n    if (styleElement) {\n      this.document.head.removeChild(styleElement);\n      this.styleElements.delete(id);\n    }\n  }\n  /**\n   * Collect any styles that were rendered by the server.\n   */\n  collectServerStyles() {\n    const styleElements = this.document.querySelectorAll('style[data-ngp-style]');\n    styleElements.forEach(styleElement => {\n      const id = styleElement.getAttribute('data-ngp-style');\n      if (id) {\n        this.styleElements.set(id, styleElement);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function StyleInjector_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || StyleInjector)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: StyleInjector,\n      factory: StyleInjector.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StyleInjector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nfunction injectStyleInjector() {\n  return inject(StyleInjector);\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgpDisabledToken, NgpOrientationToken, StyleInjector, injectDisabled, injectOrientation, injectStyleInjector, setupButton, setupFocus, setupFocusVisible, setupHover, setupPress };\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, inject, input, booleanAttribute, output, Directive, signal, HostListener } from '@angular/core';\nimport { injectDisabled, setupHover, setupFocus, setupFocusVisible, setupPress } from 'ng-primitives/internal';\nimport { injectDisposables } from 'ng-primitives/utils';\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst NgpHoverToken = new InjectionToken('NgpHoverToken');\n/**\n * Inject the Hover directive instance\n * @returns Hover directive instance\n */\nfunction injectHover() {\n  return inject(NgpHoverToken);\n}\n\n/**\n * A directive for normalizing hover events across the different browsers and devices.\n *\n * This is an Angular port of the useHover hook from\n * react-aria: https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/interactions/src/useHover.ts\n */\nclass NgpHover {\n  /**\n   * Setup the hover state.\n   */\n  constructor() {\n    /**\n     * Whether hoving should be disabled.\n     */\n    this.disabled = input(false, {\n      alias: 'ngpHoverDisabled',\n      transform: booleanAttribute\n    });\n    /**\n     * Access the disabled state from any parent.\n     */\n    this.isDisabled = injectDisabled(this.disabled);\n    /**\n     * Emit an event when hovering starts.\n     */\n    this.hoverStart = output({\n      alias: 'ngpHoverStart'\n    });\n    /**\n     * Emit an event when hovering ends.\n     */\n    this.hoverEnd = output({\n      alias: 'ngpHoverEnd'\n    });\n    /**\n     * Emit an event when the hover state changes.\n     */\n    this.hoverChange = output({\n      alias: 'ngpHover'\n    });\n    // setup the hover listener\n    setupHover({\n      hoverStart: () => {\n        this.hoverStart.emit();\n        this.hoverChange.emit(true);\n      },\n      hoverEnd: () => {\n        this.hoverEnd.emit();\n        this.hoverChange.emit(false);\n      },\n      disabled: this.isDisabled\n    });\n  }\n  static {\n    this.ɵfac = function NgpHover_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgpHover)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgpHover,\n      selectors: [[\"\", \"ngpHover\", \"\"]],\n      inputs: {\n        disabled: [1, \"ngpHoverDisabled\", \"disabled\"]\n      },\n      outputs: {\n        hoverStart: \"ngpHoverStart\",\n        hoverEnd: \"ngpHoverEnd\",\n        hoverChange: \"ngpHover\"\n      },\n      exportAs: [\"ngpHover\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NgpHoverToken,\n        useExisting: NgpHover\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgpHover, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[ngpHover]',\n      exportAs: 'ngpHover',\n      providers: [{\n        provide: NgpHoverToken,\n        useExisting: NgpHover\n      }]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst NgpFocusToken = new InjectionToken('NgpFocusToken');\n/**\n * Inject the Focus directive instance\n */\nfunction injectFocus() {\n  return inject(NgpFocusToken);\n}\n\n/**\n * This was inspired by the React Aria useFocus hook.\n * https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/interactions/src/useFocus.ts#L20\n */\nclass NgpFocus {\n  constructor() {\n    /**\n     * Whether listening for focus events is disabled.\n     */\n    this.disabled = input(false, {\n      alias: 'ngpFocusDisabled',\n      transform: booleanAttribute\n    });\n    /**\n     * Access the disabled state from any parent.\n     */\n    this.isDisabled = injectDisabled(this.disabled);\n    /**\n     * Emit when the focus state changes.\n     */\n    this.focus = output({\n      alias: 'ngpFocus'\n    });\n    // setup the focus listener\n    setupFocus({\n      disabled: this.isDisabled,\n      focus: () => this.focus.emit(true),\n      blur: () => this.focus.emit(false)\n    });\n  }\n  static {\n    this.ɵfac = function NgpFocus_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgpFocus)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgpFocus,\n      selectors: [[\"\", \"ngpFocus\", \"\"]],\n      inputs: {\n        disabled: [1, \"ngpFocusDisabled\", \"disabled\"]\n      },\n      outputs: {\n        focus: \"ngpFocus\"\n      },\n      exportAs: [\"ngpFocus\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NgpFocusToken,\n        useExisting: NgpFocus\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgpFocus, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[ngpFocus]',\n      exportAs: 'ngpFocus',\n      providers: [{\n        provide: NgpFocusToken,\n        useExisting: NgpFocus\n      }]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst NgpFocusVisibleToken = new InjectionToken('NgpFocusVisibleToken');\n/**\n * Inject the FocusVisible directive instance\n */\nfunction injectFocusVisible() {\n  return inject(NgpFocusVisibleToken);\n}\nclass NgpFocusVisible {\n  constructor() {\n    /**\n     * Whether focus events are listened to.\n     */\n    this.disabled = input(false, {\n      alias: 'ngpFocusVisibleDisabled',\n      transform: booleanAttribute\n    });\n    /**\n     * Access the disabled state from any parent.\n     */\n    this.isDisabled = injectDisabled(this.disabled);\n    /**\n     * Emit when the element is visually focused.\n     */\n    this.focusChange = output({\n      alias: 'ngpFocusVisible'\n    });\n    // setup the focus visible listener\n    setupFocusVisible({\n      disabled: this.isDisabled,\n      focusChange: value => this.focusChange.emit(value)\n    });\n  }\n  static {\n    this.ɵfac = function NgpFocusVisible_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgpFocusVisible)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgpFocusVisible,\n      selectors: [[\"\", \"ngpFocusVisible\", \"\"]],\n      inputs: {\n        disabled: [1, \"ngpFocusVisibleDisabled\", \"disabled\"]\n      },\n      outputs: {\n        focusChange: \"ngpFocusVisible\"\n      },\n      exportAs: [\"ngpFocusVisible\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NgpFocusVisibleToken,\n        useExisting: NgpFocusVisible\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgpFocusVisible, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[ngpFocusVisible]',\n      exportAs: 'ngpFocusVisible',\n      providers: [{\n        provide: NgpFocusVisibleToken,\n        useExisting: NgpFocusVisible\n      }]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst NgpPressToken = new InjectionToken('NgpPressToken');\n/**\n * Inject the Press directive instance\n */\nfunction injectPress() {\n  return inject(NgpPressToken);\n}\n\n/**\n * This was inpsired by Headless UI's active-press hook:\n * https://github.com/tailwindlabs/headlessui/blob/main/packages/%40headlessui-react/src/hooks/use-active-press.tsx\n */\nclass NgpPress {\n  constructor() {\n    /**\n     * Whether listening for press events is disabled.\n     */\n    this.disabled = input(false, {\n      alias: 'ngpPressDisabled',\n      transform: booleanAttribute\n    });\n    /**\n     * Access the disabled state from any parent.\n     */\n    this.isDisabled = injectDisabled(this.disabled);\n    /**\n     * Emit when the press begins.\n     */\n    this.pressStart = output({\n      alias: 'ngpPressStart'\n    });\n    /**\n     * Emit when the press ends.\n     */\n    this.pressEnd = output({\n      alias: 'ngpPressEnd'\n    });\n    /**\n     * Emit when the press changes.\n     */\n    this.pressChange = output({\n      alias: 'ngpPress'\n    });\n    // setup the press listener\n    setupPress({\n      pressStart: () => {\n        this.pressStart.emit();\n        this.pressChange.emit(true);\n      },\n      pressEnd: () => {\n        this.pressEnd.emit();\n        this.pressChange.emit(false);\n      },\n      disabled: this.isDisabled\n    });\n  }\n  static {\n    this.ɵfac = function NgpPress_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgpPress)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgpPress,\n      selectors: [[\"\", \"ngpPress\", \"\"]],\n      inputs: {\n        disabled: [1, \"ngpPressDisabled\", \"disabled\"]\n      },\n      outputs: {\n        pressStart: \"ngpPressStart\",\n        pressEnd: \"ngpPressEnd\",\n        pressChange: \"ngpPress\"\n      },\n      exportAs: [\"ngpPress\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NgpPressToken,\n        useExisting: NgpPress\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgpPress, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[ngpPress]',\n      exportAs: 'ngpPress',\n      providers: [{\n        provide: NgpPressToken,\n        useExisting: NgpPress\n      }]\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst NgpMoveToken = new InjectionToken('NgpMoveToken');\n/**\n * Inject the Move directive instance\n */\nfunction injectMove() {\n  return inject(NgpMoveToken);\n}\n\n/**\n * Inspired by react-aria useMove hook:\n * https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/interactions/src/useMove.ts\n */\nclass NgpMove {\n  constructor() {\n    /**\n     * Access the disposable helper.\n     */\n    this.disposables = injectDisposables();\n    /**\n     * Whether movement is disabled.\n     */\n    this.disabled = input(false, {\n      alias: 'ngpMoveDisabled',\n      transform: booleanAttribute\n    });\n    /**\n     * Access the disabled state from any parent.\n     */\n    this.isDisabled = injectDisabled(this.disabled);\n    /**\n     * Emit when the move event begins.\n     */\n    this.start = output({\n      alias: 'ngpMoveStart'\n    });\n    /**\n     * Emit when the element is moved.\n     */\n    this.move = output({\n      alias: 'ngpMove'\n    });\n    /**\n     * Emit when the move event ends.\n     */\n    this.end = output({\n      alias: 'ngpMoveEnd'\n    });\n    /**\n     * Whether the element is currently being moved.\n     */\n    this.isMoving = signal(false);\n    /**\n     * Store the last x position of the element.\n     */\n    this.x = null;\n    /**\n     * Store the last y position of the element.\n     */\n    this.y = null;\n    /**\n     * Store the id of the last pointer.\n     */\n    this.pointerId = null;\n    /**\n     * Store the disposable event listeners.\n     */\n    this.disposableListeners = [];\n  }\n  /**\n   * Handle a move start.\n   */\n  onMoveStart(event, pointerType) {\n    this.start.emit({\n      pointerType,\n      shiftKey: event.shiftKey,\n      ctrlKey: event.ctrlKey,\n      metaKey: event.metaKey,\n      altKey: event.altKey\n    });\n    this.isMoving.set(true);\n  }\n  /**\n   * Handle a move event.\n   */\n  onMove(event, pointerType, deltaX, deltaY) {\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n    this.move.emit({\n      deltaX,\n      deltaY,\n      pointerType,\n      shiftKey: event.shiftKey,\n      ctrlKey: event.ctrlKey,\n      metaKey: event.metaKey,\n      altKey: event.altKey\n    });\n  }\n  /**\n   * Handle a move end.\n   */\n  onMoveEnd(event, pointerType) {\n    this.end.emit({\n      pointerType,\n      shiftKey: event.shiftKey,\n      ctrlKey: event.ctrlKey,\n      metaKey: event.metaKey,\n      altKey: event.altKey\n    });\n    this.isMoving.set(false);\n  }\n  /**\n   * Handle the pointer down event.\n   */\n  onPointerDown(event) {\n    // ignore right-click or additional pointers\n    if (event.button !== 0 || this.pointerId !== null || this.isDisabled()) {\n      return;\n    }\n    // prevent the default behavior\n    event.preventDefault();\n    event.stopPropagation();\n    this.onMoveStart(event, event.pointerType);\n    // store the pointer id and initial position\n    this.pointerId = event.pointerId;\n    this.x = event.pageX;\n    this.y = event.pageY;\n    // add global event listeners\n    const pointerMove = this.disposables.addEventListener(window, 'pointermove', this.onPointerMove.bind(this), false);\n    const pointerUp = this.disposables.addEventListener(window, 'pointerup', this.onPointerUp.bind(this), false);\n    const pointerCancel = this.disposables.addEventListener(window, 'pointercancel', this.onPointerUp.bind(this), false);\n    // store the disposable event listeners\n    this.disposableListeners = [pointerMove, pointerUp, pointerCancel];\n  }\n  /**\n   * Handle the pointer up event.\n   */\n  onPointerUp(event) {\n    if (this.pointerId !== event.pointerId) {\n      return;\n    }\n    const pointerType = event.pointerType ?? 'mouse';\n    this.onMoveEnd(event, pointerType);\n    this.pointerId = null;\n    this.disposableListeners.forEach(dispose => dispose());\n  }\n  /**\n   * Handle the pointer move event.\n   */\n  onPointerMove(event) {\n    if (this.pointerId !== event.pointerId) {\n      return;\n    }\n    // Problems with PointerEvent#movementX/movementY:\n    // 1. it is always 0 on macOS Safari.\n    // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n    this.onMove(event, event.pointerType, event.pageX - (this.x ?? 0), event.pageY - (this.y ?? 0));\n    this.x = event.pageX;\n    this.y = event.pageY;\n  }\n  triggerKeyboardMove(event, deltaX, deltaY) {\n    if (this.isDisabled()) {\n      return;\n    }\n    this.onMoveStart(event, 'keyboard');\n    this.onMove(event, 'keyboard', deltaX, deltaY);\n    this.onMoveEnd(event, 'keyboard');\n  }\n  onArrowUp(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.triggerKeyboardMove(event, 0, -1);\n  }\n  onArrowDown(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.triggerKeyboardMove(event, 0, 1);\n  }\n  onArrowLeft(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.triggerKeyboardMove(event, -1, 0);\n  }\n  onArrowRight(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.triggerKeyboardMove(event, 1, 0);\n  }\n  static {\n    this.ɵfac = function NgpMove_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgpMove)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgpMove,\n      selectors: [[\"\", \"ngpMove\", \"\"]],\n      hostVars: 1,\n      hostBindings: function NgpMove_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"pointerdown\", function NgpMove_pointerdown_HostBindingHandler($event) {\n            return ctx.onPointerDown($event);\n          })(\"keydown.ArrowUp\", function NgpMove_keydown_ArrowUp_HostBindingHandler($event) {\n            return ctx.onArrowUp($event);\n          })(\"keydown.ArrowDown\", function NgpMove_keydown_ArrowDown_HostBindingHandler($event) {\n            return ctx.onArrowDown($event);\n          })(\"keydown.ArrowLeft\", function NgpMove_keydown_ArrowLeft_HostBindingHandler($event) {\n            return ctx.onArrowLeft($event);\n          })(\"keydown.ArrowRight\", function NgpMove_keydown_ArrowRight_HostBindingHandler($event) {\n            return ctx.onArrowRight($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-move\", ctx.isMoving() ? \"\" : null);\n        }\n      },\n      inputs: {\n        disabled: [1, \"ngpMoveDisabled\", \"disabled\"]\n      },\n      outputs: {\n        start: \"ngpMoveStart\",\n        move: \"ngpMove\",\n        end: \"ngpMoveEnd\"\n      },\n      exportAs: [\"ngpMove\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NgpMoveToken,\n        useExisting: NgpMove\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgpMove, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[ngpMove]',\n      exportAs: 'ngpMove',\n      providers: [{\n        provide: NgpMoveToken,\n        useExisting: NgpMove\n      }],\n      host: {\n        '[attr.data-move]': 'isMoving() ? \"\" : null'\n      }\n    }]\n  }], null, {\n    onPointerDown: [{\n      type: HostListener,\n      args: ['pointerdown', ['$event']]\n    }],\n    onArrowUp: [{\n      type: HostListener,\n      args: ['keydown.ArrowUp', ['$event']]\n    }],\n    onArrowDown: [{\n      type: HostListener,\n      args: ['keydown.ArrowDown', ['$event']]\n    }],\n    onArrowLeft: [{\n      type: HostListener,\n      args: ['keydown.ArrowLeft', ['$event']]\n    }],\n    onArrowRight: [{\n      type: HostListener,\n      args: ['keydown.ArrowRight', ['$event']]\n    }]\n  });\n})();\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgpFocus, NgpFocusToken, NgpFocusVisible, NgpFocusVisibleToken, NgpHover, NgpHoverToken, NgpMove, NgpMoveToken, NgpPress, NgpPressToken, injectHover };\n", "import { coerceStringArray } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, input, booleanAttribute, output, signal, Directive, HostListener } from '@angular/core';\nimport * as i1 from 'ng-primitives/interactions';\nimport { NgpHover, NgpFocusVisible, NgpPress } from 'ng-primitives/interactions';\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst NgpFileUploadToken = new InjectionToken('NgpFileUploadToken');\n/**\n * Inject the FileUpload directive instance\n */\nfunction injectFileUpload() {\n  return inject(NgpFileUploadToken);\n}\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass NgpFileUpload {\n  constructor() {\n    /**\n     * Access the host element.\n     */\n    this.elementRef = inject(ElementRef);\n    /**\n     * The accepted file types.\n     */\n    this.fileTypes = input(undefined, {\n      alias: 'ngpFileUploadFileTypes',\n      transform: coerceStringArray\n    });\n    /**\n     * Whether to allow multiple files to be selected.\n     */\n    this.multiple = input(false, {\n      alias: 'ngpFileUploadMultiple',\n      transform: booleanAttribute\n    });\n    /**\n     * Whether to allow the user to select directories.\n     */\n    this.directory = input(false, {\n      alias: 'ngpFileUploadDirectory',\n      transform: booleanAttribute\n    });\n    /**\n     * Whether drag-and-drop is enabled.\n     */\n    this.dragAndDrop = input(true, {\n      alias: 'ngpFileUploadDragDrop',\n      transform: booleanAttribute\n    });\n    /**\n     * Whether the file upload is disabled.\n     */\n    this.disabled = input(false, {\n      alias: 'ngpFileUploadDisabled',\n      transform: booleanAttribute\n    });\n    /**\n     * Emits when the user selects files.\n     */\n    this.selected = output({\n      alias: 'ngpFileUploadSelected'\n    });\n    /**\n     * Emits when the user drags a file over the file upload.\n     */\n    this.dragOver = output({\n      alias: 'ngpFileUploadDragOver'\n    });\n    /**\n     * Whether the user is currently dragging a file over the file upload.\n     */\n    this.isDragOver = signal(false);\n    /**\n     * Store the file input element.\n     */\n    this.input = document.createElement('input');\n    this.input.type = 'file';\n    this.input.addEventListener('change', () => this.selected.emit(this.input.files));\n  }\n  showFileDialog() {\n    if (this.disabled()) {\n      return;\n    }\n    const fileTypes = this.fileTypes()?.join(',');\n    if (fileTypes) {\n      this.input.accept = fileTypes;\n    }\n    this.input.multiple = this.multiple();\n    this.input.webkitdirectory = this.directory();\n    this.input.click();\n  }\n  onDragEnter(event) {\n    if (this.disabled() || !this.dragAndDrop()) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    this.isDragOver.set(true);\n    this.dragOver.emit(true);\n  }\n  onDragOver(event) {\n    if (this.disabled() || !this.dragAndDrop()) {\n      return;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    this.isDragOver.set(true);\n  }\n  onDragLeave(event) {\n    if (this.disabled() || !this.dragAndDrop() || !this.isDragOver()) {\n      return;\n    }\n    // if the element we are dragging over is a child of the file upload, ignore the event\n    if (this.elementRef.nativeElement.contains(event.relatedTarget)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    this.isDragOver.set(false);\n    this.dragOver.emit(false);\n  }\n  onDrop(event) {\n    if (this.disabled() || !this.dragAndDrop()) {\n      return;\n    }\n    event.preventDefault();\n    this.isDragOver.set(false);\n    this.dragOver.emit(false);\n    if (event.dataTransfer?.files) {\n      this.selected.emit(event.dataTransfer.files);\n    }\n  }\n  static {\n    this.ɵfac = function NgpFileUpload_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgpFileUpload)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgpFileUpload,\n      selectors: [[\"\", \"ngpFileUpload\", \"\"]],\n      hostVars: 2,\n      hostBindings: function NgpFileUpload_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function NgpFileUpload_click_HostBindingHandler() {\n            return ctx.showFileDialog();\n          })(\"dragenter\", function NgpFileUpload_dragenter_HostBindingHandler($event) {\n            return ctx.onDragEnter($event);\n          })(\"dragover\", function NgpFileUpload_dragover_HostBindingHandler($event) {\n            return ctx.onDragOver($event);\n          })(\"dragleave\", function NgpFileUpload_dragleave_HostBindingHandler($event) {\n            return ctx.onDragLeave($event);\n          })(\"drop\", function NgpFileUpload_drop_HostBindingHandler($event) {\n            return ctx.onDrop($event);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-disabled\", ctx.disabled() ? \"\" : null)(\"data-dragover\", ctx.isDragOver() ? \"\" : null);\n        }\n      },\n      inputs: {\n        fileTypes: [1, \"ngpFileUploadFileTypes\", \"fileTypes\"],\n        multiple: [1, \"ngpFileUploadMultiple\", \"multiple\"],\n        directory: [1, \"ngpFileUploadDirectory\", \"directory\"],\n        dragAndDrop: [1, \"ngpFileUploadDragDrop\", \"dragAndDrop\"],\n        disabled: [1, \"ngpFileUploadDisabled\", \"disabled\"]\n      },\n      outputs: {\n        selected: \"ngpFileUploadSelected\",\n        dragOver: \"ngpFileUploadDragOver\"\n      },\n      exportAs: [\"ngpFileUpload\"],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: NgpFileUploadToken,\n        useExisting: NgpFileUpload\n      }]), i0.ɵɵHostDirectivesFeature([i1.NgpHover, i1.NgpFocusVisible, i1.NgpPress])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgpFileUpload, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[ngpFileUpload]',\n      exportAs: 'ngpFileUpload',\n      providers: [{\n        provide: NgpFileUploadToken,\n        useExisting: NgpFileUpload\n      }],\n      host: {\n        '[attr.data-disabled]': 'disabled() ? \"\" : null',\n        '[attr.data-dragover]': 'isDragOver() ? \"\" : null'\n      },\n      hostDirectives: [NgpHover, NgpFocusVisible, NgpPress]\n    }]\n  }], () => [], {\n    showFileDialog: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onDragEnter: [{\n      type: HostListener,\n      args: ['dragenter', ['$event']]\n    }],\n    onDragOver: [{\n      type: HostListener,\n      args: ['dragover', ['$event']]\n    }],\n    onDragLeave: [{\n      type: HostListener,\n      args: ['dragleave', ['$event']]\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  });\n})();\n\n/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgpFileUpload, NgpFileUploadToken, injectFileUpload };\n"],
  "mappings": "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",
  "names": []
}
