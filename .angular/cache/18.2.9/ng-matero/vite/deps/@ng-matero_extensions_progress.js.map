{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ng-matero/extensions/fesm2022/mtxProgress.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"*\"];\nclass MtxProgress {\n  constructor() {\n    /** The progress's type. Can be `default`, `info`, `success`, `warning` or `danger`. */\n    this.type = 'default';\n    /** The value of the progress. */\n    this.value = 0;\n    /** Whether to apply the striped class. */\n    this.striped = false;\n    /** Whether to apply the animated class. */\n    this.animate = false;\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function MtxProgress_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxProgress)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MtxProgress,\n      selectors: [[\"mtx-progress\"]],\n      hostAttrs: [1, \"mtx-progress\"],\n      hostVars: 4,\n      hostBindings: function MtxProgress_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"height\", ctx.height)(\"background-color\", ctx.background);\n        }\n      },\n      inputs: {\n        type: \"type\",\n        value: \"value\",\n        height: \"height\",\n        color: \"color\",\n        foreground: \"foreground\",\n        background: \"background\",\n        striped: [2, \"striped\", \"striped\", booleanAttribute],\n        animate: [2, \"animate\", \"animate\", booleanAttribute]\n      },\n      exportAs: [\"mtxProgress\"],\n      standalone: true,\n      features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 2,\n      vars: 12,\n      consts: [[\"role\", \"progress-fill\", 1, \"mtx-progress-fill\"]],\n      template: function MtxProgress_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(\"mtx-progress-fill-\" + ctx.type);\n          i0.ɵɵstyleProp(\"width\", ctx.value, \"%\")(\"background-color\", ctx.foreground)(\"color\", ctx.color);\n          i0.ɵɵclassProp(\"mtx-progress-fill-striped\", ctx.striped)(\"mtx-progress-fill-animated\", ctx.animate);\n        }\n      },\n      styles: [\".mtx-progress{display:flex;height:16px;margin:8px 0;overflow:hidden;font-size:var(--mtx-progress-text-size, var(--mat-app-label-medium-size));border-radius:var(--mtx-progress-container-shape, var(--mat-app-corner-extra-small));background-color:var(--mtx-progress-track-color, var(--mat-app-surface-container))}.mtx-progress-fill{display:flex;flex-direction:column;justify-content:center;text-align:center;transition:width .6s ease;background-color:var(--mtx-progress-indicator-color, var(--mat-app-outline-variant));color:var(--mtx-progress-text-color, var(--mat-app-on-surface))}.mtx-progress-fill-info{background-color:var(--mtx-progress-info-indicator-color);color:var(--mtx-progress-info-text-color)}.mtx-progress-fill-success{background-color:var(--mtx-progress-success-indicator-color);color:var(--mtx-progress-success-text-color)}.mtx-progress-fill-warning{background-color:var(--mtx-progress-warning-indicator-color);color:var(--mtx-progress-warning-text-color)}.mtx-progress-fill-danger{background-color:var(--mtx-progress-danger-indicator-color);color:var(--mtx-progress-danger-text-color)}.mtx-progress-fill-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:16px 16px}.mtx-progress-fill-animated{animation:mtx-progress-fill-stripes 1s linear infinite}@media (prefers-reduced-motion: reduce){.mtx-progress-fill-animated{animation:none}}@keyframes mtx-progress-fill-stripes{0%{background-position:16px 0}to{background-position:0 0}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxProgress, [{\n    type: Component,\n    args: [{\n      selector: 'mtx-progress',\n      exportAs: 'mtxProgress',\n      host: {\n        'class': 'mtx-progress',\n        '[style.height]': 'height',\n        '[style.backgroundColor]': 'background'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: \"<div class=\\\"mtx-progress-fill\\\"\\n     [class]=\\\"'mtx-progress-fill-' + type\\\"\\n     [class.mtx-progress-fill-striped]=\\\"striped\\\"\\n     [class.mtx-progress-fill-animated]=\\\"animate\\\"\\n     [style.width.%]=\\\"value\\\"\\n     [style.background-color]=\\\"foreground\\\"\\n     [style.color]=\\\"color\\\"\\n     role=\\\"progress-fill\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n      styles: [\".mtx-progress{display:flex;height:16px;margin:8px 0;overflow:hidden;font-size:var(--mtx-progress-text-size, var(--mat-app-label-medium-size));border-radius:var(--mtx-progress-container-shape, var(--mat-app-corner-extra-small));background-color:var(--mtx-progress-track-color, var(--mat-app-surface-container))}.mtx-progress-fill{display:flex;flex-direction:column;justify-content:center;text-align:center;transition:width .6s ease;background-color:var(--mtx-progress-indicator-color, var(--mat-app-outline-variant));color:var(--mtx-progress-text-color, var(--mat-app-on-surface))}.mtx-progress-fill-info{background-color:var(--mtx-progress-info-indicator-color);color:var(--mtx-progress-info-text-color)}.mtx-progress-fill-success{background-color:var(--mtx-progress-success-indicator-color);color:var(--mtx-progress-success-text-color)}.mtx-progress-fill-warning{background-color:var(--mtx-progress-warning-indicator-color);color:var(--mtx-progress-warning-text-color)}.mtx-progress-fill-danger{background-color:var(--mtx-progress-danger-indicator-color);color:var(--mtx-progress-danger-text-color)}.mtx-progress-fill-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:16px 16px}.mtx-progress-fill-animated{animation:mtx-progress-fill-stripes 1s linear infinite}@media (prefers-reduced-motion: reduce){.mtx-progress-fill-animated{animation:none}}@keyframes mtx-progress-fill-stripes{0%{background-position:16px 0}to{background-position:0 0}}\\n\"]\n    }]\n  }], null, {\n    type: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    foreground: [{\n      type: Input\n    }],\n    background: [{\n      type: Input\n    }],\n    striped: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    animate: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MtxProgressModule {\n  /** @nocollapse */static {\n    this.ɵfac = function MtxProgressModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MtxProgressModule)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MtxProgressModule,\n      imports: [CommonModule, MtxProgress],\n      exports: [MtxProgress]\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MtxProgressModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MtxProgress],\n      exports: [MtxProgress]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MtxProgress, MtxProgressModule };\n"],
  "mappings": "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",
  "names": []
}
