/**
 * @fileoverview added by tsickle
 * Generated from: lib/colors.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var Colors = /** @class */ (function () {
    function Colors() {
    }
    /**
     * generateRandomPallete
     *
     * Generate random palette of colors
     * @param length. Number of colors in generate pallete
     * @returns Array
     */
    /**
     * generateRandomPallete
     *
     * Generate random palette of colors
     * @param {?} length
     * @return {?} Array
     */
    Colors.prototype.generateRandomPallete = /**
     * generateRandomPallete
     *
     * Generate random palette of colors
     * @param {?} length
     * @return {?} Array
     */
    function (length) {
        /** @type {?} */
        var letters = '0123456789ABCDEF';
        /** @type {?} */
        var pallete = new Array(length).fill('');
        return pallete.map((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }));
    };
    return Colors;
}());
export { Colors };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWNoYXJ0L2NvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9jb2xvcnMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBO0lBRUU7SUFBZ0IsQ0FBQztJQUVqQjs7Ozs7O09BTUc7Ozs7Ozs7O0lBQ0gsc0NBQXFCOzs7Ozs7O0lBQXJCLFVBQXNCLE1BQWM7O1lBQzVCLE9BQU8sR0FBRyxrQkFBa0I7O1lBQzVCLE9BQU8sR0FBRyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQzFDLE9BQU8sT0FBTyxDQUFDLEdBQUc7OztRQUFFOztnQkFDZCxLQUFLLEdBQUcsR0FBRztZQUNmLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzFCLEtBQUssSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUNsRDtZQUNELE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQyxFQUFDLENBQUM7SUFDTCxDQUFDO0lBQ0gsYUFBQztBQUFELENBQUMsQUF0QkQsSUFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBjbGFzcyBDb2xvcnMge1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgLyoqXG4gICAqIGdlbmVyYXRlUmFuZG9tUGFsbGV0ZVxuICAgKlxuICAgKiBHZW5lcmF0ZSByYW5kb20gcGFsZXR0ZSBvZiBjb2xvcnNcbiAgICogQHBhcmFtIGxlbmd0aC4gTnVtYmVyIG9mIGNvbG9ycyBpbiBnZW5lcmF0ZSBwYWxsZXRlXG4gICAqIEByZXR1cm5zIEFycmF5XG4gICAqL1xuICBnZW5lcmF0ZVJhbmRvbVBhbGxldGUobGVuZ3RoOiBudW1iZXIpOiBBcnJheTxzdHJpbmc+IHtcbiAgICBjb25zdCBsZXR0ZXJzID0gJzAxMjM0NTY3ODlBQkNERUYnO1xuICAgIGNvbnN0IHBhbGxldGUgPSBuZXcgQXJyYXkobGVuZ3RoKS5maWxsKCcnKTtcbiAgICByZXR1cm4gcGFsbGV0ZS5tYXAoICgpID0+IHtcbiAgICAgIGxldCBjb2xvciA9ICcjJztcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNjsgaSsrKSB7XG4gICAgICAgIGNvbG9yICs9IGxldHRlcnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTYpXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb2xvcjtcbiAgICB9KTtcbiAgfVxufVxuIl19