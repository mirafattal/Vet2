import { NgModule } from '@angular/core';
import { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter, MomentDateModule, } from '@angular/material-moment-adapter';
import { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';
import { DatetimeAdapter, MTX_DATETIME_FORMATS, } from '@ng-matero/extensions/core';
import { MomentDatetimeAdapter } from './moment-datetime-adapter';
import { MTX_MOMENT_DATETIME_FORMATS } from './moment-datetime-formats';
import * as i0 from "@angular/core";
export * from './moment-datetime-adapter';
export * from './moment-datetime-formats';
export class MomentDatetimeModule {
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: MomentDatetimeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.0.1", ngImport: i0, type: MomentDatetimeModule, imports: [MomentDateModule] }); }
    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: MomentDatetimeModule, providers: [{ provide: DatetimeAdapter, useClass: MomentDatetimeAdapter }], imports: [MomentDateModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: MomentDatetimeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [MomentDateModule],
                    providers: [{ provide: DatetimeAdapter, useClass: MomentDatetimeAdapter }],
                }]
        }] });
export function provideMomentDatetimeAdapter(formats = MTX_MOMENT_DATETIME_FORMATS, options) {
    const providers = [
        {
            provide: DateAdapter,
            useClass: MomentDateAdapter,
            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],
        },
        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },
        { provide: MTX_DATETIME_FORMATS, useValue: formats },
    ];
    if (options) {
        providers.push({ provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: options });
    }
    return providers;
}
export class MtxMomentDatetimeModule {
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: MtxMomentDatetimeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.0.1", ngImport: i0, type: MtxMomentDatetimeModule }); }
    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: MtxMomentDatetimeModule, providers: [provideMomentDatetimeAdapter()] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.1", ngImport: i0, type: MtxMomentDatetimeModule, decorators: [{
            type: NgModule,
            args: [{
                    providers: [provideMomentDatetimeAdapter()],
                }]
        }] });
/**
 * @deprecated Use `MtxMomentDatetimeModule` instead.
 */
export const MatMomentDatetimeModule = MtxMomentDatetimeModule;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9leHRlbnNpb25zLW1vbWVudC1hZGFwdGVyL2FkYXB0ZXIvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBWSxNQUFNLGVBQWUsQ0FBQztBQUNuRCxPQUFPLEVBQ0wsK0JBQStCLEVBRS9CLGlCQUFpQixFQUNqQixnQkFBZ0IsR0FDakIsTUFBTSxrQ0FBa0MsQ0FBQztBQUMxQyxPQUFPLEVBQUUsV0FBVyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RFLE9BQU8sRUFDTCxlQUFlLEVBQ2Ysb0JBQW9CLEdBRXJCLE1BQU0sNEJBQTRCLENBQUM7QUFDcEMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7O0FBRXhFLGNBQWMsMkJBQTJCLENBQUM7QUFDMUMsY0FBYywyQkFBMkIsQ0FBQztBQU0xQyxNQUFNLE9BQU8sb0JBQW9CO2lJQUFwQixvQkFBb0I7a0lBQXBCLG9CQUFvQixZQUhyQixnQkFBZ0I7a0lBR2Ysb0JBQW9CLGFBRnBCLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFFBQVEsRUFBRSxxQkFBcUIsRUFBRSxDQUFDLFlBRGhFLGdCQUFnQjs7MkZBR2Ysb0JBQW9CO2tCQUpoQyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLGdCQUFnQixDQUFDO29CQUMzQixTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLHFCQUFxQixFQUFFLENBQUM7aUJBQzNFOztBQUdELE1BQU0sVUFBVSw0QkFBNEIsQ0FDMUMsVUFBOEIsMkJBQTJCLEVBQ3pELE9BQXFDO0lBRXJDLE1BQU0sU0FBUyxHQUFlO1FBQzVCO1lBQ0UsT0FBTyxFQUFFLFdBQVc7WUFDcEIsUUFBUSxFQUFFLGlCQUFpQjtZQUMzQixJQUFJLEVBQUUsQ0FBQyxlQUFlLEVBQUUsK0JBQStCLENBQUM7U0FDekQ7UUFDRCxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLHFCQUFxQixFQUFFO1FBQzdELEVBQUUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUU7S0FDckQsQ0FBQztJQUVGLElBQUksT0FBTyxFQUFFLENBQUM7UUFDWixTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLCtCQUErQixFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7SUFFRCxPQUFPLFNBQVMsQ0FBQztBQUNuQixDQUFDO0FBS0QsTUFBTSxPQUFPLHVCQUF1QjtpSUFBdkIsdUJBQXVCO2tJQUF2Qix1QkFBdUI7a0lBQXZCLHVCQUF1QixhQUZ2QixDQUFDLDRCQUE0QixFQUFFLENBQUM7OzJGQUVoQyx1QkFBdUI7a0JBSG5DLFFBQVE7bUJBQUM7b0JBQ1IsU0FBUyxFQUFFLENBQUMsNEJBQTRCLEVBQUUsQ0FBQztpQkFDNUM7O0FBR0Q7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyx1QkFBdUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgTUFUX01PTUVOVF9EQVRFX0FEQVBURVJfT1BUSU9OUyxcbiAgTWF0TW9tZW50RGF0ZUFkYXB0ZXJPcHRpb25zLFxuICBNb21lbnREYXRlQWRhcHRlcixcbiAgTW9tZW50RGF0ZU1vZHVsZSxcbn0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwtbW9tZW50LWFkYXB0ZXInO1xuaW1wb3J0IHsgRGF0ZUFkYXB0ZXIsIE1BVF9EQVRFX0xPQ0FMRSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xuaW1wb3J0IHtcbiAgRGF0ZXRpbWVBZGFwdGVyLFxuICBNVFhfREFURVRJTUVfRk9STUFUUyxcbiAgTXR4RGF0ZXRpbWVGb3JtYXRzLFxufSBmcm9tICdAbmctbWF0ZXJvL2V4dGVuc2lvbnMvY29yZSc7XG5pbXBvcnQgeyBNb21lbnREYXRldGltZUFkYXB0ZXIgfSBmcm9tICcuL21vbWVudC1kYXRldGltZS1hZGFwdGVyJztcbmltcG9ydCB7IE1UWF9NT01FTlRfREFURVRJTUVfRk9STUFUUyB9IGZyb20gJy4vbW9tZW50LWRhdGV0aW1lLWZvcm1hdHMnO1xuXG5leHBvcnQgKiBmcm9tICcuL21vbWVudC1kYXRldGltZS1hZGFwdGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbW9tZW50LWRhdGV0aW1lLWZvcm1hdHMnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbTW9tZW50RGF0ZU1vZHVsZV0sXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogRGF0ZXRpbWVBZGFwdGVyLCB1c2VDbGFzczogTW9tZW50RGF0ZXRpbWVBZGFwdGVyIH1dLFxufSlcbmV4cG9ydCBjbGFzcyBNb21lbnREYXRldGltZU1vZHVsZSB7fVxuXG5leHBvcnQgZnVuY3Rpb24gcHJvdmlkZU1vbWVudERhdGV0aW1lQWRhcHRlcihcbiAgZm9ybWF0czogTXR4RGF0ZXRpbWVGb3JtYXRzID0gTVRYX01PTUVOVF9EQVRFVElNRV9GT1JNQVRTLFxuICBvcHRpb25zPzogTWF0TW9tZW50RGF0ZUFkYXB0ZXJPcHRpb25zXG4pOiBQcm92aWRlcltdIHtcbiAgY29uc3QgcHJvdmlkZXJzOiBQcm92aWRlcltdID0gW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IERhdGVBZGFwdGVyLFxuICAgICAgdXNlQ2xhc3M6IE1vbWVudERhdGVBZGFwdGVyLFxuICAgICAgZGVwczogW01BVF9EQVRFX0xPQ0FMRSwgTUFUX01PTUVOVF9EQVRFX0FEQVBURVJfT1BUSU9OU10sXG4gICAgfSxcbiAgICB7IHByb3ZpZGU6IERhdGV0aW1lQWRhcHRlciwgdXNlQ2xhc3M6IE1vbWVudERhdGV0aW1lQWRhcHRlciB9LFxuICAgIHsgcHJvdmlkZTogTVRYX0RBVEVUSU1FX0ZPUk1BVFMsIHVzZVZhbHVlOiBmb3JtYXRzIH0sXG4gIF07XG5cbiAgaWYgKG9wdGlvbnMpIHtcbiAgICBwcm92aWRlcnMucHVzaCh7IHByb3ZpZGU6IE1BVF9NT01FTlRfREFURV9BREFQVEVSX09QVElPTlMsIHVzZVZhbHVlOiBvcHRpb25zIH0pO1xuICB9XG5cbiAgcmV0dXJuIHByb3ZpZGVycztcbn1cblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbcHJvdmlkZU1vbWVudERhdGV0aW1lQWRhcHRlcigpXSxcbn0pXG5leHBvcnQgY2xhc3MgTXR4TW9tZW50RGF0ZXRpbWVNb2R1bGUge31cblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgYE10eE1vbWVudERhdGV0aW1lTW9kdWxlYCBpbnN0ZWFkLlxuICovXG5leHBvcnQgY29uc3QgTWF0TW9tZW50RGF0ZXRpbWVNb2R1bGUgPSBNdHhNb21lbnREYXRldGltZU1vZHVsZTtcbiJdfQ==