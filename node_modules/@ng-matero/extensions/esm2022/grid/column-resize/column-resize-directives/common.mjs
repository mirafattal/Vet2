import { ColumnResize, ColumnResizeNotifier, ColumnResizeNotifierSource, HeaderRowEventDispatcher, } from '@ng-matero/extensions/column-resize';
import { TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER, FLEX_RESIZE_STRATEGY_PROVIDER, } from '../resize-strategy';
const PROVIDERS = [
    ColumnResizeNotifier,
    HeaderRowEventDispatcher,
    ColumnResizeNotifierSource,
];
export const TABLE_PROVIDERS = [
    ...PROVIDERS,
    TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,
];
export const FLEX_PROVIDERS = [...PROVIDERS, FLEX_RESIZE_STRATEGY_PROVIDER];
export const TABLE_HOST_BINDINGS = {
    class: 'mat-column-resize-table',
};
export const FLEX_HOST_BINDINGS = {
    class: 'mat-column-resize-flex',
};
export class AbstractMatColumnResize extends ColumnResize {
    getTableHeight() {
        const table = this.elementRef.nativeElement;
        const tableParent = table.parentNode;
        const isTableContainer = tableParent.classList.contains('mat-table-container');
        return isTableContainer ? tableParent.offsetHeight : table.offsetHeight;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZXh0ZW5zaW9ucy9ncmlkL2NvbHVtbi1yZXNpemUvY29sdW1uLXJlc2l6ZS1kaXJlY3RpdmVzL2NvbW1vbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQ0wsWUFBWSxFQUNaLG9CQUFvQixFQUNwQiwwQkFBMEIsRUFDMUIsd0JBQXdCLEdBQ3pCLE1BQU0scUNBQXFDLENBQUM7QUFFN0MsT0FBTyxFQUNMLDJDQUEyQyxFQUMzQyw2QkFBNkIsR0FDOUIsTUFBTSxvQkFBb0IsQ0FBQztBQUU1QixNQUFNLFNBQVMsR0FBZTtJQUM1QixvQkFBb0I7SUFDcEIsd0JBQXdCO0lBQ3hCLDBCQUEwQjtDQUMzQixDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFlO0lBQ3pDLEdBQUcsU0FBUztJQUNaLDJDQUEyQztDQUM1QyxDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFlLENBQUMsR0FBRyxTQUFTLEVBQUUsNkJBQTZCLENBQUMsQ0FBQztBQUV4RixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRztJQUNqQyxLQUFLLEVBQUUseUJBQXlCO0NBQ2pDLENBQUM7QUFDRixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRztJQUNoQyxLQUFLLEVBQUUsd0JBQXdCO0NBQ2hDLENBQUM7QUFFRixNQUFNLE9BQWdCLHVCQUF3QixTQUFRLFlBQVk7SUFDaEUsY0FBYztRQUNaLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1FBQzVDLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQyxVQUF5QixDQUFDO1FBQ3BELE1BQU0sZ0JBQWdCLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUMvRSxPQUFPLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDO0lBQzFFLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7XG4gIENvbHVtblJlc2l6ZSxcbiAgQ29sdW1uUmVzaXplTm90aWZpZXIsXG4gIENvbHVtblJlc2l6ZU5vdGlmaWVyU291cmNlLFxuICBIZWFkZXJSb3dFdmVudERpc3BhdGNoZXIsXG59IGZyb20gJ0BuZy1tYXRlcm8vZXh0ZW5zaW9ucy9jb2x1bW4tcmVzaXplJztcblxuaW1wb3J0IHtcbiAgVEFCTEVfTEFZT1VUX0ZJWEVEX1JFU0laRV9TVFJBVEVHWV9QUk9WSURFUixcbiAgRkxFWF9SRVNJWkVfU1RSQVRFR1lfUFJPVklERVIsXG59IGZyb20gJy4uL3Jlc2l6ZS1zdHJhdGVneSc7XG5cbmNvbnN0IFBST1ZJREVSUzogUHJvdmlkZXJbXSA9IFtcbiAgQ29sdW1uUmVzaXplTm90aWZpZXIsXG4gIEhlYWRlclJvd0V2ZW50RGlzcGF0Y2hlcixcbiAgQ29sdW1uUmVzaXplTm90aWZpZXJTb3VyY2UsXG5dO1xuZXhwb3J0IGNvbnN0IFRBQkxFX1BST1ZJREVSUzogUHJvdmlkZXJbXSA9IFtcbiAgLi4uUFJPVklERVJTLFxuICBUQUJMRV9MQVlPVVRfRklYRURfUkVTSVpFX1NUUkFURUdZX1BST1ZJREVSLFxuXTtcbmV4cG9ydCBjb25zdCBGTEVYX1BST1ZJREVSUzogUHJvdmlkZXJbXSA9IFsuLi5QUk9WSURFUlMsIEZMRVhfUkVTSVpFX1NUUkFURUdZX1BST1ZJREVSXTtcblxuZXhwb3J0IGNvbnN0IFRBQkxFX0hPU1RfQklORElOR1MgPSB7XG4gIGNsYXNzOiAnbWF0LWNvbHVtbi1yZXNpemUtdGFibGUnLFxufTtcbmV4cG9ydCBjb25zdCBGTEVYX0hPU1RfQklORElOR1MgPSB7XG4gIGNsYXNzOiAnbWF0LWNvbHVtbi1yZXNpemUtZmxleCcsXG59O1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQWJzdHJhY3RNYXRDb2x1bW5SZXNpemUgZXh0ZW5kcyBDb2x1bW5SZXNpemUge1xuICBnZXRUYWJsZUhlaWdodCgpIHtcbiAgICBjb25zdCB0YWJsZSA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICAgIGNvbnN0IHRhYmxlUGFyZW50ID0gdGFibGUucGFyZW50Tm9kZSBhcyBIVE1MRWxlbWVudDtcbiAgICBjb25zdCBpc1RhYmxlQ29udGFpbmVyID0gdGFibGVQYXJlbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdtYXQtdGFibGUtY29udGFpbmVyJyk7XG4gICAgcmV0dXJuIGlzVGFibGVDb250YWluZXIgPyB0YWJsZVBhcmVudC5vZmZzZXRIZWlnaHQgOiB0YWJsZS5vZmZzZXRIZWlnaHQ7XG4gIH1cbn1cbiJdfQ==