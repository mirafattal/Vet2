import { NgModule } from '@angular/core';
import { NgDropdownPanelComponent } from './ng-dropdown-panel.component';
import { NgOptionComponent } from './ng-option.component';
import { NgSelectComponent, SELECTION_MODEL_FACTORY } from './ng-select.component';
import { NgFooterTemplateDirective, NgHeaderTemplateDirective, NgItemLabelDirective, NgLabelTemplateDirective, NgLoadingSpinnerTemplateDirective, NgLoadingTextTemplateDirective, NgMultiLabelTemplateDirective, NgNotFoundTemplateDirective, NgOptgroupTemplateDirective, NgOptionTemplateDirective, NgTagTemplateDirective, NgTypeToSearchTemplateDirective, NgPlaceholderTemplateDirective, } from './ng-templates.directive';
import { DefaultSelectionModelFactory } from "./selection-model";
import * as i0 from "@angular/core";
export class NgSelectModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: NgSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.0.0", ngImport: i0, type: NgSelectModule, imports: [NgDropdownPanelComponent,
            NgOptionComponent,
            NgSelectComponent,
            NgOptgroupTemplateDirective,
            NgOptionTemplateDirective,
            NgLabelTemplateDirective,
            NgMultiLabelTemplateDirective,
            NgHeaderTemplateDirective,
            NgFooterTemplateDirective,
            NgPlaceholderTemplateDirective,
            NgNotFoundTemplateDirective,
            NgTypeToSearchTemplateDirective,
            NgLoadingTextTemplateDirective,
            NgTagTemplateDirective,
            NgLoadingSpinnerTemplateDirective,
            NgItemLabelDirective], exports: [NgSelectComponent,
            NgOptionComponent,
            NgOptgroupTemplateDirective,
            NgOptionTemplateDirective,
            NgLabelTemplateDirective,
            NgMultiLabelTemplateDirective,
            NgHeaderTemplateDirective,
            NgFooterTemplateDirective,
            NgPlaceholderTemplateDirective,
            NgNotFoundTemplateDirective,
            NgTypeToSearchTemplateDirective,
            NgLoadingTextTemplateDirective,
            NgTagTemplateDirective,
            NgLoadingSpinnerTemplateDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: NgSelectModule, providers: [{ provide: SELECTION_MODEL_FACTORY, useValue: DefaultSelectionModelFactory }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: NgSelectModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        NgDropdownPanelComponent,
                        NgOptionComponent,
                        NgSelectComponent,
                        NgOptgroupTemplateDirective,
                        NgOptionTemplateDirective,
                        NgLabelTemplateDirective,
                        NgMultiLabelTemplateDirective,
                        NgHeaderTemplateDirective,
                        NgFooterTemplateDirective,
                        NgPlaceholderTemplateDirective,
                        NgNotFoundTemplateDirective,
                        NgTypeToSearchTemplateDirective,
                        NgLoadingTextTemplateDirective,
                        NgTagTemplateDirective,
                        NgLoadingSpinnerTemplateDirective,
                        NgItemLabelDirective,
                    ],
                    exports: [
                        NgSelectComponent,
                        NgOptionComponent,
                        NgOptgroupTemplateDirective,
                        NgOptionTemplateDirective,
                        NgLabelTemplateDirective,
                        NgMultiLabelTemplateDirective,
                        NgHeaderTemplateDirective,
                        NgFooterTemplateDirective,
                        NgPlaceholderTemplateDirective,
                        NgNotFoundTemplateDirective,
                        NgTypeToSearchTemplateDirective,
                        NgLoadingTextTemplateDirective,
                        NgTagTemplateDirective,
                        NgLoadingSpinnerTemplateDirective,
                    ],
                    providers: [{ provide: SELECTION_MODEL_FACTORY, useValue: DefaultSelectionModelFactory }],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc2VsZWN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9uZy1zZWxlY3QvbGliL25nLXNlbGVjdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUN6RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNuRixPQUFPLEVBQ04seUJBQXlCLEVBQ3pCLHlCQUF5QixFQUN6QixvQkFBb0IsRUFDakIsd0JBQXdCLEVBQ3hCLGlDQUFpQyxFQUNqQyw4QkFBOEIsRUFDOUIsNkJBQTZCLEVBQzdCLDJCQUEyQixFQUMzQiwyQkFBMkIsRUFDM0IseUJBQXlCLEVBQ3pCLHNCQUFzQixFQUN6QiwrQkFBK0IsRUFDL0IsOEJBQThCLEdBQzlCLE1BQU0sMEJBQTBCLENBQUM7QUFDbEMsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBdUNqRSxNQUFNLE9BQU8sY0FBYzs4R0FBZCxjQUFjOytHQUFkLGNBQWMsWUFuQ3pCLHdCQUF3QjtZQUN4QixpQkFBaUI7WUFDakIsaUJBQWlCO1lBQ2pCLDJCQUEyQjtZQUMzQix5QkFBeUI7WUFDekIsd0JBQXdCO1lBQ3hCLDZCQUE2QjtZQUM3Qix5QkFBeUI7WUFDekIseUJBQXlCO1lBQ3pCLDhCQUE4QjtZQUM5QiwyQkFBMkI7WUFDM0IsK0JBQStCO1lBQy9CLDhCQUE4QjtZQUM5QixzQkFBc0I7WUFDdEIsaUNBQWlDO1lBQ2pDLG9CQUFvQixhQUdwQixpQkFBaUI7WUFDakIsaUJBQWlCO1lBQ2pCLDJCQUEyQjtZQUMzQix5QkFBeUI7WUFDekIsd0JBQXdCO1lBQ3hCLDZCQUE2QjtZQUM3Qix5QkFBeUI7WUFDekIseUJBQXlCO1lBQ3pCLDhCQUE4QjtZQUM5QiwyQkFBMkI7WUFDM0IsK0JBQStCO1lBQy9CLDhCQUE4QjtZQUM5QixzQkFBc0I7WUFDdEIsaUNBQWlDOytHQUl0QixjQUFjLGFBRmYsQ0FBQyxFQUFFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsNEJBQTRCLEVBQUUsQ0FBQzs7MkZBRTdFLGNBQWM7a0JBckMxQixRQUFRO21CQUFDO29CQUNULE9BQU8sRUFBRTt3QkFDUix3QkFBd0I7d0JBQ3hCLGlCQUFpQjt3QkFDakIsaUJBQWlCO3dCQUNqQiwyQkFBMkI7d0JBQzNCLHlCQUF5Qjt3QkFDekIsd0JBQXdCO3dCQUN4Qiw2QkFBNkI7d0JBQzdCLHlCQUF5Qjt3QkFDekIseUJBQXlCO3dCQUN6Qiw4QkFBOEI7d0JBQzlCLDJCQUEyQjt3QkFDM0IsK0JBQStCO3dCQUMvQiw4QkFBOEI7d0JBQzlCLHNCQUFzQjt3QkFDdEIsaUNBQWlDO3dCQUNqQyxvQkFBb0I7cUJBQ3BCO29CQUNELE9BQU8sRUFBRTt3QkFDUixpQkFBaUI7d0JBQ2pCLGlCQUFpQjt3QkFDakIsMkJBQTJCO3dCQUMzQix5QkFBeUI7d0JBQ3pCLHdCQUF3Qjt3QkFDeEIsNkJBQTZCO3dCQUM3Qix5QkFBeUI7d0JBQ3pCLHlCQUF5Qjt3QkFDekIsOEJBQThCO3dCQUM5QiwyQkFBMkI7d0JBQzNCLCtCQUErQjt3QkFDL0IsOEJBQThCO3dCQUM5QixzQkFBc0I7d0JBQ3RCLGlDQUFpQztxQkFDakM7b0JBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsUUFBUSxFQUFFLDRCQUE0QixFQUFFLENBQUM7aUJBQ3pGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nRHJvcGRvd25QYW5lbENvbXBvbmVudCB9IGZyb20gJy4vbmctZHJvcGRvd24tcGFuZWwuY29tcG9uZW50JztcbmltcG9ydCB7IE5nT3B0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9uZy1vcHRpb24uY29tcG9uZW50JztcbmltcG9ydCB7IE5nU2VsZWN0Q29tcG9uZW50LCBTRUxFQ1RJT05fTU9ERUxfRkFDVE9SWSB9IGZyb20gJy4vbmctc2VsZWN0LmNvbXBvbmVudCc7XG5pbXBvcnQge1xuXHROZ0Zvb3RlclRlbXBsYXRlRGlyZWN0aXZlLFxuXHROZ0hlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuXHROZ0l0ZW1MYWJlbERpcmVjdGl2ZSxcbiAgICBOZ0xhYmVsVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgTmdMb2FkaW5nU3Bpbm5lclRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIE5nTG9hZGluZ1RleHRUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBOZ011bHRpTGFiZWxUZW1wbGF0ZURpcmVjdGl2ZSxcbiAgICBOZ05vdEZvdW5kVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgTmdPcHRncm91cFRlbXBsYXRlRGlyZWN0aXZlLFxuICAgIE5nT3B0aW9uVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgTmdUYWdUZW1wbGF0ZURpcmVjdGl2ZSxcblx0TmdUeXBlVG9TZWFyY2hUZW1wbGF0ZURpcmVjdGl2ZSxcblx0TmdQbGFjZWhvbGRlclRlbXBsYXRlRGlyZWN0aXZlLFxufSBmcm9tICcuL25nLXRlbXBsYXRlcy5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRGVmYXVsdFNlbGVjdGlvbk1vZGVsRmFjdG9yeSB9IGZyb20gXCIuL3NlbGVjdGlvbi1tb2RlbFwiO1xuXG5ATmdNb2R1bGUoe1xuXHRpbXBvcnRzOiBbXG5cdFx0TmdEcm9wZG93blBhbmVsQ29tcG9uZW50LFxuXHRcdE5nT3B0aW9uQ29tcG9uZW50LFxuXHRcdE5nU2VsZWN0Q29tcG9uZW50LFxuXHRcdE5nT3B0Z3JvdXBUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ09wdGlvblRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nTGFiZWxUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ011bHRpTGFiZWxUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ0hlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdQbGFjZWhvbGRlclRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nTm90Rm91bmRUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ1R5cGVUb1NlYXJjaFRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nTG9hZGluZ1RleHRUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ1RhZ1RlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nTG9hZGluZ1NwaW5uZXJUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ0l0ZW1MYWJlbERpcmVjdGl2ZSxcblx0XSxcblx0ZXhwb3J0czogW1xuXHRcdE5nU2VsZWN0Q29tcG9uZW50LFxuXHRcdE5nT3B0aW9uQ29tcG9uZW50LFxuXHRcdE5nT3B0Z3JvdXBUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ09wdGlvblRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nTGFiZWxUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ011bHRpTGFiZWxUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ0hlYWRlclRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdQbGFjZWhvbGRlclRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nTm90Rm91bmRUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ1R5cGVUb1NlYXJjaFRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nTG9hZGluZ1RleHRUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ1RhZ1RlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nTG9hZGluZ1NwaW5uZXJUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XSxcblx0cHJvdmlkZXJzOiBbeyBwcm92aWRlOiBTRUxFQ1RJT05fTU9ERUxfRkFDVE9SWSwgdXNlVmFsdWU6IERlZmF1bHRTZWxlY3Rpb25Nb2RlbEZhY3RvcnkgfV0sXG59KVxuZXhwb3J0IGNsYXNzIE5nU2VsZWN0TW9kdWxlIHt9XG4iXX0=