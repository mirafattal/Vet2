import { Signal, InputSignal, InputSignalWithTransform } from '@angular/core';
import { NgProgressRef } from './ng-progress-ref';
import * as i0 from "@angular/core";
import * as i1 from "./ng-progress-ref";
export declare class NgProgressbar {
    private readonly config;
    /** Progress bar worker */
    progressRef: NgProgressRef;
    flat: InputSignalWithTransform<boolean, boolean | string>;
    spinner: InputSignalWithTransform<boolean, boolean | string>;
    relative: InputSignalWithTransform<boolean, boolean | string>;
    spinnerPosition: InputSignal<'left' | 'right'>;
    direction: InputSignal<'ltr+' | 'ltr-' | 'rtl+' | 'rtl-'>;
    progressTransform: Signal<string>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgProgressbar, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgProgressbar, "ng-progress", ["ngProgress"], { "flat": { "alias": "flat"; "required": false; "isSignal": true; }; "spinner": { "alias": "spinner"; "required": false; "isSignal": true; }; "relative": { "alias": "relative"; "required": false; "isSignal": true; }; "spinnerPosition": { "alias": "spinnerPosition"; "required": false; "isSignal": true; }; "direction": { "alias": "direction"; "required": false; "isSignal": true; }; }, {}, never, never, true, [{ directive: typeof i1.NgProgressRef; inputs: { "min": "min"; "max": "max"; "speed": "speed"; "trickleSpeed": "trickleSpeed"; "fadeOutSpeed": "fadeOutSpeed"; "debounceTime": "debounceTime"; }; outputs: { "started": "started"; "completed": "completed"; }; }]>;
}
