import { Component, inject, computed, booleanAttribute, input, ChangeDetectionStrategy } from '@angular/core';
import { NgProgressRef } from './ng-progress-ref';
import { NG_PROGRESS_OPTIONS } from './ng-progress.model';
import * as i0 from "@angular/core";
import * as i1 from "./ng-progress-ref";
export class NgProgressbar {
    constructor() {
        this.config = inject(NG_PROGRESS_OPTIONS);
        /** Progress bar worker */
        this.progressRef = inject(NgProgressRef, { host: true, self: true });
        this.flat = input(this.config.flat, { transform: booleanAttribute });
        this.spinner = input(this.config.spinner, { transform: booleanAttribute });
        this.relative = input(this.config.relative, { transform: booleanAttribute });
        this.spinnerPosition = input(this.config.spinnerPosition);
        this.direction = input(this.config.direction);
        this.progressTransform = computed(() => {
            return `translate3d(${this.progressRef.progress()}%,0,0)`;
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.12", ngImport: i0, type: NgProgressbar, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.12", type: NgProgressbar, isStandalone: true, selector: "ng-progress", inputs: { flat: { classPropertyName: "flat", publicName: "flat", isSignal: true, isRequired: false, transformFunction: null }, spinner: { classPropertyName: "spinner", publicName: "spinner", isSignal: true, isRequired: false, transformFunction: null }, relative: { classPropertyName: "relative", publicName: "relative", isSignal: true, isRequired: false, transformFunction: null }, spinnerPosition: { classPropertyName: "spinnerPosition", publicName: "spinnerPosition", isSignal: true, isRequired: false, transformFunction: null }, direction: { classPropertyName: "direction", publicName: "direction", isSignal: true, isRequired: false, transformFunction: null } }, host: { attributes: { "role": "progressbar" }, properties: { "class.ng-progress-bar": "true", "class.ng-progress-bar-active": "progressRef.active()", "class.ng-progress-bar-relative": "relative()", "attr.spinnerPosition": "spinnerPosition()", "attr.direction": "direction()", "style.--_ng-progress-speed": "progressRef.speed() + \"ms\"", "style.--_ng-progress-fade-out-speed": "progressRef.fadeOutSpeed() + \"ms\"" } }, exportAs: ["ngProgress"], hostDirectives: [{ directive: i1.NgProgressRef, inputs: ["min", "min", "max", "max", "speed", "speed", "trickleSpeed", "trickleSpeed", "fadeOutSpeed", "fadeOutSpeed", "debounceTime", "debounceTime"], outputs: ["started", "started", "completed", "completed"] }], ngImport: i0, template: `
    <div class="ng-progress-bar-wrapper">
      <div class="ng-bar-placeholder">
        <div class="ng-bar" [style.transform]="progressTransform()">
          @if (!flat()) {
            <div class="ng-meteor"></div>
          }
        </div>
      </div>
      @if (spinner()) {
        <div class="ng-spinner">
          <div class="ng-spinner-icon"></div>
        </div>
      }
    </div>
  `, isInline: true, styles: [":host{--_ng-progress-thickness: var(--ng-progress-thickness, 2);--_ng-progress-thickness-px: calc(var(--_ng-progress-thickness) * 1px);--_ng-progress-thickness-add-one: calc(var(--_ng-progress-thickness) + 1);--_ng-progress-meteor-position-px: calc(var(--_ng-progress-thickness-add-one) * -1px);--_ng-progress-color: var(--ng-progress-color, #1B95E0);--_ng-progress-holder-color: var(--ng-progress-holder-color, transparent);--_ng-progress-ease: var(--ng-progress-ease, linear);--_ng-progress-spinner-thickness: var(--ng-progress-spinner-thickness, 2);--_ng-progress-spinner-thickness-px: calc(var(--_ng-progress-spinner-thickness) * 1px);--_ng-progress-spinner-spacing: var(--ng-progress-spinner-spacing, 15);--_ng-progress-spinner-spacing-px: calc(var(--_ng-progress-spinner-spacing) * 1px);--_ng-progress-spinner-size: var(--ng-progress-spinner-size, 18);--_ng-progress-spinner-size-px: calc(var(--_ng-progress-spinner-size) * 1px);--_ng-progress-spinner-speed: var(--ng-progress-spinner-speed, .25s);z-index:999999;pointer-events:none}:host.ng-progress-bar-active .ng-progress-bar-wrapper{filter:alpha(opacity=100);opacity:1;transition:none}:host.ng-progress-bar-active .ng-bar{transition:all var(--_ng-progress-speed) var(--_ng-progress-ease)}:host.ng-progress-bar-relative .ng-progress-bar-wrapper{position:relative}:host[direction=\"ltr+\"] .ng-meteor,:host[direction=ltr-] .ng-meteor{rotate:calc(var(--_ng-progress-thickness-add-one) * 1deg)}:host[direction=\"ltr+\"] .ng-bar,:host[direction=\"rtl+\"] .ng-bar{margin-left:-100%}:host[direction=\"ltr+\"] .ng-meteor,:host[direction=\"rtl+\"] .ng-meteor{right:0}:host[direction=\"ltr+\"] .ng-meteor,:host[direction=rtl-] .ng-meteor{top:var(--_ng-progress-meteor-position-px)}:host[direction=ltr-] .ng-meteor,:host[direction=\"rtl+\"] .ng-meteor{bottom:var(--_ng-progress-meteor-position-px)}:host[direction=ltr-] .ng-bar-placeholder,:host[direction=\"rtl+\"] .ng-bar-placeholder{transform:rotate(180deg)}:host[direction=ltr-] .ng-spinner-icon,:host[direction=\"rtl+\"] .ng-spinner-icon{animation-direction:reverse}:host[direction=\"rtl+\"] .ng-meteor,:host[direction=rtl-] .ng-meteor{rotate:calc(var(--_ng-progress-thickness-add-one) * -1deg)}:host .ng-spinner{top:var(--_ng-progress-spinner-spacing-px)}:host[spinnerPosition=left] .ng-spinner{left:var(--_ng-progress-spinner-spacing-px)}:host[spinnerPosition=right] .ng-spinner{right:var(--_ng-progress-spinner-spacing-px)}.ng-progress-bar-wrapper{position:fixed;z-index:999999;top:0;left:0;width:100%;transform:scale(1);filter:alpha(opacity=0);opacity:0;transition:opacity var(--_ng-progress-fade-out-speed) linear}.ng-bar-placeholder{position:absolute;height:var(--_ng-progress-thickness-px);width:100%}.ng-bar{width:100%;height:100%;transform:translate(-100%,0,0);background:var(--_ng-progress-color)}.ng-meteor{display:block;position:absolute;width:100px;height:100%;opacity:1;box-shadow:0 0 10px var(--_ng-progress-color),0 0 5px var(--_ng-progress-color)}.ng-spinner{position:absolute;display:block;z-index:1031;top:10px}.ng-spinner-icon{box-sizing:border-box;animation:spinner-animation var(--_ng-progress-spinner-speed) linear infinite;border-style:solid;border-color:transparent;border-radius:50%;border-top-color:var(--_ng-progress-color);border-left-color:var(--_ng-progress-color);width:var(--_ng-progress-spinner-size-px);height:var(--_ng-progress-spinner-size-px);border-width:var(--_ng-progress-spinner-thickness-px)}@keyframes spinner-animation{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.12", ngImport: i0, type: NgProgressbar, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'ng-progress', exportAs: 'ngProgress', host: {
                        'role': 'progressbar',
                        '[class.ng-progress-bar]': 'true',
                        '[class.ng-progress-bar-active]': 'progressRef.active()',
                        '[class.ng-progress-bar-relative]': 'relative()',
                        '[attr.spinnerPosition]': 'spinnerPosition()',
                        '[attr.direction]': 'direction()',
                        '[style.--_ng-progress-speed]': 'progressRef.speed() + "ms"',
                        '[style.--_ng-progress-fade-out-speed]': 'progressRef.fadeOutSpeed() + "ms"'
                    }, hostDirectives: [{
                            directive: NgProgressRef,
                            inputs: ['min', 'max', 'speed', 'trickleSpeed', 'fadeOutSpeed', 'debounceTime'],
                            outputs: ['started', 'completed']
                        }], template: `
    <div class="ng-progress-bar-wrapper">
      <div class="ng-bar-placeholder">
        <div class="ng-bar" [style.transform]="progressTransform()">
          @if (!flat()) {
            <div class="ng-meteor"></div>
          }
        </div>
      </div>
      @if (spinner()) {
        <div class="ng-spinner">
          <div class="ng-spinner-icon"></div>
        </div>
      }
    </div>
  `, changeDetection: ChangeDetectionStrategy.OnPush, styles: [":host{--_ng-progress-thickness: var(--ng-progress-thickness, 2);--_ng-progress-thickness-px: calc(var(--_ng-progress-thickness) * 1px);--_ng-progress-thickness-add-one: calc(var(--_ng-progress-thickness) + 1);--_ng-progress-meteor-position-px: calc(var(--_ng-progress-thickness-add-one) * -1px);--_ng-progress-color: var(--ng-progress-color, #1B95E0);--_ng-progress-holder-color: var(--ng-progress-holder-color, transparent);--_ng-progress-ease: var(--ng-progress-ease, linear);--_ng-progress-spinner-thickness: var(--ng-progress-spinner-thickness, 2);--_ng-progress-spinner-thickness-px: calc(var(--_ng-progress-spinner-thickness) * 1px);--_ng-progress-spinner-spacing: var(--ng-progress-spinner-spacing, 15);--_ng-progress-spinner-spacing-px: calc(var(--_ng-progress-spinner-spacing) * 1px);--_ng-progress-spinner-size: var(--ng-progress-spinner-size, 18);--_ng-progress-spinner-size-px: calc(var(--_ng-progress-spinner-size) * 1px);--_ng-progress-spinner-speed: var(--ng-progress-spinner-speed, .25s);z-index:999999;pointer-events:none}:host.ng-progress-bar-active .ng-progress-bar-wrapper{filter:alpha(opacity=100);opacity:1;transition:none}:host.ng-progress-bar-active .ng-bar{transition:all var(--_ng-progress-speed) var(--_ng-progress-ease)}:host.ng-progress-bar-relative .ng-progress-bar-wrapper{position:relative}:host[direction=\"ltr+\"] .ng-meteor,:host[direction=ltr-] .ng-meteor{rotate:calc(var(--_ng-progress-thickness-add-one) * 1deg)}:host[direction=\"ltr+\"] .ng-bar,:host[direction=\"rtl+\"] .ng-bar{margin-left:-100%}:host[direction=\"ltr+\"] .ng-meteor,:host[direction=\"rtl+\"] .ng-meteor{right:0}:host[direction=\"ltr+\"] .ng-meteor,:host[direction=rtl-] .ng-meteor{top:var(--_ng-progress-meteor-position-px)}:host[direction=ltr-] .ng-meteor,:host[direction=\"rtl+\"] .ng-meteor{bottom:var(--_ng-progress-meteor-position-px)}:host[direction=ltr-] .ng-bar-placeholder,:host[direction=\"rtl+\"] .ng-bar-placeholder{transform:rotate(180deg)}:host[direction=ltr-] .ng-spinner-icon,:host[direction=\"rtl+\"] .ng-spinner-icon{animation-direction:reverse}:host[direction=\"rtl+\"] .ng-meteor,:host[direction=rtl-] .ng-meteor{rotate:calc(var(--_ng-progress-thickness-add-one) * -1deg)}:host .ng-spinner{top:var(--_ng-progress-spinner-spacing-px)}:host[spinnerPosition=left] .ng-spinner{left:var(--_ng-progress-spinner-spacing-px)}:host[spinnerPosition=right] .ng-spinner{right:var(--_ng-progress-spinner-spacing-px)}.ng-progress-bar-wrapper{position:fixed;z-index:999999;top:0;left:0;width:100%;transform:scale(1);filter:alpha(opacity=0);opacity:0;transition:opacity var(--_ng-progress-fade-out-speed) linear}.ng-bar-placeholder{position:absolute;height:var(--_ng-progress-thickness-px);width:100%}.ng-bar{width:100%;height:100%;transform:translate(-100%,0,0);background:var(--_ng-progress-color)}.ng-meteor{display:block;position:absolute;width:100px;height:100%;opacity:1;box-shadow:0 0 10px var(--_ng-progress-color),0 0 5px var(--_ng-progress-color)}.ng-spinner{position:absolute;display:block;z-index:1031;top:10px}.ng-spinner-icon{box-sizing:border-box;animation:spinner-animation var(--_ng-progress-spinner-speed) linear infinite;border-style:solid;border-color:transparent;border-radius:50%;border-top-color:var(--_ng-progress-color);border-left-color:var(--_ng-progress-color);width:var(--_ng-progress-spinner-size-px);height:var(--_ng-progress-spinner-size-px);border-width:var(--_ng-progress-spinner-thickness-px)}@keyframes spinner-animation{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctcHJvZ3Jlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXByb2dyZXNzYmFyL3NyYy9saWIvbmctcHJvZ3Jlc3MuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsTUFBTSxFQUNOLFFBQVEsRUFDUixnQkFBZ0IsRUFDaEIsS0FBSyxFQUdMLHVCQUF1QixFQUV4QixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbEQsT0FBTyxFQUFFLG1CQUFtQixFQUFxQixNQUFNLHFCQUFxQixDQUFDOzs7QUF3QzdFLE1BQU0sT0FBTyxhQUFhO0lBdEMxQjtRQXdDbUIsV0FBTSxHQUFzQixNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUV6RSwwQkFBMEI7UUFDMUIsZ0JBQVcsR0FBa0IsTUFBTSxDQUFDLGFBQWEsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFFL0UsU0FBSSxHQUF3RCxLQUFLLENBQTRCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztRQUNoSixZQUFPLEdBQXdELEtBQUssQ0FBNEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1FBQ3RKLGFBQVEsR0FBd0QsS0FBSyxDQUE0QixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxDQUFDLENBQUM7UUFDeEosb0JBQWUsR0FBa0MsS0FBSyxDQUFtQixJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3RHLGNBQVMsR0FBbUQsS0FBSyxDQUFvQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRTVILHNCQUFpQixHQUFtQixRQUFRLENBQUMsR0FBRyxFQUFFO1lBQ2hELE9BQU8sZUFBZ0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLEVBQUcsUUFBUSxDQUFDO1FBQzlELENBQUMsQ0FBQyxDQUFDO0tBQ0o7K0dBaEJZLGFBQWE7bUdBQWIsYUFBYSxxNkNBbkJkOzs7Ozs7Ozs7Ozs7Ozs7R0FlVDs7NEZBSVUsYUFBYTtrQkF0Q3pCLFNBQVM7aUNBQ0ksSUFBSSxZQUNOLGFBQWEsWUFDYixZQUFZLFFBQ2hCO3dCQUNKLE1BQU0sRUFBRSxhQUFhO3dCQUNyQix5QkFBeUIsRUFBRSxNQUFNO3dCQUNqQyxnQ0FBZ0MsRUFBRSxzQkFBc0I7d0JBQ3hELGtDQUFrQyxFQUFFLFlBQVk7d0JBQ2hELHdCQUF3QixFQUFFLG1CQUFtQjt3QkFDN0Msa0JBQWtCLEVBQUUsYUFBYTt3QkFDakMsOEJBQThCLEVBQUUsNEJBQTRCO3dCQUM1RCx1Q0FBdUMsRUFBRSxtQ0FBbUM7cUJBQzdFLGtCQUNlLENBQUM7NEJBQ2YsU0FBUyxFQUFFLGFBQWE7NEJBQ3hCLE1BQU0sRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsY0FBYyxDQUFDOzRCQUMvRSxPQUFPLEVBQUUsQ0FBQyxTQUFTLEVBQUUsV0FBVyxDQUFDO3lCQUNsQyxDQUFDLFlBQ1E7Ozs7Ozs7Ozs7Ozs7OztHQWVULG1CQUVnQix1QkFBdUIsQ0FBQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDb21wb25lbnQsXHJcbiAgaW5qZWN0LFxyXG4gIGNvbXB1dGVkLFxyXG4gIGJvb2xlYW5BdHRyaWJ1dGUsXHJcbiAgaW5wdXQsXHJcbiAgU2lnbmFsLFxyXG4gIElucHV0U2lnbmFsLFxyXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxyXG4gIElucHV0U2lnbmFsV2l0aFRyYW5zZm9ybVxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZ1Byb2dyZXNzUmVmIH0gZnJvbSAnLi9uZy1wcm9ncmVzcy1yZWYnO1xyXG5pbXBvcnQgeyBOR19QUk9HUkVTU19PUFRJT05TLCBOZ1Byb2dyZXNzT3B0aW9ucyB9IGZyb20gJy4vbmctcHJvZ3Jlc3MubW9kZWwnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcclxuICBzZWxlY3RvcjogJ25nLXByb2dyZXNzJyxcclxuICBleHBvcnRBczogJ25nUHJvZ3Jlc3MnLFxyXG4gIGhvc3Q6IHtcclxuICAgICdyb2xlJzogJ3Byb2dyZXNzYmFyJyxcclxuICAgICdbY2xhc3MubmctcHJvZ3Jlc3MtYmFyXSc6ICd0cnVlJyxcclxuICAgICdbY2xhc3MubmctcHJvZ3Jlc3MtYmFyLWFjdGl2ZV0nOiAncHJvZ3Jlc3NSZWYuYWN0aXZlKCknLFxyXG4gICAgJ1tjbGFzcy5uZy1wcm9ncmVzcy1iYXItcmVsYXRpdmVdJzogJ3JlbGF0aXZlKCknLFxyXG4gICAgJ1thdHRyLnNwaW5uZXJQb3NpdGlvbl0nOiAnc3Bpbm5lclBvc2l0aW9uKCknLFxyXG4gICAgJ1thdHRyLmRpcmVjdGlvbl0nOiAnZGlyZWN0aW9uKCknLFxyXG4gICAgJ1tzdHlsZS4tLV9uZy1wcm9ncmVzcy1zcGVlZF0nOiAncHJvZ3Jlc3NSZWYuc3BlZWQoKSArIFwibXNcIicsXHJcbiAgICAnW3N0eWxlLi0tX25nLXByb2dyZXNzLWZhZGUtb3V0LXNwZWVkXSc6ICdwcm9ncmVzc1JlZi5mYWRlT3V0U3BlZWQoKSArIFwibXNcIidcclxuICB9LFxyXG4gIGhvc3REaXJlY3RpdmVzOiBbe1xyXG4gICAgZGlyZWN0aXZlOiBOZ1Byb2dyZXNzUmVmLFxyXG4gICAgaW5wdXRzOiBbJ21pbicsICdtYXgnLCAnc3BlZWQnLCAndHJpY2tsZVNwZWVkJywgJ2ZhZGVPdXRTcGVlZCcsICdkZWJvdW5jZVRpbWUnXSxcclxuICAgIG91dHB1dHM6IFsnc3RhcnRlZCcsICdjb21wbGV0ZWQnXVxyXG4gIH1dLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8ZGl2IGNsYXNzPVwibmctcHJvZ3Jlc3MtYmFyLXdyYXBwZXJcIj5cclxuICAgICAgPGRpdiBjbGFzcz1cIm5nLWJhci1wbGFjZWhvbGRlclwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJuZy1iYXJcIiBbc3R5bGUudHJhbnNmb3JtXT1cInByb2dyZXNzVHJhbnNmb3JtKClcIj5cclxuICAgICAgICAgIEBpZiAoIWZsYXQoKSkge1xyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibmctbWV0ZW9yXCI+PC9kaXY+XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICBAaWYgKHNwaW5uZXIoKSkge1xyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJuZy1zcGlubmVyXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwibmctc3Bpbm5lci1pY29uXCI+PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIH1cclxuICAgIDwvZGl2PlxyXG4gIGAsXHJcbiAgc3R5bGVVcmw6ICcuL25nLXByb2dyZXNzLmNvbXBvbmVudC5zY3NzJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdQcm9ncmVzc2JhciB7XHJcblxyXG4gIHByaXZhdGUgcmVhZG9ubHkgY29uZmlnOiBOZ1Byb2dyZXNzT3B0aW9ucyA9IGluamVjdChOR19QUk9HUkVTU19PUFRJT05TKTtcclxuXHJcbiAgLyoqIFByb2dyZXNzIGJhciB3b3JrZXIgKi9cclxuICBwcm9ncmVzc1JlZjogTmdQcm9ncmVzc1JlZiA9IGluamVjdChOZ1Byb2dyZXNzUmVmLCB7IGhvc3Q6IHRydWUsIHNlbGY6IHRydWUgfSk7XHJcblxyXG4gIGZsYXQ6IElucHV0U2lnbmFsV2l0aFRyYW5zZm9ybTxib29sZWFuLCBib29sZWFuIHwgc3RyaW5nPiA9IGlucHV0PGJvb2xlYW4sIGJvb2xlYW4gfCBzdHJpbmc+KHRoaXMuY29uZmlnLmZsYXQsIHsgdHJhbnNmb3JtOiBib29sZWFuQXR0cmlidXRlIH0pO1xyXG4gIHNwaW5uZXI6IElucHV0U2lnbmFsV2l0aFRyYW5zZm9ybTxib29sZWFuLCBib29sZWFuIHwgc3RyaW5nPiA9IGlucHV0PGJvb2xlYW4sIGJvb2xlYW4gfCBzdHJpbmc+KHRoaXMuY29uZmlnLnNwaW5uZXIsIHsgdHJhbnNmb3JtOiBib29sZWFuQXR0cmlidXRlIH0pO1xyXG4gIHJlbGF0aXZlOiBJbnB1dFNpZ25hbFdpdGhUcmFuc2Zvcm08Ym9vbGVhbiwgYm9vbGVhbiB8IHN0cmluZz4gPSBpbnB1dDxib29sZWFuLCBib29sZWFuIHwgc3RyaW5nPih0aGlzLmNvbmZpZy5yZWxhdGl2ZSwgeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSk7XHJcbiAgc3Bpbm5lclBvc2l0aW9uOiBJbnB1dFNpZ25hbDwnbGVmdCcgfCAncmlnaHQnPiA9IGlucHV0PCdsZWZ0JyB8ICdyaWdodCc+KHRoaXMuY29uZmlnLnNwaW5uZXJQb3NpdGlvbik7XHJcbiAgZGlyZWN0aW9uOiBJbnB1dFNpZ25hbDwnbHRyKycgfCAnbHRyLScgfCAncnRsKycgfCAncnRsLSc+ID0gaW5wdXQ8J2x0cisnIHwgJ2x0ci0nIHwgJ3J0bCsnIHwgJ3J0bC0nPih0aGlzLmNvbmZpZy5kaXJlY3Rpb24pO1xyXG5cclxuICBwcm9ncmVzc1RyYW5zZm9ybTogU2lnbmFsPHN0cmluZz4gPSBjb21wdXRlZCgoKSA9PiB7XHJcbiAgICByZXR1cm4gYHRyYW5zbGF0ZTNkKCR7IHRoaXMucHJvZ3Jlc3NSZWYucHJvZ3Jlc3MoKSB9JSwwLDApYDtcclxuICB9KTtcclxufVxyXG4iXX0=