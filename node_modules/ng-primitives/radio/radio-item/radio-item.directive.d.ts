/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { BooleanInput } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
import * as i1 from "ng-primitives/roving-focus";
import * as i2 from "ng-primitives/interactions";
export declare class NgpRadioItem {
    /**
     * Access the radio group.
     */
    private readonly radioGroup;
    /**
     * The value of the radio item.
     */
    readonly value: import("@angular/core").InputSignal<string>;
    /**
     * Whether the radio item is disabled.
     * @default false
     */
    readonly disabled: import("@angular/core").InputSignalWithTransform<boolean, BooleanInput>;
    /**
     * Whether the radio item is checked.
     */
    readonly checked: import("@angular/core").Signal<boolean>;
    /**
     * When the item receives focus, select it.
     * @internal
     */
    protected onFocus(): void;
    /**
     * When the item receives a click, select it.
     * @internal
     */
    protected onClick(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpRadioItem, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpRadioItem, "[ngpRadioItem]", never, { "value": { "alias": "ngpRadioItemValue"; "required": true; "isSignal": true; }; "disabled": { "alias": "ngpRadioItemDisabled"; "required": false; "isSignal": true; }; }, {}, never, never, true, [{ directive: typeof i1.NgpRovingFocusItem; inputs: {}; outputs: {}; }, { directive: typeof i2.NgpHover; inputs: {}; outputs: {}; }, { directive: typeof i2.NgpFocusVisible; inputs: {}; outputs: {}; }, { directive: typeof i2.NgpPress; inputs: {}; outputs: {}; }]>;
}
