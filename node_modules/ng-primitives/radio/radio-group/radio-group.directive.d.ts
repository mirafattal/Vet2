/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { BooleanInput } from '@angular/cdk/coercion';
import { NgpCanDisable } from 'ng-primitives/internal';
import * as i0 from "@angular/core";
import * as i1 from "ng-primitives/roving-focus";
import * as i2 from "ng-primitives/form-field";
export declare class NgpRadioGroup implements NgpCanDisable {
    /**
     * The value of the radio group.
     */
    readonly value: import("@angular/core").ModelSignal<string | null>;
    /**
     * Whether the radio group is disabled.
     */
    readonly disabled: import("@angular/core").InputSignalWithTransform<boolean, BooleanInput>;
    /**
     * The orientation of the radio group.
     * @default 'horizontal'
     */
    readonly orientation: import("@angular/core").InputSignal<"horizontal" | "vertical">;
    /**
     * Select a radio item.
     * @param value The value of the radio item to select.
     */
    select(value: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpRadioGroup, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpRadioGroup, "[ngpRadioGroup]", never, { "value": { "alias": "ngpRadioGroupValue"; "required": false; "isSignal": true; }; "disabled": { "alias": "ngpRadioGroupDisabled"; "required": false; "isSignal": true; }; "orientation": { "alias": "ngpRadioGroupOrientation"; "required": false; "isSignal": true; }; }, { "value": "ngpRadioGroupValueChange"; }, never, never, true, [{ directive: typeof i1.NgpRovingFocusGroup; inputs: {}; outputs: {}; }, { directive: typeof i2.NgpFormControl; inputs: {}; outputs: {}; }]>;
}
