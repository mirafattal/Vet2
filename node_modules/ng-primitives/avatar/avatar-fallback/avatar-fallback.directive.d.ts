/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { NumberInput } from '@angular/cdk/coercion';
import { OnInit } from '@angular/core';
import * as i0 from "@angular/core";
export declare class NgpAvatarFallback implements OnInit {
    /**
     * Access the avatar
     */
    private readonly avatar;
    /**
     * Access the global configuration.
     */
    private readonly config;
    /**
     * Access the disposable utilities.
     */
    private readonly disposables;
    /**
     * Define a delay before the fallback is shown. This is useful to only show the fallback for those with slower connections.
     * @default 0
     */
    readonly delay: import("@angular/core").InputSignalWithTransform<number, NumberInput>;
    /**
     * Determine if this element should be hidden.
     * @returns True if the element should be visible
     */
    protected readonly visible: import("@angular/core").Signal<boolean>;
    /**
     * Determine the delay has elapsed, and we can show the fallback.
     */
    private delayElapsed;
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpAvatarFallback, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpAvatarFallback, "[ngpAvatarFallback]", never, { "delay": { "alias": "ngpAvatarFallbackDelay"; "required": false; "isSignal": true; }; }, {}, never, never, true, never>;
}
