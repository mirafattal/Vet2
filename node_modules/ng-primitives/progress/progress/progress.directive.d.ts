/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { NumberInput } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
export declare class NgpProgress {
    /**
     * Define the progress value.
     */
    readonly value: import("@angular/core").InputSignalWithTransform<number, NumberInput>;
    /**
     * Define the progress max value.
     * @default 100
     */
    readonly max: import("@angular/core").InputSignalWithTransform<number, NumberInput>;
    /**
     * Define a function that returns the progress value label.
     * @param value The current value
     * @param max The maximum value
     * @returns The value label
     */
    readonly valueLabel: import("@angular/core").InputSignal<NgpProgressValueLabelFn>;
    /**
     * Get the state of the progress bar.
     * @returns 'indeterminate' | 'loading' | 'complete'
     * @internal
     */
    protected readonly state: import("@angular/core").Signal<"indeterminate" | "complete" | "loading">;
    /**
     * Get the progress value label.
     */
    protected readonly label: import("@angular/core").Signal<string>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpProgress, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpProgress, "[ngpProgress]", never, { "value": { "alias": "ngpProgressValue"; "required": false; "isSignal": true; }; "max": { "alias": "ngpProgressMax"; "required": false; "isSignal": true; }; "valueLabel": { "alias": "valueLabel"; "required": false; "isSignal": true; }; }, {}, never, never, true, never>;
}
export type NgpProgressValueLabelFn = (value: number, max: number) => string;
