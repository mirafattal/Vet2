/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { FocusOrigin } from '@angular/cdk/a11y';
import { BooleanInput } from '@angular/cdk/coercion';
import { ElementRef, OnDestroy, OnInit } from '@angular/core';
import * as i0 from "@angular/core";
export declare class NgpRovingFocusItem implements OnInit, OnDestroy {
    /**
     * Access the group the roving focus item belongs to.
     */
    private readonly group;
    /**
     * Access the focus monitor service.
     */
    private readonly focusMonitor;
    /**
     * Access the element the roving focus item is attached to.
     */
    readonly elementRef: ElementRef<HTMLElement>;
    /**
     * Define if the item is disabled.
     */
    readonly disabled: import("@angular/core").InputSignalWithTransform<boolean, BooleanInput>;
    /**
     * Derive the tabindex of the roving focus item.
     */
    readonly tabindex: import("@angular/core").Signal<0 | -1>;
    /**
     * Initialize the roving focus item.
     */
    ngOnInit(): void;
    /**
     * Clean up the roving focus item.
     */
    ngOnDestroy(): void;
    /**
     * Forward the keydown event to the roving focus group.
     * @param event The keyboard event
     */
    protected onKeydown(event: KeyboardEvent): void;
    /**
     * Activate the roving focus item on click.
     */
    protected activate(): void;
    /**
     * Focus the roving focus item.
     * @param origin The origin of the focus
     */
    focus(origin: FocusOrigin): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpRovingFocusItem, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpRovingFocusItem, "[ngpRovingFocusItem]", ["ngpRovingFocusItem"], { "disabled": { "alias": "ngpRovingFocusItemDisabled"; "required": false; "isSignal": true; }; }, {}, never, never, true, never>;
}
