{"version":3,"file":"ng-primitives-checkbox.mjs","sources":["../../../../packages/ng-primitives/checkbox/src/checkbox/checkbox.token.ts","../../../../packages/ng-primitives/checkbox/src/checkbox/checkbox.directive.ts","../../../../packages/ng-primitives/checkbox/src/index.ts","../../../../packages/ng-primitives/checkbox/src/ng-primitives-checkbox.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpCheckbox } from './checkbox.directive';\n\nexport const NgpCheckboxToken = new InjectionToken<NgpCheckbox>('NgpCheckboxToken');\n\n/**\n * Inject the Checkbox directive instance\n * @returns The Checkbox directive instance\n */\nexport function injectCheckbox(): NgpCheckbox {\n  return inject(NgpCheckboxToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { Directive, HostListener, booleanAttribute, input, model } from '@angular/core';\nimport { NgpFormControl } from 'ng-primitives/form-field';\nimport { NgpFocusVisible, NgpHover, NgpPress } from 'ng-primitives/interactions';\nimport { NgpCanDisable, NgpDisabledToken } from 'ng-primitives/internal';\nimport { uniqueId } from 'ng-primitives/utils';\nimport { NgpCheckboxToken } from './checkbox.token';\n\n@Directive({\n  selector: '[ngpCheckbox]',\n  standalone: true,\n  providers: [\n    { provide: NgpCheckboxToken, useExisting: NgpCheckbox },\n    { provide: NgpDisabledToken, useExisting: NgpCheckbox },\n  ],\n  hostDirectives: [NgpFormControl, NgpHover, NgpFocusVisible, NgpPress],\n  host: {\n    role: 'checkbox',\n    '[attr.aria-checked]': 'indeterminate() ? \"mixed\" : checked()',\n    '[attr.data-checked]': 'checked() ? \"\" : null',\n    '[attr.data-indeterminate]': 'indeterminate() ? \"\" : null',\n    '[tabindex]': 'disabled() ? -1 : 0',\n  },\n})\nexport class NgpCheckbox implements NgpCanDisable {\n  /**\n   * The id of the checkbox.\n   * @internal\n   */\n  readonly id = input(uniqueId('ngp-checkbox'));\n\n  /**\n   * Defines whether the checkbox is checked.\n   */\n  readonly checked = model<boolean>(false, {\n    alias: 'ngpCheckboxChecked',\n  });\n\n  /**\n   * Defines whether the checkbox is indeterminate.\n   */\n  readonly indeterminate = model<boolean>(false, {\n    alias: 'ngpCheckboxIndeterminate',\n  });\n\n  /**\n   * Whether the checkbox is required.\n   */\n  readonly required = input<boolean, BooleanInput>(false, {\n    alias: 'ngpCheckboxRequired',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Defines whether the checkbox is disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpCheckboxDisabled',\n    transform: booleanAttribute,\n  });\n\n  @HostListener('keydown.enter', ['$event'])\n  protected onEnter(event: KeyboardEvent): void {\n    // According to WAI ARIA, Checkboxes don't activate on enter keypress\n    event.preventDefault();\n  }\n\n  @HostListener('click', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  toggle(event?: Event): void {\n    if (this.disabled()) {\n      return;\n    }\n\n    // prevent this firing twice in cases where the label is clicked and the checkbox is clicked by the one event\n    event?.preventDefault();\n\n    this.checked.set(this.indeterminate() ? true : !this.checked());\n\n    // if the checkbox was indeterminate, it isn't anymore\n    if (this.indeterminate()) {\n      this.indeterminate.set(false);\n    }\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpCheckbox } from './checkbox/checkbox.directive';\nexport { NgpCheckboxToken } from './checkbox/checkbox.token';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAMG;MAIU,gBAAgB,GAAG,IAAI,cAAc,CAAc,kBAAkB,EAAE;AAEpF;;;AAGG;SACa,cAAc,GAAA;AAC5B,IAAA,OAAO,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAClC;;MCaa,WAAW,CAAA;AAhBxB,IAAA,WAAA,GAAA;AAiBE;;;AAGG;QACM,IAAE,CAAA,EAAA,GAAG,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;AAE9C;;AAEG;AACM,QAAA,IAAA,CAAA,OAAO,GAAG,KAAK,CAAU,KAAK,EAAE;AACvC,YAAA,KAAK,EAAE,oBAAoB;AAC5B,SAAA,CAAC,CAAC;AAEH;;AAEG;AACM,QAAA,IAAA,CAAA,aAAa,GAAG,KAAK,CAAU,KAAK,EAAE;AAC7C,YAAA,KAAK,EAAE,0BAA0B;AAClC,SAAA,CAAC,CAAC;AAEH;;AAEG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAwB,KAAK,EAAE;AACtD,YAAA,KAAK,EAAE,qBAAqB;AAC5B,YAAA,SAAS,EAAE,gBAAgB;AAC5B,SAAA,CAAC,CAAC;AAEH;;AAEG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAwB,KAAK,EAAE;AACtD,YAAA,KAAK,EAAE,qBAAqB;AAC5B,YAAA,SAAS,EAAE,gBAAgB;AAC5B,SAAA,CAAC,CAAC;AAyBJ,KAAA;AAtBW,IAAA,OAAO,CAAC,KAAoB,EAAA;;QAEpC,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;AAID,IAAA,MAAM,CAAC,KAAa,EAAA;AAClB,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACnB,OAAO;SACR;;QAGD,KAAK,EAAE,cAAc,EAAE,CAAC;QAExB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;;AAGhE,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;AACxB,YAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC/B;KACF;+GA3DU,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,WAAW,EAbX,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,UAAA,EAAA,oBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,aAAA,EAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,UAAA,EAAA,0BAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,0BAAA,EAAA,aAAA,EAAA,gCAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,mBAAA,EAAA,yCAAA,EAAA,mBAAA,EAAA,yBAAA,EAAA,yBAAA,EAAA,+BAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,EAAA,EAAA,SAAA,EAAA;AACT,YAAA,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,WAAW,EAAE;AACvD,YAAA,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,WAAW,EAAE;AACxD,SAAA,EAAA,cAAA,EAAA,CAAA,EAAA,SAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAUU,WAAW,EAAA,UAAA,EAAA,CAAA;kBAhBvB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,SAAS,EAAE;AACT,wBAAA,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,aAAa,EAAE;AACvD,wBAAA,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,aAAa,EAAE;AACxD,qBAAA;oBACD,cAAc,EAAE,CAAC,cAAc,EAAE,QAAQ,EAAE,eAAe,EAAE,QAAQ,CAAC;AACrE,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,UAAU;AAChB,wBAAA,qBAAqB,EAAE,uCAAuC;AAC9D,wBAAA,qBAAqB,EAAE,uBAAuB;AAC9C,wBAAA,2BAA2B,EAAE,6BAA6B;AAC1D,wBAAA,YAAY,EAAE,qBAAqB;AACpC,qBAAA;AACF,iBAAA,CAAA;8BAuCW,OAAO,EAAA,CAAA;sBADhB,YAAY;uBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAA;gBAQzC,MAAM,EAAA,CAAA;sBAFL,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAA;;sBAChC,YAAY;uBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAA;;;AC3E3C;;;;;;AAMG;;ACNH;;AAEG;;;;"}