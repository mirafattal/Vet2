import * as i0 from '@angular/core';
import { InjectionToken, inject, Directive, HostListener, contentChild, computed } from '@angular/core';
import * as i1 from 'ng-primitives/form-field';
import { NgpFormField } from 'ng-primitives/form-field';
import { NgpInputToken } from 'ng-primitives/input';

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
const NgpSearchFieldToken = new InjectionToken('NgpSearchFieldToken');
/**
 * Inject the SearchField directive instance
 */
function injectSearchField() {
    return inject(NgpSearchFieldToken);
}

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
const NgpSearchFieldClearToken = new InjectionToken('NgpSearchFieldClearToken');
/**
 * Inject the SearchFieldClear directive instance
 */
function injectSearchFieldClear() {
    return inject(NgpSearchFieldClearToken);
}

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
class NgpSearchFieldClear {
    constructor() {
        /**
         * Access the Search Field instance.
         */
        this.searchField = injectSearchField();
    }
    /**
     * Clear the input field.
     */
    click() {
        this.searchField.clear();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpSearchFieldClear, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.13", type: NgpSearchFieldClear, isStandalone: true, selector: "[ngpSearchFieldClear]", host: { listeners: { "click": "click()" }, properties: { "tabindex": "-1", "attr.data-empty": "searchField.empty() ? \"\" : null" } }, providers: [{ provide: NgpSearchFieldClearToken, useExisting: NgpSearchFieldClear }], exportAs: ["ngpSearchFieldClear"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpSearchFieldClear, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpSearchFieldClear]',
                    exportAs: 'ngpSearchFieldClear',
                    providers: [{ provide: NgpSearchFieldClearToken, useExisting: NgpSearchFieldClear }],
                    host: {
                        '[tabindex]': '-1',
                        '[attr.data-empty]': 'searchField.empty() ? "" : null',
                    },
                }]
        }], propDecorators: { click: [{
                type: HostListener,
                args: ['click']
            }] } });

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
class NgpSearchField {
    constructor() {
        /**
         * Access the child input field.
         */
        this.input = contentChild.required(NgpInputToken, { descendants: true });
        /**
         * Whether the input field is empty.
         */
        this.empty = computed(() => this.input().value() === '');
    }
    clear() {
        this.input().setInputValue('');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpSearchField, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.2.0", version: "18.2.13", type: NgpSearchField, isStandalone: true, selector: "[ngpSearchField]", host: { listeners: { "keydown.escape": "clear()" }, properties: { "attr.data-empty": "empty() ? \"\" : null" } }, providers: [{ provide: NgpSearchFieldToken, useExisting: NgpSearchField }], queries: [{ propertyName: "input", first: true, predicate: NgpInputToken, descendants: true, isSignal: true }], exportAs: ["ngpSearchField"], hostDirectives: [{ directive: i1.NgpFormField }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpSearchField, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpSearchField]',
                    exportAs: 'ngpSearchField',
                    providers: [{ provide: NgpSearchFieldToken, useExisting: NgpSearchField }],
                    hostDirectives: [NgpFormField],
                    host: {
                        '[attr.data-empty]': 'empty() ? "" : null',
                    },
                }]
        }], propDecorators: { clear: [{
                type: HostListener,
                args: ['keydown.escape']
            }] } });

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgpSearchField, NgpSearchFieldClear, NgpSearchFieldClearToken, NgpSearchFieldToken };
//# sourceMappingURL=ng-primitives-search.mjs.map
