{"version":3,"file":"ng-primitives-utils.mjs","sources":["../../../../packages/ng-primitives/utils/src/helpers/disposables.ts","../../../../packages/ng-primitives/utils/src/helpers/focus-manager.ts","../../../../packages/ng-primitives/utils/src/helpers/unique-id.ts","../../../../packages/ng-primitives/utils/src/signals/async.ts","../../../../packages/ng-primitives/utils/src/ui/dimensions.ts","../../../../packages/ng-primitives/utils/src/index.ts","../../../../packages/ng-primitives/utils/src/ng-primitives-utils.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { DestroyRef, inject } from '@angular/core';\n\n/**\n * Disposable functions are a way to manage timers, intervals, and event listeners\n * that should be cleared when a component is destroyed.\n *\n * This is heavily inspired by Headless UI disposables:\n * https://github.com/tailwindlabs/headlessui/blob/main/packages/%40headlessui-react/src/utils/disposables.ts\n */\nexport function injectDisposables() {\n  const destroyRef = inject(DestroyRef);\n\n  return {\n    /**\n     * Set a timeout that will be cleared when the component is destroyed.\n     * @param callback The callback to execute\n     * @param delay The delay before the callback is executed\n     * @returns A function to clear the timeout\n     */\n    setTimeout: (callback: () => void, delay: number) => {\n      const id = setTimeout(callback, delay);\n      const cleanup = () => clearTimeout(id);\n      destroyRef.onDestroy(cleanup);\n      return cleanup;\n    },\n    /**\n     * Set an interval that will be cleared when the component is destroyed.\n     * @param callback The callback to execute\n     * @param delay The delay before the callback is executed\n     * @param target\n     * @param type\n     * @param listener\n     * @param options\n     * @returns A function to clear the interval\n     */\n    addEventListener: <K extends keyof HTMLElementEventMap>(\n      target: EventTarget,\n      type: K,\n      listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any,\n      options?: boolean | AddEventListenerOptions,\n    ) => {\n      target.addEventListener(type, listener as EventListenerOrEventListenerObject, options);\n      const cleanup = () =>\n        target.removeEventListener(type, listener as EventListenerOrEventListenerObject, options);\n      destroyRef.onDestroy(cleanup);\n      return cleanup;\n    },\n    /**\n     * Set an interval that will be cleared when the component is destroyed.\n     * @param callback The callback to execute\n     * @param delay The delay before the callback is executed\n     * @returns A function to clear the interval\n     */\n    setInterval: (callback: () => void, delay: number) => {\n      const id = setInterval(callback, delay);\n      const cleanup = () => clearInterval(id);\n      destroyRef.onDestroy(cleanup);\n      return cleanup;\n    },\n    /**\n     * Set a requestAnimationFrame that will be cleared when the component is destroyed.\n     * @param callback The callback to execute\n     * @returns A function to clear the requestAnimationFrame\n     */\n    requestAnimationFrame: (callback: FrameRequestCallback) => {\n      const id = requestAnimationFrame(callback);\n      const cleanup = () => cancelAnimationFrame(id);\n      destroyRef.onDestroy(cleanup);\n      return cleanup;\n    },\n  };\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { FocusOrigin } from '@angular/cdk/a11y';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { ElementRef, Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FocusManager {\n  /**\n   * Focus an element with an optional origin.\n   */\n  focus(element: ElementRef<HTMLElement>, origin?: FocusOrigin): void;\n  focus(element: HTMLElement, origin?: FocusOrigin): void;\n  focus(element: ElementRef<HTMLElement> | HTMLElement, origin: FocusOrigin = 'program'): void {\n    element = coerceElement(element);\n\n    switch (origin) {\n      case 'keyboard':\n        // trigger the focus-visible state for keyboard users\n        element.contentEditable = 'true';\n        element.focus({ preventScroll: true });\n        element.contentEditable = 'false';\n        break;\n      default:\n        element.focus();\n        break;\n    }\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Store a map of unique ids for elements so that there are no collisions.\n */\nconst uniqueIdMap = new Map<string, number>();\n\n/**\n * Generate a unique id for an element\n * @param prefix - The prefix to use for the id\n * @returns The generated id\n */\nexport function uniqueId(prefix: string): string {\n  const id = uniqueIdMap.get(prefix) ?? 0;\n  uniqueIdMap.set(prefix, id + 1);\n  return `${prefix}-${id}`;\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Injector, Signal, effect, signal } from '@angular/core';\n\n/**\n * Listen for changes to a signal and call a function when the signal changes.\n * @param source\n * @param fn\n * @param options\n * @param options.injector\n * @internal\n */\nexport function onChange<T>(\n  source: Signal<T | null | undefined>,\n  fn: (value: T | null | undefined, previousValue: T | null | undefined) => void,\n  options?: { injector: Injector },\n): void {\n  const previousValue = signal(source());\n\n  effect(\n    () => {\n      const value = source();\n      if (value !== previousValue()) {\n        fn(value, previousValue());\n        previousValue.set(value);\n      }\n    },\n    { allowSignalWrites: true, injector: options?.injector },\n  );\n\n  // call the fn with the initial value\n  fn(source(), null);\n}\n\n/**\n * Listen for changes to a boolean signal and call one of two functions when the signal changes.\n * @param source\n * @param onTrue\n * @param onFalse\n * @param options\n */\nexport function onBooleanChange(\n  source: Signal<boolean>,\n  onTrue?: () => void,\n  onFalse?: () => void,\n  options?: { injector: Injector },\n): void {\n  onChange(source, value => (value ? onTrue?.() : onFalse?.()), options);\n}\n\n/**\n * A utility to sync the value of a signal with the Angular Forms onChange callback.\n * @param source The signal to sync with the onChange callback.\n * @param fn The onChange callback.\n * @param options The options for the effect.\n */\nexport function onFormControlChange<T>(\n  source: Signal<T | null | undefined>,\n  fn?: (value: T) => void,\n  options?: { injector: Injector },\n): void {\n  const previousValue = signal(source());\n\n  effect(\n    () => {\n      const value = source();\n\n      if (value !== previousValue() && value !== undefined && value !== null) {\n        fn?.(value);\n        previousValue.set(value);\n      }\n    },\n    { allowSignalWrites: true, injector: options?.injector },\n  );\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {\n  AfterRenderPhase,\n  ElementRef,\n  Renderer2,\n  afterNextRender,\n  inject,\n  signal,\n} from '@angular/core';\n\n/**\n * Injects the dimensions of the element\n * @returns The dimensions of the element\n */\nexport function injectDimensions() {\n  const renderer = inject(Renderer2);\n  const element = inject<ElementRef<HTMLElement>>(ElementRef);\n  const size = signal<{ width: number; height: number; mounted: boolean }>({\n    width: 0,\n    height: 0,\n    mounted: false,\n  });\n  let transitionDuration: string | undefined, animationName: string | undefined;\n\n  afterNextRender(\n    () => {\n      transitionDuration = element.nativeElement.style.transitionDuration;\n      animationName = element.nativeElement.style.animationName;\n    },\n    { phase: AfterRenderPhase.EarlyRead },\n  );\n\n  afterNextRender(\n    () => {\n      // block any animations/transitions so the element renders at its full dimensions\n      renderer.setStyle(element.nativeElement, 'transitionDuration', '0s');\n      renderer.setStyle(element.nativeElement, 'animationName', 'none');\n    },\n    { phase: AfterRenderPhase.Write },\n  );\n\n  afterNextRender(\n    () => {\n      const { width, height } = element.nativeElement.getBoundingClientRect();\n      size.set({ width, height, mounted: true });\n\n      // restore the original transition duration and animation name\n      renderer.setStyle(element.nativeElement, 'transitionDuration', transitionDuration);\n      renderer.setStyle(element.nativeElement, 'animationName', animationName);\n    },\n    { phase: AfterRenderPhase.Read },\n  );\n\n  return size;\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { injectDisposables } from './helpers/disposables';\nexport { FocusManager } from './helpers/focus-manager';\nexport { uniqueId } from './helpers/unique-id';\nexport { onBooleanChange, onChange, onFormControlChange } from './signals/async';\nexport { injectDimensions } from './ui/dimensions';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAMG;AAGH;;;;;;AAMG;SACa,iBAAiB,GAAA;AAC/B,IAAA,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAEtC,OAAO;AACL;;;;;AAKG;AACH,QAAA,UAAU,EAAE,CAAC,QAAoB,EAAE,KAAa,KAAI;YAClD,MAAM,EAAE,GAAG,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YACvC,MAAM,OAAO,GAAG,MAAM,YAAY,CAAC,EAAE,CAAC,CAAC;AACvC,YAAA,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC9B,YAAA,OAAO,OAAO,CAAC;SAChB;AACD;;;;;;;;;AASG;QACH,gBAAgB,EAAE,CAChB,MAAmB,EACnB,IAAO,EACP,QAAgE,EAChE,OAA2C,KACzC;YACF,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAA8C,EAAE,OAAO,CAAC,CAAC;AACvF,YAAA,MAAM,OAAO,GAAG,MACd,MAAM,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAA8C,EAAE,OAAO,CAAC,CAAC;AAC5F,YAAA,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC9B,YAAA,OAAO,OAAO,CAAC;SAChB;AACD;;;;;AAKG;AACH,QAAA,WAAW,EAAE,CAAC,QAAoB,EAAE,KAAa,KAAI;YACnD,MAAM,EAAE,GAAG,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YACxC,MAAM,OAAO,GAAG,MAAM,aAAa,CAAC,EAAE,CAAC,CAAC;AACxC,YAAA,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC9B,YAAA,OAAO,OAAO,CAAC;SAChB;AACD;;;;AAIG;AACH,QAAA,qBAAqB,EAAE,CAAC,QAA8B,KAAI;AACxD,YAAA,MAAM,EAAE,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YAC3C,MAAM,OAAO,GAAG,MAAM,oBAAoB,CAAC,EAAE,CAAC,CAAC;AAC/C,YAAA,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC9B,YAAA,OAAO,OAAO,CAAC;SAChB;KACF,CAAC;AACJ;;MChEa,YAAY,CAAA;AAMvB,IAAA,KAAK,CAAC,OAA8C,EAAE,MAAA,GAAsB,SAAS,EAAA;AACnF,QAAA,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;QAEjC,QAAQ,MAAM;AACZ,YAAA,KAAK,UAAU;;AAEb,gBAAA,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC;gBACjC,OAAO,CAAC,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;AACvC,gBAAA,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC;gBAClC,MAAM;AACR,YAAA;gBACE,OAAO,CAAC,KAAK,EAAE,CAAC;gBAChB,MAAM;SACT;KACF;+GApBU,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;AAAZ,IAAA,SAAA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA,EAAA;;4FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACbD;;;;;;AAMG;AAEH;;AAEG;AACH,MAAM,WAAW,GAAG,IAAI,GAAG,EAAkB,CAAC;AAE9C;;;;AAIG;AACG,SAAU,QAAQ,CAAC,MAAc,EAAA;IACrC,MAAM,EAAE,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACxC,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;AAChC,IAAA,OAAO,CAAG,EAAA,MAAM,CAAI,CAAA,EAAA,EAAE,EAAE,CAAC;AAC3B;;ACtBA;;;;;;AAMG;AAGH;;;;;;;AAOG;SACa,QAAQ,CACtB,MAAoC,EACpC,EAA8E,EAC9E,OAAgC,EAAA;AAEhC,IAAA,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;IAEvC,MAAM,CACJ,MAAK;AACH,QAAA,MAAM,KAAK,GAAG,MAAM,EAAE,CAAC;AACvB,QAAA,IAAI,KAAK,KAAK,aAAa,EAAE,EAAE;AAC7B,YAAA,EAAE,CAAC,KAAK,EAAE,aAAa,EAAE,CAAC,CAAC;AAC3B,YAAA,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC1B;AACH,KAAC,EACD,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,CACzD,CAAC;;AAGF,IAAA,EAAE,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;AACrB,CAAC;AAED;;;;;;AAMG;AACG,SAAU,eAAe,CAC7B,MAAuB,EACvB,MAAmB,EACnB,OAAoB,EACpB,OAAgC,EAAA;IAEhC,QAAQ,CAAC,MAAM,EAAE,KAAK,KAAK,KAAK,GAAG,MAAM,IAAI,GAAG,OAAO,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;AACzE,CAAC;AAED;;;;;AAKG;SACa,mBAAmB,CACjC,MAAoC,EACpC,EAAuB,EACvB,OAAgC,EAAA;AAEhC,IAAA,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;IAEvC,MAAM,CACJ,MAAK;AACH,QAAA,MAAM,KAAK,GAAG,MAAM,EAAE,CAAC;AAEvB,QAAA,IAAI,KAAK,KAAK,aAAa,EAAE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;AACtE,YAAA,EAAE,GAAG,KAAK,CAAC,CAAC;AACZ,YAAA,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC1B;AACH,KAAC,EACD,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,CACzD,CAAC;AACJ;;AC/EA;;;;;;AAMG;AAUH;;;AAGG;SACa,gBAAgB,GAAA;AAC9B,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AACnC,IAAA,MAAM,OAAO,GAAG,MAAM,CAA0B,UAAU,CAAC,CAAC;IAC5D,MAAM,IAAI,GAAG,MAAM,CAAsD;AACvE,QAAA,KAAK,EAAE,CAAC;AACR,QAAA,MAAM,EAAE,CAAC;AACT,QAAA,OAAO,EAAE,KAAK;AACf,KAAA,CAAC,CAAC;IACH,IAAI,kBAAsC,EAAE,aAAiC,CAAC;IAE9E,eAAe,CACb,MAAK;QACH,kBAAkB,GAAG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,kBAAkB,CAAC;QACpE,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC;KAC3D,EACD,EAAE,KAAK,EAAE,gBAAgB,CAAC,SAAS,EAAE,CACtC,CAAC;IAEF,eAAe,CACb,MAAK;;QAEH,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,oBAAoB,EAAE,IAAI,CAAC,CAAC;QACrE,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;KACnE,EACD,EAAE,KAAK,EAAE,gBAAgB,CAAC,KAAK,EAAE,CAClC,CAAC;IAEF,eAAe,CACb,MAAK;AACH,QAAA,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;AACxE,QAAA,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;;QAG3C,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,oBAAoB,EAAE,kBAAkB,CAAC,CAAC;QACnF,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;KAC1E,EACD,EAAE,KAAK,EAAE,gBAAgB,CAAC,IAAI,EAAE,CACjC,CAAC;AAEF,IAAA,OAAO,IAAI,CAAC;AACd;;AC5DA;;;;;;AAMG;;ACNH;;AAEG;;;;"}