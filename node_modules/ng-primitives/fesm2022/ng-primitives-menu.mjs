import * as i1 from '@angular/cdk/menu';
import { CdkMenu, CdkMenuTrigger, CdkMenuItem } from '@angular/cdk/menu';
import * as i0 from '@angular/core';
import { InjectionToken, inject, Directive, signal, input, booleanAttribute } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import * as i2 from 'ng-primitives/interactions';
import { NgpFocusVisible, NgpHover, NgpPress } from 'ng-primitives/interactions';

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
const NgpMenuToken = new InjectionToken('NgpMenuToken');
/**
 * Inject the Menu directive instance
 */
function injectMenu() {
    return inject(NgpMenuToken);
}

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
class NgpMenu {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpMenu, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.13", type: NgpMenu, isStandalone: true, selector: "[ngpMenu]", providers: [{ provide: NgpMenuToken, useExisting: NgpMenu }], exportAs: ["ngpMenu"], hostDirectives: [{ directive: i1.CdkMenu }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpMenu, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpMenu]',
                    exportAs: 'ngpMenu',
                    providers: [{ provide: NgpMenuToken, useExisting: NgpMenu }],
                    hostDirectives: [CdkMenu],
                }]
        }] });

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
const NgpMenuTriggerToken = new InjectionToken('NgpMenuTriggerToken');
/**
 * Inject the MenuTrigger directive instance
 */
function injectMenuTrigger() {
    return inject(NgpMenuTriggerToken);
}

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
class NgpMenuTrigger {
    constructor() {
        /**
         * Access to the underlying `CdkMenuTrigger`.
         */
        this.cdkMenuTrigger = inject(CdkMenuTrigger);
        /**
         * Store the open state of the menu.
         */
        this.open = signal(false);
        this.cdkMenuTrigger.opened.pipe(takeUntilDestroyed()).subscribe(() => this.open.set(true));
        this.cdkMenuTrigger.closed.pipe(takeUntilDestroyed()).subscribe(() => this.open.set(false));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpMenuTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.13", type: NgpMenuTrigger, isStandalone: true, selector: "[ngpMenuTrigger]", host: { properties: { "attr.data-open": "open() ? \"\" : null" } }, providers: [{ provide: NgpMenuTriggerToken, useExisting: NgpMenuTrigger }], exportAs: ["ngpMenuTrigger"], hostDirectives: [{ directive: i1.CdkMenuTrigger, inputs: ["cdkMenuTriggerFor", "ngpMenuTrigger"] }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpMenuTrigger, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpMenuTrigger]',
                    exportAs: 'ngpMenuTrigger',
                    providers: [{ provide: NgpMenuTriggerToken, useExisting: NgpMenuTrigger }],
                    hostDirectives: [{ directive: CdkMenuTrigger, inputs: ['cdkMenuTriggerFor: ngpMenuTrigger'] }],
                    host: {
                        '[attr.data-open]': 'open() ? "" : null',
                    },
                }]
        }], ctorParameters: () => [] });

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
const NgpMenuItemToken = new InjectionToken('NgpMenuItemToken');
/**
 * Inject the MenuItem directive instance
 */
function injectMenuItem() {
    return inject(NgpMenuItemToken);
}

class NgpMenuItem {
    constructor() {
        /**
         * Whether the menu item is disabled.
         */
        this.disabled = input(false, {
            alias: 'ngpMenuItemDisabled',
            transform: booleanAttribute,
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpMenuItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.13", type: NgpMenuItem, isStandalone: true, selector: "[ngpMenuItem]", inputs: { disabled: { classPropertyName: "disabled", publicName: "ngpMenuItemDisabled", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "attr.data-disabled": "disabled() ? \"\" : null" } }, providers: [{ provide: NgpMenuItemToken, useExisting: NgpMenuItem }], exportAs: ["ngpMenuItem"], hostDirectives: [{ directive: i1.CdkMenuItem, inputs: ["cdkMenuItemDisabled", "ngpMenuItemDisabled"] }, { directive: i2.NgpFocusVisible }, { directive: i2.NgpHover }, { directive: i2.NgpPress }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpMenuItem, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpMenuItem]',
                    exportAs: 'ngpMenuItem',
                    providers: [{ provide: NgpMenuItemToken, useExisting: NgpMenuItem }],
                    hostDirectives: [
                        { directive: CdkMenuItem, inputs: ['cdkMenuItemDisabled:ngpMenuItemDisabled'] },
                        NgpFocusVisible,
                        NgpHover,
                        NgpPress,
                    ],
                    host: {
                        '[attr.data-disabled]': 'disabled() ? "" : null',
                    },
                }]
        }] });

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgpMenu, NgpMenuItem, NgpMenuItemToken, NgpMenuToken, NgpMenuTrigger, NgpMenuTriggerToken };
//# sourceMappingURL=ng-primitives-menu.mjs.map
