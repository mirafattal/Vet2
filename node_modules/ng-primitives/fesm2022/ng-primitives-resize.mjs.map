{"version":3,"file":"ng-primitives-resize.mjs","sources":["../../../../packages/ng-primitives/resize/src/utils/resize.ts","../../../../packages/ng-primitives/resize/src/resize/resize.directive.ts","../../../../packages/ng-primitives/resize/src/index.ts","../../../../packages/ng-primitives/resize/src/ng-primitives-resize.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Observable } from 'rxjs';\n\n/**\n * A simple helper function to create a resize observer as an RxJS Observable.\n * @param element The element to observe for resize events.\n * @returns The resize event as an Observable.\n */\nexport function fromResizeEvent(element: HTMLElement): Observable<Dimensions> {\n  return new Observable(observer => {\n    const resizeObserver = new ResizeObserver(entries => {\n      // if there are no entries, ignore the event\n      if (!entries.length) {\n        return;\n      }\n\n      // otherwise, take the first entry and emit the dimensions\n      const entry = entries[0];\n\n      if ('borderBoxSize' in entry) {\n        const borderSizeEntry = entry['borderBoxSize'];\n        // this may be different across browsers so normalize it\n        const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n\n        observer.next({ width: borderSize['inlineSize'], height: borderSize['blockSize'] });\n      } else {\n        // fallback for browsers that don't support borderBoxSize\n        observer.next({\n          width: element.offsetWidth,\n          height: element.offsetHeight,\n        });\n      }\n    });\n\n    resizeObserver.observe(element);\n\n    return () => resizeObserver.disconnect();\n  });\n}\n\nexport interface Dimensions {\n  width: number;\n  height: number;\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { DestroyRef, Directive, ElementRef, NgZone, OnInit, inject, output } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Dimensions, fromResizeEvent } from '../utils/resize';\n\n@Directive({\n  selector: '[ngpResize]',\n  standalone: true,\n})\nexport class NgpResize implements OnInit {\n  /**\n   * Access the element.\n   */\n  private readonly element = inject<ElementRef<HTMLElement>>(ElementRef);\n\n  /**\n   * Access zone.js\n   */\n  private readonly ngZone = inject(NgZone);\n\n  /**\n   * Access the destroy ref\n   */\n  private readonly destroyRef = inject(DestroyRef);\n\n  /**\n   * Emit when the element is resized.\n   */\n  readonly didResize = output<Dimensions>({\n    alias: 'ngpResize',\n  });\n\n  ngOnInit(): void {\n    // oberve the element for resize events\n    fromResizeEvent(this.element.nativeElement)\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(event => this.ngZone.run(() => this.didResize.emit(event)));\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpResize } from './resize/resize.directive';\nexport { Dimensions, fromResizeEvent } from './utils/resize';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;AAAA;;;;;;AAMG;AAGH;;;;AAIG;AACG,SAAU,eAAe,CAAC,OAAoB,EAAA;AAClD,IAAA,OAAO,IAAI,UAAU,CAAC,QAAQ,IAAG;AAC/B,QAAA,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,OAAO,IAAG;;AAElD,YAAA,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACnB,OAAO;aACR;;AAGD,YAAA,MAAM,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAEzB,YAAA,IAAI,eAAe,IAAI,KAAK,EAAE;AAC5B,gBAAA,MAAM,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;;AAE/C,gBAAA,MAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC;AAEzF,gBAAA,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,UAAU,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;aACrF;iBAAM;;gBAEL,QAAQ,CAAC,IAAI,CAAC;oBACZ,KAAK,EAAE,OAAO,CAAC,WAAW;oBAC1B,MAAM,EAAE,OAAO,CAAC,YAAY;AAC7B,iBAAA,CAAC,CAAC;aACJ;AACH,SAAC,CAAC,CAAC;AAEH,QAAA,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAEhC,QAAA,OAAO,MAAM,cAAc,CAAC,UAAU,EAAE,CAAC;AAC3C,KAAC,CAAC,CAAC;AACL;;AC5CA;;;;;;AAMG;MASU,SAAS,CAAA;AAJtB,IAAA,WAAA,GAAA;AAKE;;AAEG;AACc,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAA0B,UAAU,CAAC,CAAC;AAEvE;;AAEG;AACc,QAAA,IAAA,CAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAEzC;;AAEG;AACc,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAEjD;;AAEG;QACM,IAAS,CAAA,SAAA,GAAG,MAAM,CAAa;AACtC,YAAA,KAAK,EAAE,WAAW;AACnB,SAAA,CAAC,CAAC;AAQJ,KAAA;IANC,QAAQ,GAAA;;AAEN,QAAA,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;AACxC,aAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACzC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC1E;+GA5BU,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;mGAAT,SAAS,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,aAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAAT,SAAS,EAAA,UAAA,EAAA,CAAA;kBAJrB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,aAAa;AACvB,oBAAA,UAAU,EAAE,IAAI;AACjB,iBAAA,CAAA;;;ACdD;;;;;;AAMG;;ACNH;;AAEG;;;;"}