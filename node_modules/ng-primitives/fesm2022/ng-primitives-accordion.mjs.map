{"version":3,"file":"ng-primitives-accordion.mjs","sources":["../../../../packages/ng-primitives/accordion/src/accordion-item/accordion-item.token.ts","../../../../packages/ng-primitives/accordion/src/accordion/accordion.token.ts","../../../../packages/ng-primitives/accordion/src/accordion-content/accordion-content.token.ts","../../../../packages/ng-primitives/accordion/src/accordion-content/accordion-content.directive.ts","../../../../packages/ng-primitives/accordion/src/accordion-trigger/accordion-trigger.token.ts","../../../../packages/ng-primitives/accordion/src/accordion-item/accordion-item.directive.ts","../../../../packages/ng-primitives/accordion/src/accordion-trigger/accordion-trigger.directive.ts","../../../../packages/ng-primitives/accordion/src/config/accordion.config.ts","../../../../packages/ng-primitives/accordion/src/accordion/accordion.directive.ts","../../../../packages/ng-primitives/accordion/src/index.ts","../../../../packages/ng-primitives/accordion/src/ng-primitives-accordion.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpAccordionItem } from './accordion-item.directive';\n\nexport const NgpAccordionItemToken = new InjectionToken<NgpAccordionItem<unknown>>(\n  'NgpAccordionItemToken',\n);\n\n/**\n * Inject the AccordionItem directive instance\n * @returns The AccordionItem directive instance\n */\nexport function injectAccordionItem<T>(): NgpAccordionItem<T> {\n  return inject(NgpAccordionItemToken) as NgpAccordionItem<T>;\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpAccordion } from './accordion.directive';\n\nexport const NgpAccordionToken = new InjectionToken<NgpAccordion<unknown>>('NgpAccordionToken');\n\n/**\n * Inject the Accordion directive instance\n * @returns The Accordion directive instance\n */\nexport function injectAccordion<T>(): NgpAccordion<T> {\n  return inject(NgpAccordionToken) as NgpAccordion<T>;\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpAccordionContent } from './accordion-content.directive';\n\nexport const NgpAccordionContentToken = new InjectionToken<NgpAccordionContent>(\n  'NgpAccordionContentToken',\n);\n\n/**\n * Inject the AccordionContent directive instance\n * @returns The AccordionContent directive instance\n */\nexport function injectAccordionContent(): NgpAccordionContent {\n  return inject(NgpAccordionContentToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Directive, input } from '@angular/core';\nimport { uniqueId } from 'ng-primitives/utils';\nimport { injectAccordionItem } from '../accordion-item/accordion-item.token';\nimport { injectAccordion } from '../accordion/accordion.token';\nimport { NgpAccordionContentToken } from './accordion-content.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpAccordionContent]',\n  exportAs: 'ngpAccordionContent',\n  providers: [{ provide: NgpAccordionContentToken, useExisting: NgpAccordionContent }],\n  host: {\n    role: 'region',\n    '[id]': 'id()',\n    '[attr.data-orientation]': 'accordion.orientation()',\n    '[attr.data-open]': 'accordionItem.open() ? \"\" : null',\n    '[attr.aria-labelledby]': 'accordionItem.triggerId()',\n  },\n})\nexport class NgpAccordionContent {\n  /**\n   * Access the accordion\n   */\n  protected readonly accordion = injectAccordion();\n\n  /**\n   * Access the accordion item\n   */\n  protected readonly accordionItem = injectAccordionItem();\n\n  /**\n   * The id of the content region\n   */\n  readonly id = input<string>(uniqueId('ngp-accordion-content'));\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpAccordionTrigger } from './accordion-trigger.directive';\n\nexport const NgpAccordionTriggerToken = new InjectionToken<NgpAccordionTrigger>(\n  'NgpAccordionTriggerToken',\n);\n\n/**\n * Inject the AccordionTrigger directive instance\n * @returns The AccordionTrigger directive instance\n */\nexport function injectAccordionTrigger(): NgpAccordionTrigger {\n  return inject(NgpAccordionTriggerToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { Directive, booleanAttribute, computed, contentChild, input } from '@angular/core';\nimport { NgpAccordionContentToken } from '../accordion-content/accordion-content.token';\nimport { NgpAccordionTriggerToken } from '../accordion-trigger/accordion-trigger.token';\nimport { injectAccordion } from '../accordion/accordion.token';\nimport { NgpAccordionItemToken } from './accordion-item.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpAccordionItem]',\n  exportAs: 'ngpAccordionItem',\n  providers: [{ provide: NgpAccordionItemToken, useExisting: NgpAccordionItem }],\n  host: {\n    '[attr.data-orientation]': 'accordion.orientation()',\n    '[attr.data-open]': 'open() ? \"\" : null',\n    '[attr.data-disabled]': 'disabled() || accordion.disabled() ? \"\" : null',\n  },\n})\nexport class NgpAccordionItem<T> {\n  /**\n   * Access the accordion.\n   */\n  protected readonly accordion = injectAccordion();\n\n  /**\n   * The value of the accordion item.\n   */\n  readonly value = input.required<T>({\n    alias: 'ngpAccordionItemValue',\n  });\n\n  /**\n   * Whether the accordion item is disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpAccordionItemDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Access the accordion trigger\n   */\n  private readonly trigger = contentChild(NgpAccordionTriggerToken);\n\n  /**\n   * Access the accordion content\n   */\n  private readonly content = contentChild(NgpAccordionContentToken);\n\n  /**\n   * Whether the accordion item is expanded.\n   */\n  readonly open = computed<boolean>(() => this.accordion.isOpen(this.value()));\n\n  /**\n   * The trigger id.\n   */\n  readonly triggerId = computed(() => this.trigger()?.id());\n\n  /**\n   * The content id.\n   */\n  readonly contentId = computed(() => this.content()?.id());\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Directive, HostListener, input } from '@angular/core';\nimport { uniqueId } from 'ng-primitives/utils';\nimport { injectAccordionItem } from '../accordion-item/accordion-item.token';\nimport { injectAccordion } from '../accordion/accordion.token';\nimport { NgpAccordionTriggerToken } from './accordion-trigger.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpAccordionTrigger]',\n  exportAs: 'ngpAccordionTrigger',\n  providers: [{ provide: NgpAccordionTriggerToken, useExisting: NgpAccordionTrigger }],\n  host: {\n    '[id]': 'id()',\n    '[attr.data-orientation]': 'accordion.orientation()',\n    '[attr.data-open]': 'item.open() ? \"\" : null',\n    '[attr.data-disabled]': 'item.disabled() || accordion.disabled() ? \"\" : null',\n    '[attr.aria-controls]': 'item.contentId()',\n    '[attr.aria-expanded]': 'item.open()',\n  },\n})\nexport class NgpAccordionTrigger {\n  /**\n   * Access the parent accordion.\n   */\n  protected readonly accordion = injectAccordion();\n\n  /**\n   * The item instance.\n   */\n  protected readonly item = injectAccordionItem();\n\n  /**\n   * The id of the trigger.\n   */\n  readonly id = input<string>(uniqueId('ngp-accordion-trigger'));\n\n  /**\n   * Toggle the accordion item.\n   */\n  @HostListener('click')\n  toggle(): void {\n    if (this.item.disabled() || this.accordion.disabled()) {\n      return;\n    }\n\n    this.accordion.toggle(this.item.value());\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, Provider, inject } from '@angular/core';\nimport { NgpAccordionType } from '../accordion/accordion.directive';\n\nexport interface NgpAccordionConfig {\n  /**\n   * The default type of the accordion\n   * @default 'single'\n   */\n  type: NgpAccordionType;\n  /**\n   * Whether the accordion is collapsible\n   * @default false\n   */\n  collapsible: boolean;\n  /**\n   * The default orientation of the accordion\n   * @default 'vertical'\n   */\n  orientation: 'vertical' | 'horizontal';\n}\n\nexport const defaultAccordionConfig: NgpAccordionConfig = {\n  type: 'single',\n  collapsible: false,\n  orientation: 'vertical',\n};\n\nexport const NgpAccordionConfigToken = new InjectionToken<NgpAccordionConfig>(\n  'NgpAccordionConfigToken',\n);\n\n/**\n * Provide the default Accordion configuration\n * @param config The Accordion configuration\n * @returns The provider\n */\nexport function provideAccordionConfig(config: Partial<NgpAccordionConfig>): Provider[] {\n  return [\n    {\n      provide: NgpAccordionConfigToken,\n      useValue: { ...defaultAccordionConfig, ...config },\n    },\n  ];\n}\n\n/**\n * Inject the Accordion configuration\n * @returns The global Accordion configuration\n */\nexport function injectAccordionConfig(): NgpAccordionConfig {\n  return inject(NgpAccordionConfigToken, { optional: true }) ?? defaultAccordionConfig;\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { Directive, booleanAttribute, input, model } from '@angular/core';\nimport { injectAccordionConfig } from '../config/accordion.config';\nimport { NgpAccordionToken } from './accordion.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpAccordion]',\n  exportAs: 'ngpAccordion',\n  providers: [{ provide: NgpAccordionToken, useExisting: NgpAccordion }],\n  host: {\n    '[attr.data-orientation]': 'orientation()',\n    '[attr.data-disabled]': 'disabled() ? \"\" : null',\n  },\n})\nexport class NgpAccordion<T> {\n  /**\n   * Access the global accordion configuration.\n   */\n  private readonly config = injectAccordionConfig();\n\n  /**\n   * The type of the accordion.\n   */\n  readonly type = input<NgpAccordionType>(this.config.type, {\n    alias: 'ngpAccordionType',\n  });\n\n  /**\n   * Whether the accordion is collapsible.\n   */\n  readonly collapsible = input<boolean, BooleanInput>(this.config.collapsible, {\n    alias: 'ngpAccordionCollapsible',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * The value of the accordion.\n   */\n  readonly value = model<T | T[] | null>(null, {\n    alias: 'ngpAccordionValue',\n  });\n\n  /**\n   * Whether the accordion is disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpAccordionDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * The accordion orientation.\n   */\n  readonly orientation = input<'horizontal' | 'vertical'>(this.config.orientation, {\n    alias: 'ngpAccordionOrientation',\n  });\n\n  /**\n   * @param value The value to check.\n   * @returns Whether the value is open.\n   * @internal\n   */\n  isOpen(value: T): boolean {\n    if (this.type() === 'multiple') {\n      return (this.value() as T[] | null)?.includes(value) ?? false;\n    }\n\n    return this.value() === value;\n  }\n\n  toggle(value: T): void {\n    const isOpen = this.isOpen(value);\n\n    // if we are in single mode and the value is already open and the accordion is not collapsible, do nothing\n    if (this.type() === 'single' && isOpen && !this.collapsible()) {\n      return;\n    }\n\n    // if we are in single mode then toggle the value\n    if (this.type() === 'single') {\n      this.value.set(isOpen ? null : value);\n      return;\n    }\n\n    // if we are in multiple mode then toggle the value\n    const values = (this.value() as T[]) ?? [];\n\n    if (isOpen) {\n      this.value.set(values.filter(v => v !== value));\n    } else {\n      this.value.set([...values, value]);\n    }\n  }\n}\n\nexport type NgpAccordionType = 'single' | 'multiple';\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpAccordionContent } from './accordion-content/accordion-content.directive';\nexport { NgpAccordionContentToken } from './accordion-content/accordion-content.token';\nexport { NgpAccordionItem } from './accordion-item/accordion-item.directive';\nexport { NgpAccordionItemToken } from './accordion-item/accordion-item.token';\nexport { NgpAccordionTrigger } from './accordion-trigger/accordion-trigger.directive';\nexport { NgpAccordionTriggerToken } from './accordion-trigger/accordion-trigger.token';\nexport { NgpAccordion } from './accordion/accordion.directive';\nexport { NgpAccordionToken } from './accordion/accordion.token';\nexport { NgpAccordionConfig, provideAccordionConfig } from './config/accordion.config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}