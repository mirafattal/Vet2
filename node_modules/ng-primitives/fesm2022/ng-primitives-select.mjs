import * as i0 from '@angular/core';
import { InjectionToken, inject, input, booleanAttribute, Directive } from '@angular/core';
import * as i1 from 'ng-primitives/form-field';
import { NgpFormControl } from 'ng-primitives/form-field';
import * as i2 from 'ng-primitives/interactions';
import { NgpFocusVisible, NgpHover, NgpPress } from 'ng-primitives/interactions';
import { NgpDisabledToken } from 'ng-primitives/internal';

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
const NgpSelectToken = new InjectionToken('NgpSelectToken');
/**
 * Inject the Select directive instance
 */
function injectSelect() {
    return inject(NgpSelectToken);
}

class NgpSelect {
    constructor() {
        /**
         * Whether the select is disabled.
         */
        this.disabled = input(false, {
            alias: 'ngpSelectDisabled',
            transform: booleanAttribute,
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpSelect, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.13", type: NgpSelect, isStandalone: true, selector: "select[ngpSelect]", inputs: { disabled: { classPropertyName: "disabled", publicName: "ngpSelectDisabled", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "attr.disabled": "disabled() || null" } }, providers: [
            { provide: NgpSelectToken, useExisting: NgpSelect },
            { provide: NgpDisabledToken, useExisting: NgpSelect },
        ], exportAs: ["ngpSelect"], hostDirectives: [{ directive: i1.NgpFormControl }, { directive: i2.NgpFocusVisible }, { directive: i2.NgpHover }, { directive: i2.NgpPress }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpSelect, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: 'select[ngpSelect]',
                    exportAs: 'ngpSelect',
                    providers: [
                        { provide: NgpSelectToken, useExisting: NgpSelect },
                        { provide: NgpDisabledToken, useExisting: NgpSelect },
                    ],
                    hostDirectives: [NgpFormControl, NgpFocusVisible, NgpHover, NgpPress],
                    host: {
                        '[attr.disabled]': 'disabled() || null',
                    },
                }]
        }] });

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgpSelect, NgpSelectToken };
//# sourceMappingURL=ng-primitives-select.mjs.map
