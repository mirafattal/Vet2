{"version":3,"file":"ng-primitives-date-time.mjs","sources":["../../../../packages/ng-primitives/date-time/src/native-date-adapter/native-date-adapter.ts","../../../../packages/ng-primitives/date-time/src/date-adapter/date-adapter.token.ts","../../../../packages/ng-primitives/date-time/src/index.ts","../../../../packages/ng-primitives/date-time/src/ng-primitives-date-time.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { NgpDateAdapter, NgpDateUnits, NgpDuration } from '../date-adapter/date-adapter';\n\nexport class NgpNativeDateAdapter implements NgpDateAdapter<Date> {\n  /**\n   * Create a new date time object.\n   */\n  create({ day, hour, minute, month, second, year, millisecond }: NgpDateUnits): Date {\n    const now = new Date();\n\n    return new Date(\n      year ?? now.getFullYear(),\n      month ?? now.getMonth(),\n      day ?? now.getDate(),\n      hour ?? now.getHours(),\n      minute ?? now.getMinutes(),\n      second ?? now.getSeconds(),\n      millisecond ?? now.getMilliseconds(),\n    );\n  }\n\n  /**\n   * Create a new date with the current date and time.\n   */\n  now(): Date {\n    return new Date();\n  }\n\n  /**\n   * Set the year of the date time object based on a duration.\n   */\n  set(date: Date, values: NgpDateUnits): Date {\n    return new Date(\n      values.year ?? date.getFullYear(),\n      values.month ?? date.getMonth(),\n      values.day ?? date.getDate(),\n      values.hour ?? date.getHours(),\n      values.minute ?? date.getMinutes(),\n      values.second ?? date.getSeconds(),\n      values.millisecond ?? date.getMilliseconds(),\n    );\n  }\n\n  /**\n   * Add a duration to the date time object.\n   */\n  add(date: Date, duration: NgpDuration): Date {\n    return new Date(\n      date.getFullYear() + (duration.years ?? 0),\n      date.getMonth() + (duration.months ?? 0),\n      date.getDate() + (duration.days ?? 0),\n      date.getHours() + (duration.hours ?? 0),\n      date.getMinutes() + (duration.minutes ?? 0),\n      date.getSeconds() + (duration.seconds ?? 0),\n      date.getMilliseconds() + (duration.milliseconds ?? 0),\n    );\n  }\n\n  /**\n   * Subtract a duration from the date time object\n   */\n  subtract(date: Date, duration: NgpDuration): Date {\n    return new Date(\n      date.getFullYear() - (duration.years ?? 0),\n      date.getMonth() - (duration.months ?? 0),\n      date.getDate() - (duration.days ?? 0),\n      date.getHours() - (duration.hours ?? 0),\n      date.getMinutes() - (duration.minutes ?? 0),\n      date.getSeconds() - (duration.seconds ?? 0),\n      date.getMilliseconds() - (duration.milliseconds ?? 0),\n    );\n  }\n\n  /**\n   * Compare two date time objects\n   */\n  compare(a: Date, b: Date): number {\n    const diff = a.getTime() - b.getTime();\n    return diff === 0 ? 0 : diff > 0 ? 1 : -1;\n  }\n\n  /**\n   * Determine if two date time objects are equal.\n   */\n  isEqual(a: Date, b: Date): boolean {\n    return a.getTime() === b.getTime();\n  }\n\n  /**\n   * Determine if a date time object is before another.\n   */\n  isBefore(a: Date, b: Date): boolean {\n    return a.getTime() < b.getTime();\n  }\n\n  /**\n   * Determine if a date time object is after another.\n   */\n  isAfter(a: Date, b: Date): boolean {\n    return a.getTime() > b.getTime();\n  }\n\n  /**\n   * Determine if two date objects are on the same day.\n   */\n  isSameDay(a: Date, b: Date): boolean {\n    return this.isSameYear(a, b) && this.isSameMonth(a, b) && a.getDate() === b.getDate();\n  }\n\n  /**\n   * Determine if two date objects are on the same month.\n   */\n  isSameMonth(a: Date, b: Date): boolean {\n    return this.isSameYear(a, b) && a.getMonth() === b.getMonth();\n  }\n\n  /**\n   * Determine if two date objects are on the same year.\n   */\n  isSameYear(a: Date, b: Date): boolean {\n    return a.getFullYear() === b.getFullYear();\n  }\n\n  /**\n   * Get the year.\n   */\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  /**\n   * Get the month.\n   */\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  /**\n   * Get the day.\n   */\n  getDay(date: Date): number {\n    return date.getDay();\n  }\n\n  /**\n   * Get the date.\n   */\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  /**\n   * Get the hours.\n   */\n  getHours(date: Date): number {\n    return date.getHours();\n  }\n\n  /**\n   * Get the minutes.\n   */\n  getMinutes(date: Date): number {\n    return date.getMinutes();\n  }\n\n  /**\n   * Get the seconds.\n   */\n  getSeconds(date: Date): number {\n    return date.getSeconds();\n  }\n\n  /**\n   * Get the milliseconds.\n   */\n  getMilliseconds(date: Date): number {\n    return date.getMilliseconds();\n  }\n\n  /**\n   * Get the first day of the month.\n   */\n  startOfMonth(date: Date): Date {\n    return new Date(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  /**\n   * Get the last day of the month.\n   */\n  endOfMonth(date: Date): Date {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  /**\n   * Get the start of the day.\n   */\n  startOfDay(date: Date): Date {\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  /**\n   * Get the end of the day.\n   */\n  endOfDay(date: Date): Date {\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59, 999);\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { ClassProvider, InjectionToken, Type, inject } from '@angular/core';\nimport { NgpNativeDateAdapter } from '../native-date-adapter/native-date-adapter';\nimport type { NgpDateAdapter } from './date-adapter';\n\nexport const NgpDateAdapterToken = new InjectionToken<NgpDateAdapter<unknown>>(\n  'NgpDateAdapterToken',\n);\n\n/**\n * Inject the DateAdapter instance\n */\nexport function injectDateAdapter<T>(): NgpDateAdapter<T> {\n  return (\n    (inject(NgpDateAdapterToken, { optional: true }) as NgpDateAdapter<T>) ||\n    new NgpNativeDateAdapter()\n  );\n}\n\n/**\n * Provide the DateAdapter instance\n */\nexport function provideDateAdapter<T>(adapter: Type<NgpDateAdapter<T>>): ClassProvider {\n  return { provide: NgpDateAdapterToken, useClass: adapter };\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpDateAdapter, NgpDateUnits, NgpDuration } from './date-adapter/date-adapter';\nexport { injectDateAdapter, provideDateAdapter } from './date-adapter/date-adapter.token';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}