{"version":3,"file":"ng-primitives-radio.mjs","sources":["../../../../packages/ng-primitives/radio/src/radio-group/radio-group.token.ts","../../../../packages/ng-primitives/radio/src/radio-group/radio-group.directive.ts","../../../../packages/ng-primitives/radio/src/radio-item/radio-item.token.ts","../../../../packages/ng-primitives/radio/src/radio-indicator/radio-indicator.directive.ts","../../../../packages/ng-primitives/radio/src/radio-item/radio-item.directive.ts","../../../../packages/ng-primitives/radio/src/index.ts","../../../../packages/ng-primitives/radio/src/ng-primitives-radio.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpRadioGroup } from './radio-group.directive';\n\nexport const NgpRadioGroupToken = new InjectionToken<NgpRadioGroup>('NgpRadioGroupToken');\n\n/**\n * Injects the radio group directive.\n * @returns The radio group directive.\n */\nexport function injectRadioGroup(): NgpRadioGroup {\n  return inject(NgpRadioGroupToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { Directive, booleanAttribute, input, model } from '@angular/core';\nimport { NgpFormControl } from 'ng-primitives/form-field';\nimport { NgpCanDisable, NgpDisabledToken } from 'ng-primitives/internal';\nimport { NgpRovingFocusGroup } from 'ng-primitives/roving-focus';\nimport { NgpRadioGroupToken } from './radio-group.token';\n\n@Directive({\n  selector: '[ngpRadioGroup]',\n  standalone: true,\n  providers: [\n    { provide: NgpRadioGroupToken, useExisting: NgpRadioGroup },\n    { provide: NgpDisabledToken, useExisting: NgpRadioGroup },\n  ],\n  hostDirectives: [NgpRovingFocusGroup, NgpFormControl],\n  host: {\n    role: 'radiogroup',\n    '[attr.aria-orientation]': 'orientation()',\n    '[attr.data-orientation]': 'orientation()',\n  },\n})\nexport class NgpRadioGroup implements NgpCanDisable {\n  /**\n   * The value of the radio group.\n   */\n  readonly value = model<string | null>(null, { alias: 'ngpRadioGroupValue' });\n\n  /**\n   * Whether the radio group is disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpRadioGroupDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * The orientation of the radio group.\n   * @default 'horizontal'\n   */\n  readonly orientation = input<'horizontal' | 'vertical'>('horizontal', {\n    alias: 'ngpRadioGroupOrientation',\n  });\n\n  /**\n   * Select a radio item.\n   * @param value The value of the radio item to select.\n   */\n  select(value: string): void {\n    this.value.set(value);\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpRadioItem } from './radio-item.directive';\n\nexport const NgpRadioItemToken = new InjectionToken<NgpRadioItem>('NgpRadioItemToken');\n\n/**\n * Inject the RadioItem directive instance\n * @returns The RadioItem directive instance\n */\nexport function injectRadioItem(): NgpRadioItem {\n  return inject(NgpRadioItemToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Directive, computed } from '@angular/core';\nimport { NgpHover, NgpPress } from 'ng-primitives/interactions';\nimport { injectRadioGroup } from '../radio-group/radio-group.token';\nimport { injectRadioItem } from '../radio-item/radio-item.token';\n\n@Directive({\n  selector: '[ngpRadioIndicator]',\n  standalone: true,\n  host: {\n    '[attr.data-checked]': 'checked() ? \"\" : null',\n    '[attr.data-disabled]': 'radioItem.disabled() ? \"\" : null',\n  },\n  hostDirectives: [NgpHover, NgpPress],\n})\nexport class NgpRadioIndicator {\n  /**\n   * Access the radio group.\n   */\n  protected readonly radioGroup = injectRadioGroup();\n\n  /**\n   * Access the radio group item.\n   */\n  protected readonly radioItem = injectRadioItem();\n\n  /**\n   * Determine if the radio indicator is checked.\n   */\n  readonly checked = computed(() => this.radioGroup.value() === this.radioItem.value());\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { Directive, HostListener, booleanAttribute, computed, input } from '@angular/core';\nimport { NgpFocusVisible, NgpHover, NgpPress } from 'ng-primitives/interactions';\nimport { NgpRovingFocusItem } from 'ng-primitives/roving-focus';\nimport { injectRadioGroup } from '../radio-group/radio-group.token';\nimport { NgpRadioItemToken } from './radio-item.token';\n\n@Directive({\n  selector: '[ngpRadioItem]',\n  standalone: true,\n  hostDirectives: [NgpRovingFocusItem, NgpHover, NgpFocusVisible, NgpPress],\n  providers: [{ provide: NgpRadioItemToken, useExisting: NgpRadioItem }],\n  host: {\n    role: 'radio',\n    '[attr.aria-checked]': 'checked() ? \"true\" : \"false\"',\n    '[attr.data-disabled]': 'disabled() ? \"\" : null',\n    '[attr.data-checked]': 'checked() ? \"\" : null',\n  },\n})\nexport class NgpRadioItem {\n  /**\n   * Access the radio group.\n   */\n  private readonly radioGroup = injectRadioGroup();\n\n  /**\n   * The value of the radio item.\n   */\n  readonly value = input.required<string>({ alias: 'ngpRadioItemValue' });\n\n  /**\n   * Whether the radio item is disabled.\n   * @default false\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpRadioItemDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Whether the radio item is checked.\n   */\n  readonly checked = computed(() => this.radioGroup.value() === this.value());\n\n  /**\n   * When the item receives focus, select it.\n   * @internal\n   */\n  @HostListener('focus')\n  protected onFocus(): void {\n    this.radioGroup.select(this.value());\n  }\n\n  /**\n   * When the item receives a click, select it.\n   * @internal\n   */\n  @HostListener('click')\n  protected onClick(): void {\n    this.radioGroup.select(this.value());\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpRadioGroup } from './radio-group/radio-group.directive';\nexport { NgpRadioGroupToken } from './radio-group/radio-group.token';\nexport { NgpRadioIndicator } from './radio-indicator/radio-indicator.directive';\nexport { NgpRadioItem } from './radio-item/radio-item.directive';\nexport { NgpRadioItemToken } from './radio-item/radio-item.token';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","i2"],"mappings":"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"}