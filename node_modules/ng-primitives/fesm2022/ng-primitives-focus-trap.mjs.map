{"version":3,"file":"ng-primitives-focus-trap.mjs","sources":["../../../../packages/ng-primitives/focus-trap/src/focus-trap/focus-trap.token.ts","../../../../packages/ng-primitives/focus-trap/src/focus-trap/focus-trap.directive.ts","../../../../packages/ng-primitives/focus-trap/src/index.ts","../../../../packages/ng-primitives/focus-trap/src/ng-primitives-focus-trap.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpFocusTrap } from './focus-trap.directive';\n\nexport const NgpFocusTrapToken = new InjectionToken<NgpFocusTrap>('NgpFocusTrapToken');\n\n/**\n * Inject the FocusTrap directive instance\n */\nexport function injectFocusTrap(): NgpFocusTrap {\n  return inject(NgpFocusTrapToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InteractivityChecker } from '@angular/cdk/a11y';\nimport {\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  HostListener,\n  inject,\n  input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NgpFocusTrapToken } from './focus-trap.token';\n\n/**\n * This implementation is based on the Radix UI FocusScope:\n * https://github.com/radix-ui/primitives/blob/main/packages/react/focus-scope/src/FocusScope.tsx#L306\n */\n\nclass FocusTrap {\n  /**\n   * Whether the focus trap is active.\n   */\n  active: boolean = false;\n\n  /**\n   * Activates the focus trap.\n   */\n  activate(): void {\n    this.active = true;\n  }\n\n  /**\n   * Deactivates the focus trap.\n   */\n  deactivate(): void {\n    this.active = false;\n  }\n}\n\nclass FocusTrapStack {\n  /**\n   * The stack of focus traps.\n   */\n  private readonly stack: FocusTrap[] = [];\n\n  /**\n   * Adds a focus trap to the stack.\n   */\n  add(focusTrap: FocusTrap): void {\n    // deactivate the previous focus trap\n    this.stack.forEach(t => t.deactivate());\n\n    // add the new focus trap and activate it\n    this.stack.push(focusTrap);\n    focusTrap.activate();\n  }\n\n  /**\n   * Removes a focus trap from the stack.\n   */\n  remove(focusTrap: FocusTrap): void {\n    // remove the focus trap\n    const index = this.stack.indexOf(focusTrap);\n\n    if (index >= 0) {\n      this.stack.splice(index, 1);\n    }\n\n    // activate the previous focus trap\n    const previous = this.stack[this.stack.length - 1];\n\n    if (previous) {\n      previous.activate();\n    }\n  }\n}\n\n// create a global stack of focus traps\nconst focusTrapStack = new FocusTrapStack();\n\n@Directive({\n  standalone: true,\n  selector: '[ngpFocusTrap]',\n  exportAs: 'ngpFocusTrap',\n  providers: [{ provide: NgpFocusTrapToken, useExisting: NgpFocusTrap }],\n  host: {\n    '[attr.tabindex]': '-1',\n    '[attr.data-focus-trap]': '!disabled() ? \"\" : null',\n  },\n})\nexport class NgpFocusTrap implements OnInit, OnDestroy {\n  /**\n   * Create a new focus trap.\n   */\n  private readonly focusTrap = new FocusTrap();\n\n  /**\n   * Access the interactivity checker.\n   */\n  private readonly interactivityChecker = inject(InteractivityChecker);\n\n  /**\n   * Get the focus trap container element.\n   */\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n\n  /**\n   * Access NgZone to run the focus trap events outside of Angular's zone.\n   */\n  private readonly ngZone = inject(NgZone);\n\n  /**\n   * Store the mutation observer.\n   */\n  private mutationObserver: MutationObserver | null = null;\n\n  /**\n   * Store the last focused element.\n   */\n  private lastFocusedElement: HTMLElement | null = null;\n\n  /**\n   * Whether the focus trap is disabled.\n   */\n  readonly disabled = input(false, {\n    alias: 'ngpFocusTrapDisabled',\n    transform: booleanAttribute,\n  });\n\n  ngOnInit(): void {\n    focusTrapStack.add(this.focusTrap);\n\n    this.mutationObserver = new MutationObserver(this.handleMutations.bind(this));\n\n    // setup event listeners\n    this.ngZone.runOutsideAngular(() => {\n      this.mutationObserver!.observe(this.elementRef.nativeElement, {\n        childList: true,\n        subtree: true,\n      });\n      document.addEventListener('focusin', this.handleFocusIn.bind(this));\n      document.addEventListener('focusout', this.handleFocusOut.bind(this));\n    });\n\n    const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n    const hasFocusedCandidate = this.elementRef.nativeElement.contains(previouslyFocusedElement);\n\n    if (!hasFocusedCandidate) {\n      this.focusFirst();\n\n      // if the focus didn't change, focus the container\n      if (document.activeElement === previouslyFocusedElement) {\n        this.focus(this.elementRef.nativeElement);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    focusTrapStack.remove(this.focusTrap);\n    this.mutationObserver?.disconnect();\n  }\n\n  private handleFocusIn(event: FocusEvent): void {\n    if (!this.focusTrap.active || this.disabled()) {\n      return;\n    }\n\n    const target = event.target as HTMLElement | null;\n\n    if (this.elementRef.nativeElement.contains(target)) {\n      this.lastFocusedElement = target;\n    } else {\n      this.focus(this.lastFocusedElement);\n    }\n  }\n\n  /**\n   * Handles the `focusout` event.\n   */\n  private handleFocusOut(event: FocusEvent) {\n    if (!this.focusTrap.active || this.disabled() || event.relatedTarget === null) {\n      return;\n    }\n\n    const relatedTarget = event.relatedTarget as HTMLElement;\n\n    if (!this.elementRef.nativeElement.contains(relatedTarget)) {\n      this.focus(this.lastFocusedElement);\n    }\n  }\n\n  /**\n   * If the focused element gets removed from the DOM, browsers move focus back to the document.body.\n   * We move focus to the container to keep focus trapped correctly.\n   */\n  private handleMutations(mutations: MutationRecord[]): void {\n    const focusedElement = document.activeElement as HTMLElement | null;\n\n    if (focusedElement !== document.body) {\n      return;\n    }\n\n    for (const mutation of mutations) {\n      if (mutation.removedNodes.length > 0) {\n        this.focus(this.elementRef.nativeElement);\n      }\n    }\n  }\n\n  /**\n   * Handles the `keydown` event.\n   */\n  @HostListener('keydown', ['$event'])\n  protected handleKeyDown(event: KeyboardEvent): void {\n    if (!this.focusTrap.active || this.disabled()) {\n      return;\n    }\n\n    const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n    const focusedElement = document.activeElement as HTMLElement | null;\n\n    if (isTabKey && focusedElement) {\n      const container = event.currentTarget as HTMLElement;\n      const [first, last] = this.getTabbableEdges(container);\n      const hasTabbableElementsInside = first && last;\n\n      // we can only wrap focus if we have tabbable edges\n      if (!hasTabbableElementsInside) {\n        if (focusedElement === container) {\n          event.preventDefault();\n        }\n      } else {\n        if (!event.shiftKey && focusedElement === last) {\n          event.preventDefault();\n          this.focus(first);\n        } else if (event.shiftKey && focusedElement === first) {\n          event.preventDefault();\n          this.focus(last);\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns the first and last tabbable elements inside a container.\n   */\n  private getTabbableEdges(container: HTMLElement) {\n    const candidates = this.getTabbableCandidates(container);\n    const first = this.findVisible(candidates);\n    const last = this.findVisible(candidates.reverse());\n    return [first, last] as const;\n  }\n\n  /**\n   * Returns a list of potential focusable elements inside a container.\n   */\n  private getTabbableCandidates(container: HTMLElement) {\n    const nodes: HTMLElement[] = [];\n    const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n      acceptNode: (node: HTMLElement) =>\n        this.interactivityChecker.isFocusable(node)\n          ? NodeFilter.FILTER_ACCEPT\n          : NodeFilter.FILTER_SKIP,\n    });\n    while (walker.nextNode()) {\n      nodes.push(walker.currentNode as HTMLElement);\n    }\n    return nodes;\n  }\n\n  /**\n   * Returns the first visible element in a list..\n   */\n  private findVisible(elements: HTMLElement[]) {\n    return elements.find(element => this.interactivityChecker.isVisible(element)) ?? null;\n  }\n\n  private focus(element?: HTMLElement | null) {\n    element?.focus({ preventScroll: true });\n  }\n\n  private focusFirst(): void {\n    const previouslyFocusedElement = document.activeElement;\n\n    for (const candidate of this.getTabbableCandidates(this.elementRef.nativeElement)) {\n      this.focus(candidate);\n\n      if (document.activeElement !== previouslyFocusedElement) {\n        return;\n      }\n    }\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpFocusTrap } from './focus-trap/focus-trap.directive';\nexport { NgpFocusTrapToken } from './focus-trap/focus-trap.token';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}