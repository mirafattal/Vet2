{"version":3,"file":"ng-primitives-tooltip.mjs","sources":["../../../../packages/ng-primitives/tooltip/src/config/tooltip.config.ts","../../../../packages/ng-primitives/tooltip/src/tooltip-trigger/tooltip-trigger.token.ts","../../../../packages/ng-primitives/tooltip/src/tooltip-trigger/tooltip-trigger.directive.ts","../../../../packages/ng-primitives/tooltip/src/tooltip/tooltip.token.ts","../../../../packages/ng-primitives/tooltip/src/tooltip/tooltip.directive.ts","../../../../packages/ng-primitives/tooltip/src/index.ts","../../../../packages/ng-primitives/tooltip/src/ng-primitives-tooltip.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, Provider, inject } from '@angular/core';\nimport { type Placement } from '@floating-ui/dom';\n\nexport interface NgpTooltipConfig {\n  /**\n   * Define the offset of the tooltip relative to the trigger.\n   * @default 4\n   */\n  offset: number;\n\n  /**\n   * Define the placement of the tooltip relative to the trigger.\n   * @default 'top'\n   */\n  placement: Placement;\n\n  /**\n   * Define the delay before the tooltip is shown.\n   * @default 0\n   */\n  showDelay: number;\n\n  /**\n   * Define the delay before the tooltip is hidden.\n   * @default 0\n   */\n  hideDelay: number;\n\n  /**\n   * Define whether the tooltip should flip when there is not enough space for the tooltip.\n   * @default true\n   */\n  flip: boolean;\n\n  /**\n   * Define the container in to which the tooltip should be attached.\n   * @default document.body\n   */\n  container: HTMLElement | null;\n}\n\nexport const defaultTooltipConfig: NgpTooltipConfig = {\n  offset: 4,\n  placement: 'top',\n  showDelay: 0,\n  hideDelay: 0,\n  flip: true,\n  container: null,\n};\n\nexport const NgpTooltipConfigToken = new InjectionToken<NgpTooltipConfig>('NgpTooltipConfigToken');\n\n/**\n * Provide the default Tooltip configuration\n * @param config The Tooltip configuration\n * @returns The provider\n */\nexport function provideTooltipConfig(config: Partial<NgpTooltipConfig>): Provider[] {\n  return [\n    {\n      provide: NgpTooltipConfigToken,\n      useValue: { ...defaultTooltipConfig, ...config },\n    },\n  ];\n}\n\n/**\n * Inject the Tooltip configuration\n * @returns The global Tooltip configuration\n */\nexport function injectTooltipConfig(): NgpTooltipConfig {\n  return inject(NgpTooltipConfigToken, { optional: true }) ?? defaultTooltipConfig;\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpTooltipTrigger } from './tooltip-trigger.directive';\n\nexport const NgpTooltipTriggerToken = new InjectionToken<NgpTooltipTrigger>(\n  'NgpTooltipTriggerToken',\n);\n\n/**\n * Inject the TooltipTrigger directive instance\n */\nexport function injectTooltipTrigger(): NgpTooltipTrigger {\n  return inject(NgpTooltipTriggerToken);\n}\n\n/**\n * Provides the TooltipTrigger directive instance\n * @param trigger\n */\nexport function provideTooltipTrigger(trigger: NgpTooltipTrigger) {\n  return { provide: NgpTooltipTriggerToken, useValue: trigger };\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport { DomPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Injector,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n  booleanAttribute,\n  computed,\n  inject,\n  input,\n  model,\n  numberAttribute,\n  signal,\n} from '@angular/core';\nimport {\n  Middleware,\n  Placement,\n  autoUpdate,\n  computePosition,\n  flip,\n  offset,\n  shift,\n} from '@floating-ui/dom';\nimport { injectDisposables, onBooleanChange } from 'ng-primitives/utils';\nimport { injectTooltipConfig } from '../config/tooltip.config';\nimport { NgpTooltipTriggerToken, provideTooltipTrigger } from './tooltip-trigger.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpTooltipTrigger]',\n  exportAs: 'ngpTooltipTrigger',\n  providers: [{ provide: NgpTooltipTriggerToken, useExisting: NgpTooltipTrigger }],\n  host: {\n    '[attr.data-state]': 'state()',\n    '[attr.data-disabled]': 'disabled() ? \"\" : null',\n    '(mouseenter)': 'open.set(true)',\n    '(mouseleave)': 'open.set(false)',\n    '(focus)': 'open.set(true)',\n    '(blur)': 'open.set(false)',\n  },\n})\nexport class NgpTooltipTrigger implements OnDestroy {\n  /**\n   * Access the trigger element\n   */\n  private readonly trigger = inject(ElementRef<HTMLElement>);\n\n  /**\n   * Access the view container ref.\n   */\n  private readonly viewContainerRef = inject(ViewContainerRef);\n\n  /**\n   * Access the document.\n   */\n  private readonly document = inject(DOCUMENT);\n\n  /**\n   * Access the injector.\n   */\n  private readonly injector = inject(Injector);\n\n  /**\n   * Access the global tooltip configuration.\n   */\n  private readonly config = injectTooltipConfig();\n\n  /**\n   * Access the disposable utilities\n   */\n  private readonly disposables = injectDisposables();\n\n  /**\n   * Access the tooltip template ref.\n   */\n  readonly tooltip = input.required<TemplateRef<void>>({\n    alias: 'ngpTooltipTrigger',\n  });\n\n  /**\n   * The open state of the tooltip.\n   * @default false\n   */\n  readonly open = model<boolean>(false, {\n    alias: 'ngpTooltipTriggerOpen',\n  });\n\n  /**\n   * Define if the trigger should be disabled.\n   * @default false\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpTooltipTriggerDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Define the placement of the tooltip relative to the trigger.\n   * @default 'top'\n   */\n  readonly placement = input<Placement>(this.config.placement, {\n    alias: 'ngpTooltipTriggerPlacement',\n  });\n\n  /**\n   * Define the offset of the tooltip relative to the trigger.\n   * @default 0\n   */\n  readonly offset = input<number, NumberInput>(this.config.offset, {\n    alias: 'ngpTooltipTriggerOffset',\n    transform: numberAttribute,\n  });\n\n  /**\n   * Define the delay before the tooltip is displayed.\n   * @default 0\n   */\n  readonly showDelay = input<number, NumberInput>(this.config.showDelay, {\n    alias: 'ngpTooltipTriggerShowDelay',\n    transform: numberAttribute,\n  });\n\n  /**\n   * Define the delay before the tooltip is hidden.\n   * @default 0\n   */\n  readonly hideDelay = input<number, NumberInput>(this.config.hideDelay, {\n    alias: 'ngpTooltipTriggerHideDelay',\n    transform: numberAttribute,\n  });\n\n  /**\n   * Define whether the tooltip should flip when there is not enough space for the tooltip.\n   * @default true\n   */\n  readonly flip = input<boolean, BooleanInput>(this.config.flip, {\n    alias: 'ngpTooltipTriggerFlip',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Define the container in which the tooltip should be attached.\n   * @default document.body\n   */\n  readonly container = input<HTMLElement | null>(this.config.container, {\n    alias: 'ngpTooltipTriggerContainer',\n  });\n\n  /**\n   * Store the tooltip view ref.\n   */\n  private viewRef: EmbeddedViewRef<void> | null = null;\n\n  /**\n   * Derive the tooltip middleware from the provided configuration.\n   */\n  private readonly middleware = computed(() => {\n    const middleware: Middleware[] = [offset(this.offset()), shift()];\n\n    if (this.flip()) {\n      middleware.push(flip());\n    }\n\n    return middleware;\n  });\n\n  /**\n   * Store the computed position of the tooltip.\n   * @internal\n   */\n  readonly position = signal<{ x: number; y: number }>({\n    x: 0,\n    y: 0,\n  });\n\n  /**\n   * Store the state of the tooltip.\n   * @internal\n   */\n  readonly state = signal<TooltipState>('closed');\n\n  /**\n   * The dispose function to stop computing the position of the tooltip.\n   */\n  private dispose?: () => void;\n\n  constructor() {\n    // any time the open state changes then show or hide the tooltip\n    onBooleanChange(this.open, this.show.bind(this), this.hide.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.destroyTooltip();\n  }\n\n  private show(): void {\n    // if the trigger is disabled or the tooltip is already open then do not show the tooltip\n    if (this.disabled() || this.state() === 'open' || this.state() === 'opening') {\n      return;\n    }\n\n    this.state.set('opening');\n    this.disposables.setTimeout(() => this.createTooltip(), this.showDelay());\n  }\n\n  private hide(): void {\n    // if the trigger is disabled or the tooltip is already closed then do not hide the tooltip\n    if (this.disabled() || this.state() === 'closed' || this.state() === 'closing') {\n      return;\n    }\n\n    this.state.set('closing');\n    this.disposables.setTimeout(() => this.destroyTooltip(), this.hideDelay());\n  }\n\n  private createTooltip(): void {\n    const portal = new TemplatePortal(\n      this.tooltip(),\n      this.viewContainerRef,\n      undefined,\n      this.injector,\n    );\n\n    const domOutlet = new DomPortalOutlet(\n      this.container() ?? this.document.body,\n      undefined,\n      undefined,\n      Injector.create({\n        parent: this.injector,\n        providers: [provideTooltipTrigger(this)],\n      }),\n    );\n\n    this.viewRef = domOutlet.attach(portal);\n    this.viewRef.detectChanges();\n\n    const outletElement = this.viewRef.rootNodes[0];\n\n    this.dispose = autoUpdate(this.trigger.nativeElement, outletElement, async () => {\n      const position = await computePosition(this.trigger.nativeElement, outletElement, {\n        placement: this.placement(),\n        middleware: this.middleware(),\n      });\n\n      this.position.set({ x: position.x, y: position.y });\n    });\n\n    this.state.set('open');\n  }\n\n  private destroyTooltip(): void {\n    this.viewRef?.destroy();\n    this.viewRef = null;\n    this.dispose?.();\n    this.state.set('closed');\n  }\n}\n\nexport type TooltipState = 'closed' | 'opening' | 'open' | 'closing';\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpTooltip } from './tooltip.directive';\n\nexport const NgpTooltipToken = new InjectionToken<NgpTooltip>('NgpTooltipToken');\n\n/**\n * Inject the Tooltip directive instance\n */\nexport function injectTooltip(): NgpTooltip {\n  return inject(NgpTooltipToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  OnInit,\n  PLATFORM_ID,\n  computed,\n  inject,\n  isDevMode,\n} from '@angular/core';\nimport { injectTooltipTrigger } from '../tooltip-trigger/tooltip-trigger.token';\nimport { NgpTooltipToken } from './tooltip.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpTooltip]',\n  exportAs: 'ngpTooltip',\n  providers: [{ provide: NgpTooltipToken, useExisting: NgpTooltip }],\n  host: {\n    role: 'tooltip',\n    '[style.left.px]': 'x()',\n    '[style.top.px]': 'y()',\n  },\n})\nexport class NgpTooltip implements OnInit {\n  /**\n   * Access the tooltip element.\n   */\n  private readonly tooltip = inject(ElementRef<HTMLElement>);\n\n  /**\n   * Access the platform.\n   */\n  private readonly platform = inject(PLATFORM_ID);\n\n  /**\n   * Access the trigger instance.\n   */\n  private readonly trigger = injectTooltipTrigger();\n\n  /**\n   * Compute the x position of the tooltip.\n   */\n  protected readonly x = computed(() => this.trigger.position().x);\n\n  /**\n   * Compute the y position of the tooltip.\n   */\n  protected readonly y = computed(() => this.trigger.position().y);\n\n  ngOnInit(): void {\n    // if the element does not have a fixed position then throw a warning in dev mode\n    if (isDevMode() && isPlatformBrowser(this.platform)) {\n      const { position } = getComputedStyle(this.tooltip.nativeElement);\n\n      if (position !== 'absolute') {\n        console.warn(\n          `The tooltip element must have an absolute position. The current position is ${position}.`,\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpTooltipConfig, provideTooltipConfig } from './config/tooltip.config';\nexport { NgpTooltipTrigger } from './tooltip-trigger/tooltip-trigger.directive';\nexport { NgpTooltipTriggerToken } from './tooltip-trigger/tooltip-trigger.token';\nexport { NgpTooltip } from './tooltip/tooltip.directive';\nexport { NgpTooltipToken } from './tooltip/tooltip.token';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;;AAMG;AA0CI,MAAM,oBAAoB,GAAqB;AACpD,IAAA,MAAM,EAAE,CAAC;AACT,IAAA,SAAS,EAAE,KAAK;AAChB,IAAA,SAAS,EAAE,CAAC;AACZ,IAAA,SAAS,EAAE,CAAC;AACZ,IAAA,IAAI,EAAE,IAAI;AACV,IAAA,SAAS,EAAE,IAAI;CAChB,CAAC;AAEK,MAAM,qBAAqB,GAAG,IAAI,cAAc,CAAmB,uBAAuB,CAAC,CAAC;AAEnG;;;;AAIG;AACG,SAAU,oBAAoB,CAAC,MAAiC,EAAA;IACpE,OAAO;AACL,QAAA;AACE,YAAA,OAAO,EAAE,qBAAqB;AAC9B,YAAA,QAAQ,EAAE,EAAE,GAAG,oBAAoB,EAAE,GAAG,MAAM,EAAE;AACjD,SAAA;KACF,CAAC;AACJ,CAAC;AAED;;;AAGG;SACa,mBAAmB,GAAA;AACjC,IAAA,OAAO,MAAM,CAAC,qBAAqB,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,IAAI,oBAAoB,CAAC;AACnF;;AC/EA;;;;;;AAMG;MAIU,sBAAsB,GAAG,IAAI,cAAc,CACtD,wBAAwB,EACxB;AAEF;;AAEG;SACa,oBAAoB,GAAA;AAClC,IAAA,OAAO,MAAM,CAAC,sBAAsB,CAAC,CAAC;AACxC,CAAC;AAED;;;AAGG;AACG,SAAU,qBAAqB,CAAC,OAA0B,EAAA;IAC9D,OAAO,EAAE,OAAO,EAAE,sBAAsB,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC;AAChE;;MC0Ba,iBAAiB,CAAA;AAiJ5B,IAAA,WAAA,GAAA;AAhJA;;AAEG;AACc,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,EAAC,UAAuB,EAAC,CAAC;AAE3D;;AAEG;AACc,QAAA,IAAA,CAAA,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAE7D;;AAEG;AACc,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAE7C;;AAEG;AACc,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAE7C;;AAEG;QACc,IAAM,CAAA,MAAA,GAAG,mBAAmB,EAAE,CAAC;AAEhD;;AAEG;QACc,IAAW,CAAA,WAAA,GAAG,iBAAiB,EAAE,CAAC;AAEnD;;AAEG;AACM,QAAA,IAAA,CAAA,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAoB;AACnD,YAAA,KAAK,EAAE,mBAAmB;AAC3B,SAAA,CAAC,CAAC;AAEH;;;AAGG;AACM,QAAA,IAAA,CAAA,IAAI,GAAG,KAAK,CAAU,KAAK,EAAE;AACpC,YAAA,KAAK,EAAE,uBAAuB;AAC/B,SAAA,CAAC,CAAC;AAEH;;;AAGG;AACM,QAAA,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAwB,KAAK,EAAE;AACtD,YAAA,KAAK,EAAE,2BAA2B;AAClC,YAAA,SAAS,EAAE,gBAAgB;AAC5B,SAAA,CAAC,CAAC;AAEH;;;AAGG;QACM,IAAS,CAAA,SAAA,GAAG,KAAK,CAAY,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AAC3D,YAAA,KAAK,EAAE,4BAA4B;AACpC,SAAA,CAAC,CAAC;AAEH;;;AAGG;QACM,IAAM,CAAA,MAAA,GAAG,KAAK,CAAsB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AAC/D,YAAA,KAAK,EAAE,yBAAyB;AAChC,YAAA,SAAS,EAAE,eAAe;AAC3B,SAAA,CAAC,CAAC;AAEH;;;AAGG;QACM,IAAS,CAAA,SAAA,GAAG,KAAK,CAAsB,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AACrE,YAAA,KAAK,EAAE,4BAA4B;AACnC,YAAA,SAAS,EAAE,eAAe;AAC3B,SAAA,CAAC,CAAC;AAEH;;;AAGG;QACM,IAAS,CAAA,SAAA,GAAG,KAAK,CAAsB,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AACrE,YAAA,KAAK,EAAE,4BAA4B;AACnC,YAAA,SAAS,EAAE,eAAe;AAC3B,SAAA,CAAC,CAAC;AAEH;;;AAGG;QACM,IAAI,CAAA,IAAA,GAAG,KAAK,CAAwB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;AAC7D,YAAA,KAAK,EAAE,uBAAuB;AAC9B,YAAA,SAAS,EAAE,gBAAgB;AAC5B,SAAA,CAAC,CAAC;AAEH;;;AAGG;QACM,IAAS,CAAA,SAAA,GAAG,KAAK,CAAqB,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AACpE,YAAA,KAAK,EAAE,4BAA4B;AACpC,SAAA,CAAC,CAAC;AAEH;;AAEG;QACK,IAAO,CAAA,OAAA,GAAiC,IAAI,CAAC;AAErD;;AAEG;AACc,QAAA,IAAA,CAAA,UAAU,GAAG,QAAQ,CAAC,MAAK;AAC1C,YAAA,MAAM,UAAU,GAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAElE,YAAA,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE;AACf,gBAAA,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;aACzB;AAED,YAAA,OAAO,UAAU,CAAC;AACpB,SAAC,CAAC,CAAC;AAEH;;;AAGG;QACM,IAAQ,CAAA,QAAA,GAAG,MAAM,CAA2B;AACnD,YAAA,CAAC,EAAE,CAAC;AACJ,YAAA,CAAC,EAAE,CAAC;AACL,SAAA,CAAC,CAAC;AAEH;;;AAGG;AACM,QAAA,IAAA,CAAA,KAAK,GAAG,MAAM,CAAe,QAAQ,CAAC,CAAC;;QAS9C,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACxE;IAED,WAAW,GAAA;QACT,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAEO,IAAI,GAAA;;AAEV,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,SAAS,EAAE;YAC5E,OAAO;SACR;AAED,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KAC3E;IAEO,IAAI,GAAA;;AAEV,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,SAAS,EAAE;YAC9E,OAAO;SACR;AAED,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC1B,QAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KAC5E;IAEO,aAAa,GAAA;QACnB,MAAM,MAAM,GAAG,IAAI,cAAc,CAC/B,IAAI,CAAC,OAAO,EAAE,EACd,IAAI,CAAC,gBAAgB,EACrB,SAAS,EACT,IAAI,CAAC,QAAQ,CACd,CAAC;QAEF,MAAM,SAAS,GAAG,IAAI,eAAe,CACnC,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EACtC,SAAS,EACT,SAAS,EACT,QAAQ,CAAC,MAAM,CAAC;YACd,MAAM,EAAE,IAAI,CAAC,QAAQ;AACrB,YAAA,SAAS,EAAE,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;AACzC,SAAA,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACxC,QAAA,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAE7B,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAEhD,QAAA,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,aAAa,EAAE,YAAW;AAC9E,YAAA,MAAM,QAAQ,GAAG,MAAM,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,aAAa,EAAE;AAChF,gBAAA,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE;AAC3B,gBAAA,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE;AAC9B,aAAA,CAAC,CAAC;AAEH,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;AACtD,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACxB;IAEO,cAAc,GAAA;AACpB,QAAA,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,QAAA,IAAI,CAAC,OAAO,IAAI,CAAC;AACjB,QAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;KAC1B;+GAtNU,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;mGAAjB,iBAAiB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,UAAA,EAAA,uBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,QAAA,EAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,2BAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,UAAA,EAAA,4BAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,yBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,UAAA,EAAA,4BAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,UAAA,EAAA,4BAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,UAAA,EAAA,uBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,UAAA,EAAA,4BAAA,EAAA,QAAA,EAAA,IAAA,EAAA,UAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,6BAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,oBAAA,EAAA,0BAAA,EAAA,EAAA,EAAA,SAAA,EAVjB,CAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,WAAW,EAAE,iBAAiB,EAAE,CAAC,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAUrE,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAd7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,QAAQ,EAAE,mBAAmB;oBAC7B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,WAAW,EAAmB,iBAAA,EAAE,CAAC;AAChF,oBAAA,IAAI,EAAE;AACJ,wBAAA,mBAAmB,EAAE,SAAS;AAC9B,wBAAA,sBAAsB,EAAE,wBAAwB;AAChD,wBAAA,cAAc,EAAE,gBAAgB;AAChC,wBAAA,cAAc,EAAE,iBAAiB;AACjC,wBAAA,SAAS,EAAE,gBAAgB;AAC3B,wBAAA,QAAQ,EAAE,iBAAiB;AAC5B,qBAAA;AACF,iBAAA,CAAA;;;ACpDD;;;;;;AAMG;MAIU,eAAe,GAAG,IAAI,cAAc,CAAa,iBAAiB,EAAE;AAEjF;;AAEG;SACa,aAAa,GAAA;AAC3B,IAAA,OAAO,MAAM,CAAC,eAAe,CAAC,CAAC;AACjC;;ACjBA;;;;;;AAMG;MAyBU,UAAU,CAAA;AAXvB,IAAA,WAAA,GAAA;AAYE;;AAEG;AACc,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,EAAC,UAAuB,EAAC,CAAC;AAE3D;;AAEG;AACc,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAEhD;;AAEG;QACc,IAAO,CAAA,OAAA,GAAG,oBAAoB,EAAE,CAAC;AAElD;;AAEG;AACgB,QAAA,IAAA,CAAA,CAAC,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AAEjE;;AAEG;AACgB,QAAA,IAAA,CAAA,CAAC,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;AAclE,KAAA;IAZC,QAAQ,GAAA;;QAEN,IAAI,SAAS,EAAE,IAAI,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AACnD,YAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAElE,YAAA,IAAI,QAAQ,KAAK,UAAU,EAAE;AAC3B,gBAAA,OAAO,CAAC,IAAI,CACV,+EAA+E,QAAQ,CAAA,CAAA,CAAG,CAC3F,CAAC;aACH;SACF;KACF;+GArCU,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;mGAAV,UAAU,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,cAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,EAAA,eAAA,EAAA,KAAA,EAAA,cAAA,EAAA,KAAA,EAAA,EAAA,EAAA,SAAA,EAPV,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;4FAOvD,UAAU,EAAA,UAAA,EAAA,CAAA;kBAXtB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,QAAQ,EAAE,YAAY;oBACtB,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAY,UAAA,EAAE,CAAC;AAClE,oBAAA,IAAI,EAAE;AACJ,wBAAA,IAAI,EAAE,SAAS;AACf,wBAAA,iBAAiB,EAAE,KAAK;AACxB,wBAAA,gBAAgB,EAAE,KAAK;AACxB,qBAAA;AACF,iBAAA,CAAA;;;AC9BD;;;;;;AAMG;;ACNH;;AAEG;;;;"}