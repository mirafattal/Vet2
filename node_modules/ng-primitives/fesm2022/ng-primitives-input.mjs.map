{"version":3,"file":"ng-primitives-input.mjs","sources":["../../../../packages/ng-primitives/input/src/input/input.token.ts","../../../../packages/ng-primitives/input/src/input/input.directive.ts","../../../../packages/ng-primitives/input/src/index.ts","../../../../packages/ng-primitives/input/src/ng-primitives-input.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpInput } from './input.directive';\n\nexport const NgpInputToken = new InjectionToken<NgpInput>('NgpInputToken');\n\n/**\n * Inject the Input directive instance\n */\nexport function injectInput(): NgpInput {\n  return inject(NgpInputToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport {\n  booleanAttribute,\n  Directive,\n  ElementRef,\n  HostListener,\n  inject,\n  input,\n  signal,\n} from '@angular/core';\nimport { NgpAutofill } from 'ng-primitives/autofill';\nimport { NgpFormControl } from 'ng-primitives/form-field';\nimport { NgpFocus, NgpHover, NgpPress } from 'ng-primitives/interactions';\nimport { NgpCanDisable, NgpDisabledToken } from 'ng-primitives/internal';\nimport { NgpInputToken } from './input.token';\n\n@Directive({\n  standalone: true,\n  selector: 'input[ngpInput]',\n  exportAs: 'ngpInput',\n  providers: [\n    { provide: NgpInputToken, useExisting: NgpInput },\n    { provide: NgpDisabledToken, useExisting: NgpInput },\n  ],\n  hostDirectives: [NgpFormControl, NgpHover, NgpFocus, NgpPress, NgpAutofill],\n})\nexport class NgpInput implements NgpCanDisable {\n  /**\n   * Access the underlying input element.\n   * @internal\n   */\n  private readonly elementRef = inject<ElementRef<HTMLInputElement>>(ElementRef);\n\n  /**\n   * Whether the element is disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Sync the input value.\n   * @internal\n   */\n  readonly value = signal<string>(this.elementRef.nativeElement.value);\n\n  /**\n   * Set the element input value and dispatch input event.\n   * @param value The value to set.\n   * @description The HTML input event triggers when a user interacts with an input field and changes its value. However, if the value is changed programmatically, the input event doesn't fire automatically, so we manually dispatch the InputEvent.\n   * @internal\n   */\n  setInputValue(value: string) {\n    this.elementRef.nativeElement.value = value;\n    this.elementRef.nativeElement.dispatchEvent(new InputEvent('input'));\n  }\n\n  @HostListener('input')\n  protected valueDidChange(): void {\n    this.value.set(this.elementRef.nativeElement.value);\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpInput } from './input/input.directive';\nexport { NgpInputToken } from './input/input.token';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}