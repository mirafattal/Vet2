import * as i0 from '@angular/core';
import { InjectionToken, inject, signal, output, Directive, HostListener } from '@angular/core';
import { injectStyleInjector } from 'ng-primitives/internal';

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
const NgpAutofillToken = new InjectionToken('NgpAutofillToken');
/**
 * Inject the Autofill directive instance
 */
function injectAutofill() {
    return inject(NgpAutofillToken);
}

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
class NgpAutofill {
    constructor() {
        /**
         * Access the style injector.
         */
        this.styleInjector = injectStyleInjector();
        /**
         * Store the autofill state.
         */
        this.autofilled = signal(false);
        /**
         * Emit when the autofill state changes.
         */
        this.autofillChange = output({
            alias: 'ngpAutofill',
        });
        // This technique is based on that used by the Angular CDK
        // https://github.com/angular/components/blob/main/src/cdk/text-field/_index.scss
        this.styleInjector.add('ngp-autofill', `
        @keyframes ngp-autofill-start { }
        @keyframes ngp-autofill-end {}

        [data-autofill]:-webkit-autofill {
          animation: ngp-autofill-start 0s 1ms;
        }

        [data-autofill]:not(:-webkit-autofill) {
          animation: ngp-autofill-end 0s 1ms;
        }
      `);
    }
    onAnimationStart(event) {
        if (event.animationName === 'ngp-autofill-start') {
            this.autofilled.set(true);
            this.autofillChange.emit(true);
        }
        if (event.animationName === 'ngp-autofill-end') {
            this.autofilled.set(false);
            this.autofillChange.emit(false);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpAutofill, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.13", type: NgpAutofill, isStandalone: true, selector: "[ngpAutofill]", outputs: { autofillChange: "ngpAutofill" }, host: { listeners: { "animationstart": "onAnimationStart($event)" }, properties: { "attr.data-autofill": "autofilled() ? \"\" : null" } }, providers: [{ provide: NgpAutofillToken, useExisting: NgpAutofill }], exportAs: ["ngpAutofill"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpAutofill, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpAutofill]',
                    exportAs: 'ngpAutofill',
                    providers: [{ provide: NgpAutofillToken, useExisting: NgpAutofill }],
                    host: {
                        '[attr.data-autofill]': 'autofilled() ? "" : null',
                    },
                }]
        }], ctorParameters: () => [], propDecorators: { onAnimationStart: [{
                type: HostListener,
                args: ['animationstart', ['$event']]
            }] } });

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgpAutofill, NgpAutofillToken };
//# sourceMappingURL=ng-primitives-autofill.mjs.map
