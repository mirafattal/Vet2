{"version":3,"file":"ng-primitives-file-upload.mjs","sources":["../../../../packages/ng-primitives/file-upload/src/file-upload/file-upload.token.ts","../../../../packages/ng-primitives/file-upload/src/file-upload/file-upload.directive.ts","../../../../packages/ng-primitives/file-upload/src/index.ts","../../../../packages/ng-primitives/file-upload/src/ng-primitives-file-upload.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpFileUpload } from './file-upload.directive';\n\nexport const NgpFileUploadToken = new InjectionToken<NgpFileUpload>('NgpFileUploadToken');\n\n/**\n * Inject the FileUpload directive instance\n */\nexport function injectFileUpload(): NgpFileUpload {\n  return inject(NgpFileUploadToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput, coerceStringArray } from '@angular/cdk/coercion';\nimport {\n  Directive,\n  ElementRef,\n  HostListener,\n  booleanAttribute,\n  inject,\n  input,\n  output,\n  signal,\n} from '@angular/core';\nimport { NgpFocusVisible, NgpHover, NgpPress } from 'ng-primitives/interactions';\nimport { NgpFileUploadToken } from './file-upload.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpFileUpload]',\n  exportAs: 'ngpFileUpload',\n  providers: [{ provide: NgpFileUploadToken, useExisting: NgpFileUpload }],\n  host: {\n    '[attr.data-disabled]': 'disabled() ? \"\" : null',\n    '[attr.data-dragover]': 'isDragOver() ? \"\" : null',\n  },\n  hostDirectives: [NgpHover, NgpFocusVisible, NgpPress],\n})\nexport class NgpFileUpload {\n  /**\n   * Access the host element.\n   */\n  private readonly elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n\n  /**\n   * The accepted file types.\n   */\n  readonly fileTypes = input<string[] | undefined, string>(undefined, {\n    alias: 'ngpFileUploadFileTypes',\n    transform: coerceStringArray,\n  });\n\n  /**\n   * Whether to allow multiple files to be selected.\n   */\n  readonly multiple = input<boolean, BooleanInput>(false, {\n    alias: 'ngpFileUploadMultiple',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Whether to allow the user to select directories.\n   */\n  readonly directory = input<boolean, BooleanInput>(false, {\n    alias: 'ngpFileUploadDirectory',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Whether drag-and-drop is enabled.\n   */\n  readonly dragAndDrop = input<boolean, BooleanInput>(true, {\n    alias: 'ngpFileUploadDragDrop',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Whether the file upload is disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpFileUploadDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Emits when the user selects files.\n   */\n  readonly selected = output<FileList | null>({\n    alias: 'ngpFileUploadSelected',\n  });\n\n  /**\n   * Emits when the user drags a file over the file upload.\n   */\n  readonly dragOver = output<boolean>({\n    alias: 'ngpFileUploadDragOver',\n  });\n\n  /**\n   * Whether the user is currently dragging a file over the file upload.\n   */\n  private readonly isDragOver = signal<boolean>(false);\n\n  /**\n   * Store the file input element.\n   */\n  private input: HTMLInputElement = document.createElement('input');\n\n  constructor() {\n    this.input.type = 'file';\n    this.input.addEventListener('change', () => this.selected.emit(this.input.files));\n  }\n\n  @HostListener('click')\n  protected showFileDialog(): void {\n    if (this.disabled()) {\n      return;\n    }\n\n    const fileTypes = this.fileTypes()?.join(',');\n\n    if (fileTypes) {\n      this.input.accept = fileTypes;\n    }\n\n    this.input.multiple = this.multiple();\n    this.input.webkitdirectory = this.directory();\n    this.input.click();\n  }\n\n  @HostListener('dragenter', ['$event'])\n  protected onDragEnter(event: DragEvent): void {\n    if (this.disabled() || !this.dragAndDrop()) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    this.isDragOver.set(true);\n    this.dragOver.emit(true);\n  }\n\n  @HostListener('dragover', ['$event'])\n  protected onDragOver(event: DragEvent): void {\n    if (this.disabled() || !this.dragAndDrop()) {\n      return;\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n    this.isDragOver.set(true);\n  }\n\n  @HostListener('dragleave', ['$event'])\n  protected onDragLeave(event: DragEvent): void {\n    if (this.disabled() || !this.dragAndDrop() || !this.isDragOver()) {\n      return;\n    }\n\n    // if the element we are dragging over is a child of the file upload, ignore the event\n    if (this.elementRef.nativeElement.contains(event.relatedTarget as Node)) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    this.isDragOver.set(false);\n    this.dragOver.emit(false);\n  }\n\n  @HostListener('drop', ['$event'])\n  protected onDrop(event: DragEvent): void {\n    if (this.disabled() || !this.dragAndDrop()) {\n      return;\n    }\n\n    event.preventDefault();\n    this.isDragOver.set(false);\n    this.dragOver.emit(false);\n\n    if (event.dataTransfer?.files) {\n      this.selected.emit(event.dataTransfer.files);\n    }\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport { NgpFileUpload } from './file-upload/file-upload.directive';\nexport { NgpFileUploadToken, injectFileUpload } from './file-upload/file-upload.token';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}