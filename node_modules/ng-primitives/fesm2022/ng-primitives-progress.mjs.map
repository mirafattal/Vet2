{"version":3,"file":"ng-primitives-progress.mjs","sources":["../../../../packages/ng-primitives/progress/src/progress/progress.token.ts","../../../../packages/ng-primitives/progress/src/progress-indicator/progress-indicator.directive.ts","../../../../packages/ng-primitives/progress/src/progress/progress.directive.ts","../../../../packages/ng-primitives/progress/src/index.ts","../../../../packages/ng-primitives/progress/src/ng-primitives-progress.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpProgress } from './progress.directive';\n\nexport const NgpProgressToken = new InjectionToken<NgpProgress>('NgpProgressDirective');\n\n/**\n *\n */\nexport function injectProgress(): NgpProgress {\n  return inject(NgpProgressToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Directive } from '@angular/core';\nimport { injectProgress } from '../progress/progress.token';\n\n@Directive({\n  selector: '[ngpProgressIndicator]',\n  standalone: true,\n  host: {\n    '[attr.data-state]': 'progress.state()',\n    '[attr.data-value]': 'progress.value()',\n    '[attr.data-max]': 'progress.max()',\n  },\n})\nexport class NgpProgressIndicator {\n  /**\n   * Access the progress directive.\n   */\n  protected readonly progress = injectProgress();\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { NumberInput } from '@angular/cdk/coercion';\nimport { Directive, computed, input, numberAttribute } from '@angular/core';\nimport { NgpProgressToken } from './progress.token';\n\n@Directive({\n  selector: '[ngpProgress]',\n  standalone: true,\n  providers: [{ provide: NgpProgressToken, useExisting: NgpProgress }],\n  host: {\n    role: 'progressbar',\n    '[attr.aria-valuemax]': 'max()',\n    '[attr.aria-valuemin]': '0',\n    '[attr.aria-valuenow]': 'value()',\n    '[attr.aria-valuetext]': 'label()',\n    '[attr.data-state]': 'state()',\n    '[attr.data-value]': 'value()',\n    '[attr.data-max]': 'max()',\n  },\n})\nexport class NgpProgress {\n  /**\n   * Define the progress value.\n   */\n  readonly value = input<number, NumberInput>(0, {\n    alias: 'ngpProgressValue',\n    transform: numberAttribute,\n  });\n\n  /**\n   * Define the progress max value.\n   * @default 100\n   */\n  readonly max = input<number, NumberInput>(100, {\n    alias: 'ngpProgressMax',\n    transform: numberAttribute,\n  });\n\n  /**\n   * Define a function that returns the progress value label.\n   * @param value The current value\n   * @param max The maximum value\n   * @returns The value label\n   */\n  readonly valueLabel = input<NgpProgressValueLabelFn>(\n    (value, max) => `${Math.round((value / max) * 100)}%`,\n  );\n\n  /**\n   * Get the state of the progress bar.\n   * @returns 'indeterminate' | 'loading' | 'complete'\n   * @internal\n   */\n  protected readonly state = computed(() =>\n    this.value() == null ? 'indeterminate' : this.value() === this.max() ? 'complete' : 'loading',\n  );\n\n  /**\n   * Get the progress value label.\n   */\n  protected readonly label = computed(() => this.valueLabel()(this.value(), this.max()));\n}\n\nexport type NgpProgressValueLabelFn = (value: number, max: number) => string;\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpProgressIndicator } from './progress-indicator/progress-indicator.directive';\nexport { NgpProgress, NgpProgressValueLabelFn } from './progress/progress.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}