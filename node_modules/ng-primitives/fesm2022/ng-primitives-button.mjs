import * as i0 from '@angular/core';
import { InjectionToken, inject, ElementRef, input, booleanAttribute, Directive } from '@angular/core';
import { setupButton, NgpDisabledToken } from 'ng-primitives/internal';

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
const NgpButtonToken = new InjectionToken('NgpButtonToken');
/**
 * Inject the Button directive instance
 */
function injectButton() {
    return inject(NgpButtonToken);
}

class NgpButton {
    constructor() {
        /**
         * Get the native element of the button.
         */
        this.elementRef = inject(ElementRef);
        /**
         * Whether the button is disabled.
         */
        this.disabled = input(false, {
            transform: booleanAttribute,
        });
        /**
         * Detect if this is an HTML button element.
         */
        this.isButton = this.elementRef.nativeElement.tagName.toLowerCase() === 'button';
        // setup the hover, press, and focus-visible listeners
        setupButton({ disabled: this.disabled });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpButton, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.13", type: NgpButton, isStandalone: true, selector: "[ngpButton]", inputs: { disabled: { classPropertyName: "disabled", publicName: "disabled", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "attr.data-disabled": "disabled() ? \"\" : null", "attr.disabled": "isButton && disabled() ? true : null" } }, providers: [
            { provide: NgpButtonToken, useExisting: NgpButton },
            { provide: NgpDisabledToken, useExisting: NgpButton },
        ], exportAs: ["ngpButton"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpButton, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpButton]',
                    exportAs: 'ngpButton',
                    providers: [
                        { provide: NgpButtonToken, useExisting: NgpButton },
                        { provide: NgpDisabledToken, useExisting: NgpButton },
                    ],
                    host: {
                        '[attr.data-disabled]': 'disabled() ? "" : null',
                        '[attr.disabled]': 'isButton && disabled() ? true : null',
                    },
                }]
        }], ctorParameters: () => [] });

/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgpButton, NgpButtonToken };
//# sourceMappingURL=ng-primitives-button.mjs.map
