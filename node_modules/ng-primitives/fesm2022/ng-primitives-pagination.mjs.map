{"version":3,"file":"ng-primitives-pagination.mjs","sources":["../../../../packages/ng-primitives/pagination/src/pagination/pagination.token.ts","../../../../packages/ng-primitives/pagination/src/pagination/pagination.directive.ts","../../../../packages/ng-primitives/pagination/src/pagination-button/pagination-button.token.ts","../../../../packages/ng-primitives/pagination/src/pagination-button/pagination-button.directive.ts","../../../../packages/ng-primitives/pagination/src/pagination-previous/pagination-previous.token.ts","../../../../packages/ng-primitives/pagination/src/pagination-previous/pagination-previous.directive.ts","../../../../packages/ng-primitives/pagination/src/pagination-next/pagination-next.token.ts","../../../../packages/ng-primitives/pagination/src/pagination-next/pagination-next.directive.ts","../../../../packages/ng-primitives/pagination/src/pagination-first/pagination-first.token.ts","../../../../packages/ng-primitives/pagination/src/pagination-first/pagination-first.directive.ts","../../../../packages/ng-primitives/pagination/src/pagination-last/pagination-last.token.ts","../../../../packages/ng-primitives/pagination/src/pagination-last/pagination-last.directive.ts","../../../../packages/ng-primitives/pagination/src/index.ts","../../../../packages/ng-primitives/pagination/src/ng-primitives-pagination.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpPagination } from './pagination.directive';\n\nexport const NgpPaginationToken = new InjectionToken<NgpPagination>('NgpPaginationToken');\n\n/**\n * Inject the Pagination directive instance\n */\nexport function injectPagination(): NgpPagination {\n  return inject(NgpPaginationToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport {\n  booleanAttribute,\n  computed,\n  Directive,\n  input,\n  model,\n  numberAttribute,\n} from '@angular/core';\nimport { NgpPaginationToken } from './pagination.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpPagination]',\n  exportAs: 'ngpPagination',\n  providers: [{ provide: NgpPaginationToken, useExisting: NgpPagination }],\n  host: {\n    role: 'navigation',\n    '[attr.data-page]': 'page()',\n    '[attr.data-page-count]': 'pageCount()',\n    '[attr.data-first-page]': 'firstPage() ? \"\" : null',\n    '[attr.data-last-page]': 'lastPage() ? \"\" : null',\n    '[attr.data-disabled]': 'disabled() ? \"\" : null',\n  },\n})\nexport class NgpPagination {\n  /**\n   * The currently selected page.\n   */\n  readonly page = model<number>(1, {\n    alias: 'ngpPaginationPage',\n  });\n\n  /**\n   * The total number of pages.\n   */\n  readonly pageCount = input<number, NumberInput>(0, {\n    alias: 'ngpPaginationPageCount',\n    transform: numberAttribute,\n  });\n\n  /**\n   * Whether the pagination is disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpPaginationDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Determine if we are on the first page.\n   * @internal\n   */\n  readonly firstPage = computed(() => this.page() === 1);\n\n  /**\n   * Determine if we are on the last page.\n   * @internal\n   */\n  readonly lastPage = computed(() => this.page() === this.pageCount());\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpPaginationButton } from './pagination-button.directive';\n\nexport const NgpPaginationButtonToken = new InjectionToken<NgpPaginationButton>(\n  'NgpPaginationButtonToken',\n);\n\n/**\n * Inject the PaginationButton directive instance\n */\nexport function injectPaginationButton(): NgpPaginationButton {\n  return inject(NgpPaginationButtonToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput, NumberInput } from '@angular/cdk/coercion';\nimport {\n  booleanAttribute,\n  computed,\n  Directive,\n  HostListener,\n  input,\n  numberAttribute,\n} from '@angular/core';\nimport { NgpButton } from 'ng-primitives/button';\nimport { NgpCanDisable, NgpDisabledToken } from 'ng-primitives/internal';\nimport { injectPagination } from '../pagination/pagination.token';\nimport { NgpPaginationButtonToken } from './pagination-button.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpPaginationButton]',\n  exportAs: 'ngpPaginationButton',\n  providers: [\n    { provide: NgpPaginationButtonToken, useExisting: NgpPaginationButton },\n    { provide: NgpDisabledToken, useExisting: NgpPaginationButton },\n  ],\n  hostDirectives: [NgpButton],\n  host: {\n    '[tabindex]': 'disabled() ? -1 : 0',\n    '[attr.data-disabled]': 'disabled() || pagination.disabled() ? \"\" : null',\n    '[attr.data-page]': 'page()',\n    '[attr.data-selected]': 'selected() ? \"\" : null',\n    '[attr.aria-current]': 'selected()',\n  },\n})\nexport class NgpPaginationButton implements NgpCanDisable {\n  /**\n   * Access the pagination directive.\n   */\n  protected readonly pagination = injectPagination();\n\n  /**\n   * Define the page this button represents.\n   */\n  readonly page = input.required<number, NumberInput>({\n    alias: 'ngpPaginationButtonPage',\n    transform: numberAttribute,\n  });\n\n  /**\n   * Whether the button is disabled.\n   */\n  readonly buttonDisabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpPaginationButtonDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Whether the button is disabled.\n   */\n  readonly disabled = computed(() => this.buttonDisabled() || this.pagination.disabled());\n\n  /**\n   * Whether this page is the currently selected page.\n   */\n  protected readonly selected = computed(() => this.page() === this.pagination.page());\n\n  /**\n   * Go to the page this button represents.\n   */\n  @HostListener('click')\n  goToPage(): void {\n    if (this.disabled()) {\n      return;\n    }\n\n    this.pagination.page.set(this.page());\n  }\n\n  /**\n   * A click event may not be fired if this is on an anchor tag and the href is empty.\n   * This is a workaround to ensure the click event is fired.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  protected onEnter(event: KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.goToPage();\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpPaginationPrevious } from './pagination-previous.directive';\n\nexport const NgpPaginationPreviousToken = new InjectionToken<NgpPaginationPrevious>(\n  'NgpPaginationPreviousToken',\n);\n\n/**\n * Inject the PaginationPrevious directive instance\n */\nexport function injectPaginationPrevious(): NgpPaginationPrevious {\n  return inject(NgpPaginationPreviousToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { booleanAttribute, computed, Directive, HostListener, input } from '@angular/core';\nimport { NgpButton } from 'ng-primitives/button';\nimport { NgpCanDisable, NgpDisabledToken } from 'ng-primitives/internal';\nimport { injectPagination } from '../pagination/pagination.token';\nimport { NgpPaginationPreviousToken } from './pagination-previous.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpPaginationPrevious]',\n  exportAs: 'ngpPaginationPrevious',\n  providers: [\n    { provide: NgpPaginationPreviousToken, useExisting: NgpPaginationPrevious },\n    { provide: NgpDisabledToken, useExisting: NgpPaginationPrevious },\n  ],\n  hostDirectives: [NgpButton],\n  host: {\n    '[tabindex]': 'disabled() ? -1 : 0',\n    '[attr.data-disabled]': 'disabled() ? \"\" : null',\n    '[attr.data-first-page]': 'pagination.firstPage() ? \"\" : null',\n  },\n})\nexport class NgpPaginationPrevious implements NgpCanDisable {\n  /**\n   * Access the pagination directive.\n   */\n  protected readonly pagination = injectPagination();\n\n  /**\n   * Whether the button is disabled.\n   */\n  readonly buttonDisabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpPaginationPreviousDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Whether the button is disabled.\n   */\n  readonly disabled = computed(\n    () => this.buttonDisabled() || this.pagination.disabled() || this.pagination.firstPage(),\n  );\n\n  /**\n   * Go to the previous page.\n   */\n  @HostListener('click')\n  goToPreviousPage() {\n    if (this.disabled()) {\n      return;\n    }\n\n    this.pagination.page.set(this.pagination.page() - 1);\n  }\n\n  /**\n   * A click event may not be fired if this is on an anchor tag and the href is empty.\n   * This is a workaround to ensure the click event is fired.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  protected onEnter(event: KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.goToPreviousPage();\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpPaginationNext } from './pagination-next.directive';\n\nexport const NgpPaginationNextToken = new InjectionToken<NgpPaginationNext>(\n  'NgpPaginationNextToken',\n);\n\n/**\n * Inject the PaginationNext directive instance\n */\nexport function injectPaginationNext(): NgpPaginationNext {\n  return inject(NgpPaginationNextToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { booleanAttribute, computed, Directive, HostListener, input } from '@angular/core';\nimport { NgpButton } from 'ng-primitives/button';\nimport { NgpCanDisable, NgpDisabledToken } from 'ng-primitives/internal';\nimport { injectPagination } from '../pagination/pagination.token';\nimport { NgpPaginationNextToken } from './pagination-next.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpPaginationNext]',\n  exportAs: 'ngpPaginationNext',\n  providers: [\n    { provide: NgpPaginationNextToken, useExisting: NgpPaginationNext },\n    { provide: NgpDisabledToken, useExisting: NgpPaginationNext },\n  ],\n  hostDirectives: [NgpButton],\n  host: {\n    '[tabindex]': 'disabled() ? -1 : 0',\n    '[attr.data-disabled]': 'disabled() ? \"\" : null',\n    '[attr.data-last-page]': 'pagination.lastPage() ? \"\" : null',\n  },\n})\nexport class NgpPaginationNext implements NgpCanDisable {\n  /**\n   * Access the pagination directive.\n   */\n  protected readonly pagination = injectPagination();\n\n  /**\n   * Whether the button is disabled.\n   */\n  readonly buttonDisabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpPaginationNextDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Whether the button is disabled.\n   */\n  readonly disabled = computed(\n    () => this.buttonDisabled() || this.pagination.disabled() || this.pagination.lastPage(),\n  );\n\n  /**\n   * Go to the next page.\n   */\n  @HostListener('click')\n  goToNextPage(): void {\n    if (this.disabled()) {\n      return;\n    }\n\n    this.pagination.page.set(this.pagination.page() + 1);\n  }\n\n  /**\n   * A click event may not be fired if this is on an anchor tag and the href is empty.\n   * This is a workaround to ensure the click event is fired.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  protected onEnter(event: KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.goToNextPage();\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpPaginationFirst } from './pagination-first.directive';\n\nexport const NgpPaginationFirstToken = new InjectionToken<NgpPaginationFirst>(\n  'NgpPaginationFirstToken',\n);\n\n/**\n * Inject the PaginationFirst directive instance\n */\nexport function injectPaginationFirst(): NgpPaginationFirst {\n  return inject(NgpPaginationFirstToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { booleanAttribute, computed, Directive, HostListener, input } from '@angular/core';\nimport { NgpButton } from 'ng-primitives/button';\nimport { NgpCanDisable, NgpDisabledToken } from 'ng-primitives/internal';\nimport { injectPagination } from '../pagination/pagination.token';\nimport { NgpPaginationFirstToken } from './pagination-first.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpPaginationFirst]',\n  exportAs: 'ngpPaginationFirst',\n  providers: [\n    { provide: NgpPaginationFirstToken, useExisting: NgpPaginationFirst },\n    { provide: NgpDisabledToken, useExisting: NgpPaginationFirst },\n  ],\n  hostDirectives: [NgpButton],\n  host: {\n    '[tabindex]': 'disabled() ? -1 : 0',\n    '[attr.data-disabled]': 'disabled() ? \"\" : null',\n    '[attr.data-first-page]': 'pagination.firstPage() ? \"\" : null',\n  },\n})\nexport class NgpPaginationFirst implements NgpCanDisable {\n  /**\n   * Access the pagination directive.\n   */\n  protected readonly pagination = injectPagination();\n\n  /**\n   * Whether the button is disabled.\n   */\n  readonly buttonDisabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpPaginationFirstDisabled',\n    transform: booleanAttribute,\n  });\n\n  readonly disabled = computed(\n    () => this.buttonDisabled() || this.pagination.disabled() || this.pagination.firstPage(),\n  );\n\n  /**\n   * Go to the first page.\n   */\n  @HostListener('click')\n  goToFirstPage() {\n    if (this.disabled()) {\n      return;\n    }\n\n    this.pagination.page.set(1);\n  }\n\n  /**\n   * A click event may not be fired if this is on an anchor tag and the href is empty.\n   * This is a workaround to ensure the click event is fired.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  protected onEnter(event: KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.goToFirstPage();\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpPaginationLast } from './pagination-last.directive';\n\nexport const NgpPaginationLastToken = new InjectionToken<NgpPaginationLast>(\n  'NgpPaginationLastToken',\n);\n\n/**\n * Inject the PaginationLast directive instance\n */\nexport function injectPaginationLast(): NgpPaginationLast {\n  return inject(NgpPaginationLastToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { booleanAttribute, computed, Directive, HostListener, input } from '@angular/core';\nimport { NgpButton } from 'ng-primitives/button';\nimport { NgpCanDisable, NgpDisabledToken } from 'ng-primitives/internal';\nimport { injectPagination } from '../pagination/pagination.token';\nimport { NgpPaginationLastToken } from './pagination-last.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpPaginationLast]',\n  exportAs: 'ngpPaginationLast',\n  providers: [\n    { provide: NgpPaginationLastToken, useExisting: NgpPaginationLast },\n    { provide: NgpDisabledToken, useExisting: NgpPaginationLast },\n  ],\n  hostDirectives: [NgpButton],\n  host: {\n    '[tabindex]': 'disabled() ? -1 : 0',\n    '[attr.data-disabled]': 'disabled() ? \"\" : null',\n    '[attr.data-last-page]': 'pagination.lastPage() ? \"\" : null',\n  },\n})\nexport class NgpPaginationLast implements NgpCanDisable {\n  /**\n   * Access the pagination directive.\n   */\n  protected readonly pagination = injectPagination();\n\n  /**\n   * Whether the button is disabled.\n   */\n  readonly buttonDisabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpPaginationLastDisabled',\n    transform: booleanAttribute,\n  });\n\n  readonly disabled = computed(\n    () => this.buttonDisabled() || this.pagination.disabled() || this.pagination.lastPage(),\n  );\n\n  /**\n   * Go to the last page.\n   */\n  @HostListener('click')\n  goToLastPage(): void {\n    if (this.disabled()) {\n      return;\n    }\n\n    this.pagination.page.set(this.pagination.pageCount());\n  }\n\n  /**\n   * A click event may not be fired if this is on an anchor tag and the href is empty.\n   * This is a workaround to ensure the click event is fired.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  protected onEnter(event: KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.goToLastPage();\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpPagination } from './pagination/pagination.directive';\nexport { NgpPaginationToken } from './pagination/pagination.token';\nexport { NgpPaginationButton } from './pagination-button/pagination-button.directive';\nexport { NgpPaginationButtonToken } from './pagination-button/pagination-button.token';\nexport { NgpPaginationPrevious } from './pagination-previous/pagination-previous.directive';\nexport { NgpPaginationPreviousToken } from './pagination-previous/pagination-previous.token';\nexport { NgpPaginationNext } from './pagination-next/pagination-next.directive';\nexport { NgpPaginationNextToken } from './pagination-next/pagination-next.token';\nexport { NgpPaginationFirst } from './pagination-first/pagination-first.directive';\nexport { NgpPaginationFirstToken } from './pagination-first/pagination-first.token';\nexport { NgpPaginationLast } from './pagination-last/pagination-last.directive';\nexport { NgpPaginationLastToken } from './pagination-last/pagination-last.token';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}