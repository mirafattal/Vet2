{"version":3,"file":"ng-primitives-avatar.mjs","sources":["../../../../packages/ng-primitives/avatar/src/avatar/avatar.token.ts","../../../../packages/ng-primitives/avatar/src/avatar/avatar.directive.ts","../../../../packages/ng-primitives/avatar/src/config/avatar.config.ts","../../../../packages/ng-primitives/avatar/src/avatar-fallback/avatar-fallback.directive.ts","../../../../packages/ng-primitives/avatar/src/avatar-image/avatar-image.directive.ts","../../../../packages/ng-primitives/avatar/src/index.ts","../../../../packages/ng-primitives/avatar/src/ng-primitives-avatar.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpAvatar } from './avatar.directive';\n\nexport const NgpAvatarToken = new InjectionToken<NgpAvatar>('NgpAvatarToken');\n\n/**\n * Provide the avatar\n * @returns The provider\n */\nexport function injectAvatar(): NgpAvatar {\n  return inject(NgpAvatarToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Directive, signal } from '@angular/core';\nimport { NgpFocusVisible, NgpHover, NgpPress } from 'ng-primitives/interactions';\nimport { NgpAvatarToken } from './avatar.token';\n\n@Directive({\n  selector: '[ngpAvatar]',\n  standalone: true,\n  providers: [{ provide: NgpAvatarToken, useExisting: NgpAvatar }],\n  host: {\n    '[attr.data-state]': 'state()',\n  },\n  hostDirectives: [NgpHover, NgpFocusVisible, NgpPress],\n})\nexport class NgpAvatar {\n  /**\n   * Store the current state of the avatar.\n   * @internal\n   */\n  readonly state = signal(NgpAvatarState.Idle);\n\n  /**\n   * Set the avatar state.\n   * @param state The state to set.\n   * @internal\n   */\n  setState(state: NgpAvatarState): void {\n    this.state.set(state);\n  }\n}\n\nexport enum NgpAvatarState {\n  Idle = 'idle',\n  Loading = 'loading',\n  Loaded = 'loaded',\n  Error = 'error',\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, Provider, inject } from '@angular/core';\n\nexport interface NgpAvatarConfig {\n  /**\n   * Define a delay before the fallback is shown. This is useful to only show the fallback for those with slower connections.\n   * @default 0\n   */\n  delay: number;\n}\n\nexport const defaultAvatarConfig: NgpAvatarConfig = {\n  delay: 0,\n};\n\nexport const NgpAvatarConfigToken = new InjectionToken<NgpAvatarConfig>('NgpAvatarConfigToken');\n\n/**\n * Provide the avatar config\n * @param config The avatar config\n * @returns The provider\n */\nexport function provideAvatarConfig(config: Partial<NgpAvatarConfig>): Provider[] {\n  return [\n    {\n      provide: NgpAvatarConfigToken,\n      useValue: { ...defaultAvatarConfig, ...config },\n    },\n  ];\n}\n\n/**\n * Inject the avatar config\n * @returns The global avatar config\n */\nexport function injectAvatarConfig(): NgpAvatarConfig {\n  return inject(NgpAvatarConfigToken, { optional: true }) ?? defaultAvatarConfig;\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { NumberInput } from '@angular/cdk/coercion';\nimport { Directive, OnInit, computed, input, numberAttribute, signal } from '@angular/core';\nimport { injectDisposables } from 'ng-primitives/utils';\nimport { NgpAvatarState } from '../avatar/avatar.directive';\nimport { injectAvatar } from '../avatar/avatar.token';\nimport { injectAvatarConfig } from '../config/avatar.config';\n\n@Directive({\n  selector: '[ngpAvatarFallback]',\n  standalone: true,\n  host: {\n    '[style.display]': 'visible() ? null : \"none\"',\n  },\n})\nexport class NgpAvatarFallback implements OnInit {\n  /**\n   * Access the avatar\n   */\n  private readonly avatar = injectAvatar();\n\n  /**\n   * Access the global configuration.\n   */\n  private readonly config = injectAvatarConfig();\n\n  /**\n   * Access the disposable utilities.\n   */\n  private readonly disposables = injectDisposables();\n\n  /**\n   * Define a delay before the fallback is shown. This is useful to only show the fallback for those with slower connections.\n   * @default 0\n   */\n  readonly delay = input<number, NumberInput>(this.config.delay, {\n    alias: 'ngpAvatarFallbackDelay',\n    transform: numberAttribute,\n  });\n\n  /**\n   * Determine if this element should be hidden.\n   * @returns True if the element should be visible\n   */\n  protected readonly visible = computed(\n    () =>\n      // we need to check if the element can render and if the avatar is not in a loaded state\n      this.delayElapsed() && this.avatar.state() !== NgpAvatarState.Loaded,\n  );\n\n  /**\n   * Determine the delay has elapsed, and we can show the fallback.\n   */\n  private delayElapsed = signal(false);\n\n  ngOnInit(): void {\n    this.disposables.setTimeout(() => this.delayElapsed.set(true), this.delay());\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Directive, ElementRef, HostListener, OnInit, inject } from '@angular/core';\nimport { NgpVisuallyHidden, injectVisuallyHidden } from 'ng-primitives/a11y';\nimport { NgpAvatarState } from '../avatar/avatar.directive';\nimport { injectAvatar } from '../avatar/avatar.token';\n\n@Directive({\n  selector: 'img[ngpAvatarImage]',\n  standalone: true,\n  hostDirectives: [NgpVisuallyHidden],\n})\nexport class NgpAvatarImage implements OnInit {\n  /**\n   * Control the visibility of the image.\n   */\n  protected readonly visuallyHidden = injectVisuallyHidden();\n\n  /**\n   * Access the avatar\n   */\n  private readonly avatar = injectAvatar();\n\n  /**\n   * Access the image element ref.\n   */\n  private readonly elementRef = inject<ElementRef<HTMLImageElement>>(ElementRef);\n\n  ngOnInit(): void {\n    // mark the avatar as loading\n    this.setState(NgpAvatarState.Loading);\n\n    // if there is no src, we can report this as an error\n    if (!this.elementRef.nativeElement.src) {\n      this.setState(NgpAvatarState.Error);\n    }\n\n    // if the image has already loaded, we can report this to the avatar\n    if (this.elementRef.nativeElement.complete) {\n      this.setState(NgpAvatarState.Loaded);\n    }\n  }\n\n  @HostListener('load')\n  protected onLoad(): void {\n    this.setState(NgpAvatarState.Loaded);\n  }\n\n  @HostListener('error')\n  protected onError(): void {\n    this.setState(NgpAvatarState.Error);\n  }\n\n  private setState(state: NgpAvatarState) {\n    this.avatar.setState(state);\n\n    // if the state is loaded then we should make the image visible\n    this.visuallyHidden.setVisibility(state === NgpAvatarState.Loaded);\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpAvatarFallback } from './avatar-fallback/avatar-fallback.directive';\nexport { NgpAvatarImage } from './avatar-image/avatar-image.directive';\nexport { NgpAvatar, NgpAvatarState } from './avatar/avatar.directive';\nexport { NgpAvatarToken } from './avatar/avatar.token';\nexport { NgpAvatarConfig, provideAvatarConfig } from './config/avatar.config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1"],"mappings":"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"}