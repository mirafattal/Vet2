{"version":3,"file":"ng-primitives-interactions.mjs","sources":["../../../../packages/ng-primitives/interactions/src/hover/hover.token.ts","../../../../packages/ng-primitives/interactions/src/hover/hover.directive.ts","../../../../packages/ng-primitives/interactions/src/focus/focus.token.ts","../../../../packages/ng-primitives/interactions/src/focus/focus.directive.ts","../../../../packages/ng-primitives/interactions/src/focus-visible/focus-visible.token.ts","../../../../packages/ng-primitives/interactions/src/focus-visible/focus-visible.directive.ts","../../../../packages/ng-primitives/interactions/src/press/press.token.ts","../../../../packages/ng-primitives/interactions/src/press/press.directive.ts","../../../../packages/ng-primitives/interactions/src/move/move.token.ts","../../../../packages/ng-primitives/interactions/src/move/move.directive.ts","../../../../packages/ng-primitives/interactions/src/index.ts","../../../../packages/ng-primitives/interactions/src/ng-primitives-interactions.ts"],"sourcesContent":["/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpHover } from './hover.directive';\n\nexport const NgpHoverToken = new InjectionToken<NgpHover>('NgpHoverToken');\n\n/**\n * Inject the Hover directive instance\n * @returns Hover directive instance\n */\nexport function injectHover(): NgpHover {\n  return inject(NgpHoverToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport type { BooleanInput } from '@angular/cdk/coercion';\nimport { Directive, booleanAttribute, input, output } from '@angular/core';\nimport { injectDisabled, setupHover } from 'ng-primitives/internal';\nimport { NgpHoverToken } from './hover.token';\n\n/**\n * A directive for normalizing hover events across the different browsers and devices.\n *\n * This is an Angular port of the useHover hook from\n * react-aria: https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/interactions/src/useHover.ts\n */\n@Directive({\n  standalone: true,\n  selector: '[ngpHover]',\n  exportAs: 'ngpHover',\n  providers: [{ provide: NgpHoverToken, useExisting: NgpHover }],\n})\nexport class NgpHover {\n  /**\n   * Whether hoving should be disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpHoverDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Access the disabled state from any parent.\n   */\n  private readonly isDisabled = injectDisabled(this.disabled);\n\n  /**\n   * Emit an event when hovering starts.\n   */\n  readonly hoverStart = output<void>({ alias: 'ngpHoverStart' });\n\n  /**\n   * Emit an event when hovering ends.\n   */\n  readonly hoverEnd = output<void>({ alias: 'ngpHoverEnd' });\n\n  /**\n   * Emit an event when the hover state changes.\n   */\n  readonly hoverChange = output<boolean>({ alias: 'ngpHover' });\n\n  /**\n   * Setup the hover state.\n   */\n  constructor() {\n    // setup the hover listener\n    setupHover({\n      hoverStart: () => {\n        this.hoverStart.emit();\n        this.hoverChange.emit(true);\n      },\n      hoverEnd: () => {\n        this.hoverEnd.emit();\n        this.hoverChange.emit(false);\n      },\n      disabled: this.isDisabled,\n    });\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpFocus } from './focus.directive';\n\nexport const NgpFocusToken = new InjectionToken<NgpFocus>('NgpFocusToken');\n\n/**\n * Inject the Focus directive instance\n */\nexport function injectFocus(): NgpFocus {\n  return inject(NgpFocusToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { Directive, booleanAttribute, input, output } from '@angular/core';\nimport { injectDisabled, setupFocus } from 'ng-primitives/internal';\nimport { NgpFocusToken } from './focus.token';\n\n/**\n * This was inspired by the React Aria useFocus hook.\n * https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/interactions/src/useFocus.ts#L20\n */\n@Directive({\n  standalone: true,\n  selector: '[ngpFocus]',\n  exportAs: 'ngpFocus',\n  providers: [{ provide: NgpFocusToken, useExisting: NgpFocus }],\n})\nexport class NgpFocus {\n  /**\n   * Whether listening for focus events is disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpFocusDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Access the disabled state from any parent.\n   */\n  private readonly isDisabled = injectDisabled(this.disabled);\n\n  /**\n   * Emit when the focus state changes.\n   */\n  readonly focus = output<boolean>({ alias: 'ngpFocus' });\n\n  constructor() {\n    // setup the focus listener\n    setupFocus({\n      disabled: this.isDisabled,\n      focus: () => this.focus.emit(true),\n      blur: () => this.focus.emit(false),\n    });\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpFocusVisible } from './focus-visible.directive';\n\nexport const NgpFocusVisibleToken = new InjectionToken<NgpFocusVisible>('NgpFocusVisibleToken');\n\n/**\n * Inject the FocusVisible directive instance\n */\nexport function injectFocusVisible(): NgpFocusVisible {\n  return inject(NgpFocusVisibleToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { Directive, booleanAttribute, input, output } from '@angular/core';\nimport { injectDisabled, setupFocusVisible } from 'ng-primitives/internal';\nimport { NgpFocusVisibleToken } from './focus-visible.token';\n\n@Directive({\n  standalone: true,\n  selector: '[ngpFocusVisible]',\n  exportAs: 'ngpFocusVisible',\n  providers: [{ provide: NgpFocusVisibleToken, useExisting: NgpFocusVisible }],\n})\nexport class NgpFocusVisible {\n  /**\n   * Whether focus events are listened to.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpFocusVisibleDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Access the disabled state from any parent.\n   */\n  private readonly isDisabled = injectDisabled(this.disabled);\n\n  /**\n   * Emit when the element is visually focused.\n   */\n  readonly focusChange = output<boolean>({\n    alias: 'ngpFocusVisible',\n  });\n\n  constructor() {\n    // setup the focus visible listener\n    setupFocusVisible({\n      disabled: this.isDisabled,\n      focusChange: value => this.focusChange.emit(value),\n    });\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpPress } from './press.directive';\n\nexport const NgpPressToken = new InjectionToken<NgpPress>('NgpPressToken');\n\n/**\n * Inject the Press directive instance\n */\nexport function injectPress(): NgpPress {\n  return inject(NgpPressToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { Directive, booleanAttribute, input, output } from '@angular/core';\nimport { injectDisabled, setupPress } from 'ng-primitives/internal';\nimport { NgpPressToken } from './press.token';\n\n/**\n * This was inpsired by Headless UI's active-press hook:\n * https://github.com/tailwindlabs/headlessui/blob/main/packages/%40headlessui-react/src/hooks/use-active-press.tsx\n */\n\n@Directive({\n  standalone: true,\n  selector: '[ngpPress]',\n  exportAs: 'ngpPress',\n  providers: [{ provide: NgpPressToken, useExisting: NgpPress }],\n})\nexport class NgpPress {\n  /**\n   * Whether listening for press events is disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpPressDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Access the disabled state from any parent.\n   */\n  private readonly isDisabled = injectDisabled(this.disabled);\n\n  /**\n   * Emit when the press begins.\n   */\n  readonly pressStart = output<void>({\n    alias: 'ngpPressStart',\n  });\n\n  /**\n   * Emit when the press ends.\n   */\n  readonly pressEnd = output<void>({\n    alias: 'ngpPressEnd',\n  });\n\n  /**\n   * Emit when the press changes.\n   */\n  readonly pressChange = output<boolean>({\n    alias: 'ngpPress',\n  });\n\n  constructor() {\n    // setup the press listener\n    setupPress({\n      pressStart: () => {\n        this.pressStart.emit();\n        this.pressChange.emit(true);\n      },\n      pressEnd: () => {\n        this.pressEnd.emit();\n        this.pressChange.emit(false);\n      },\n      disabled: this.isDisabled,\n    });\n  }\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { InjectionToken, inject } from '@angular/core';\nimport type { NgpMove } from './move.directive';\n\nexport const NgpMoveToken = new InjectionToken<NgpMove>('NgpMoveToken');\n\n/**\n * Inject the Move directive instance\n */\nexport function injectMove(): NgpMove {\n  return inject(NgpMoveToken);\n}\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { booleanAttribute, Directive, HostListener, input, output, signal } from '@angular/core';\nimport { injectDisabled } from 'ng-primitives/internal';\nimport { injectDisposables } from 'ng-primitives/utils';\nimport { NgpMoveToken } from './move.token';\n\n/**\n * Inspired by react-aria useMove hook:\n * https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/interactions/src/useMove.ts\n */\n\n@Directive({\n  standalone: true,\n  selector: '[ngpMove]',\n  exportAs: 'ngpMove',\n  providers: [{ provide: NgpMoveToken, useExisting: NgpMove }],\n  host: {\n    '[attr.data-move]': 'isMoving() ? \"\" : null',\n  },\n})\nexport class NgpMove {\n  /**\n   * Access the disposable helper.\n   */\n  private readonly disposables = injectDisposables();\n\n  /**\n   * Whether movement is disabled.\n   */\n  readonly disabled = input<boolean, BooleanInput>(false, {\n    alias: 'ngpMoveDisabled',\n    transform: booleanAttribute,\n  });\n\n  /**\n   * Access the disabled state from any parent.\n   */\n  private readonly isDisabled = injectDisabled(this.disabled);\n\n  /**\n   * Emit when the move event begins.\n   */\n  readonly start = output<NgpMoveStartEvent>({\n    alias: 'ngpMoveStart',\n  });\n\n  /**\n   * Emit when the element is moved.\n   */\n  readonly move = output<NgpMoveEvent>({\n    alias: 'ngpMove',\n  });\n\n  /**\n   * Emit when the move event ends.\n   */\n  readonly end = output<NgpMoveEndEvent>({\n    alias: 'ngpMoveEnd',\n  });\n\n  /**\n   * Whether the element is currently being moved.\n   */\n  private isMoving = signal<boolean>(false);\n\n  /**\n   * Store the last x position of the element.\n   */\n  private x: number | null = null;\n\n  /**\n   * Store the last y position of the element.\n   */\n  private y: number | null = null;\n\n  /**\n   * Store the id of the last pointer.\n   */\n  private pointerId: number | null = null;\n\n  /**\n   * Store the disposable event listeners.\n   */\n  private disposableListeners: (() => void)[] = [];\n\n  /**\n   * Handle a move start.\n   */\n  private onMoveStart(event: PointerEvent | KeyboardEvent, pointerType: PointerType): void {\n    this.start.emit({\n      pointerType,\n      shiftKey: event.shiftKey,\n      ctrlKey: event.ctrlKey,\n      metaKey: event.metaKey,\n      altKey: event.altKey,\n    });\n    this.isMoving.set(true);\n  }\n\n  /**\n   * Handle a move event.\n   */\n  private onMove(\n    event: PointerEvent | KeyboardEvent,\n    pointerType: PointerType,\n    deltaX: number,\n    deltaY: number,\n  ): void {\n    if (deltaX === 0 && deltaY === 0) {\n      return;\n    }\n\n    this.move.emit({\n      deltaX,\n      deltaY,\n      pointerType,\n      shiftKey: event.shiftKey,\n      ctrlKey: event.ctrlKey,\n      metaKey: event.metaKey,\n      altKey: event.altKey,\n    });\n  }\n\n  /**\n   * Handle a move end.\n   */\n  private onMoveEnd(event: PointerEvent | KeyboardEvent, pointerType: PointerType): void {\n    this.end.emit({\n      pointerType,\n      shiftKey: event.shiftKey,\n      ctrlKey: event.ctrlKey,\n      metaKey: event.metaKey,\n      altKey: event.altKey,\n    });\n    this.isMoving.set(false);\n  }\n\n  /**\n   * Handle the pointer down event.\n   */\n  @HostListener('pointerdown', ['$event'])\n  protected onPointerDown(event: PointerEvent): void {\n    // ignore right-click or additional pointers\n    if (event.button !== 0 || this.pointerId !== null || this.isDisabled()) {\n      return;\n    }\n\n    // prevent the default behavior\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.onMoveStart(event, event.pointerType as PointerType);\n\n    // store the pointer id and initial position\n    this.pointerId = event.pointerId;\n    this.x = event.pageX;\n    this.y = event.pageY;\n\n    // add global event listeners\n    const pointerMove = this.disposables.addEventListener(\n      window,\n      'pointermove',\n      this.onPointerMove.bind(this) as EventListener,\n      false,\n    );\n\n    const pointerUp = this.disposables.addEventListener(\n      window,\n      'pointerup',\n      this.onPointerUp.bind(this) as EventListener,\n      false,\n    );\n\n    const pointerCancel = this.disposables.addEventListener(\n      window,\n      'pointercancel',\n      this.onPointerUp.bind(this) as EventListener,\n      false,\n    );\n\n    // store the disposable event listeners\n    this.disposableListeners = [pointerMove, pointerUp, pointerCancel];\n  }\n\n  /**\n   * Handle the pointer up event.\n   */\n  protected onPointerUp(event: PointerEvent): void {\n    if (this.pointerId !== event.pointerId) {\n      return;\n    }\n\n    const pointerType = (event.pointerType ?? 'mouse') as PointerType;\n    this.onMoveEnd(event, pointerType);\n    this.pointerId = null;\n    this.disposableListeners.forEach(dispose => dispose());\n  }\n\n  /**\n   * Handle the pointer move event.\n   */\n  protected onPointerMove(event: PointerEvent): void {\n    if (this.pointerId !== event.pointerId) {\n      return;\n    }\n\n    // Problems with PointerEvent#movementX/movementY:\n    // 1. it is always 0 on macOS Safari.\n    // 2. On Chrome Android, it's scaled by devicePixelRatio, but not on Chrome macOS\n    this.onMove(\n      event,\n      event.pointerType as PointerType,\n      event.pageX - (this.x ?? 0),\n      event.pageY - (this.y ?? 0),\n    );\n    this.x = event.pageX;\n    this.y = event.pageY;\n  }\n\n  private triggerKeyboardMove(event: KeyboardEvent, deltaX: number, deltaY: number): void {\n    if (this.isDisabled()) {\n      return;\n    }\n\n    this.onMoveStart(event, 'keyboard');\n    this.onMove(event, 'keyboard', deltaX, deltaY);\n    this.onMoveEnd(event, 'keyboard');\n  }\n\n  @HostListener('keydown.ArrowUp', ['$event'])\n  protected onArrowUp(event: KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.triggerKeyboardMove(event, 0, -1);\n  }\n\n  @HostListener('keydown.ArrowDown', ['$event'])\n  protected onArrowDown(event: KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.triggerKeyboardMove(event, 0, 1);\n  }\n\n  @HostListener('keydown.ArrowLeft', ['$event'])\n  protected onArrowLeft(event: KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.triggerKeyboardMove(event, -1, 0);\n  }\n\n  @HostListener('keydown.ArrowRight', ['$event'])\n  protected onArrowRight(event: KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.triggerKeyboardMove(event, 1, 0);\n  }\n}\n\ninterface NgpMoveBaseEvent {\n  /**\n   * Whether the event was triggered by a mouse or keyboard event.\n   */\n  pointerType: PointerType;\n  /**\n   * Whether the shift key was pressed during the event.\n   */\n  shiftKey: boolean;\n  /**\n   * Whether the control key was pressed during the event.\n   */\n  ctrlKey: boolean;\n  /**\n   * Whether the meta key was pressed during the event.\n   */\n  metaKey: boolean;\n  /**\n   * Whether the alt key was pressed during the event.\n   */\n  altKey: boolean;\n}\n\nexport type NgpMoveStartEvent = NgpMoveBaseEvent;\nexport type NgpMoveEndEvent = NgpMoveBaseEvent;\n\nexport interface NgpMoveEvent extends NgpMoveBaseEvent {\n  /**\n   * The amount of pixels moved in the x-axis.\n   */\n  deltaX: number;\n  /**\n   * The amount of pixels moved in the y-axis.\n   */\n  deltaY: number;\n}\n\nexport type PointerType = 'mouse' | 'pen' | 'touch' | 'keyboard' | 'virtual';\n","/**\n * Copyright © 2024 Angular Primitives.\n * https://github.com/ng-primitives/ng-primitives\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport { NgpHover } from './hover/hover.directive';\nexport { NgpHoverToken, injectHover } from './hover/hover.token';\nexport { NgpFocus } from './focus/focus.directive';\nexport { NgpFocusToken } from './focus/focus.token';\nexport { NgpFocusVisible } from './focus-visible/focus-visible.directive';\nexport { NgpFocusVisibleToken } from './focus-visible/focus-visible.token';\nexport { NgpPress } from './press/press.directive';\nexport { NgpPressToken } from './press/press.token';\nexport { NgpMove } from './move/move.directive';\nexport { NgpMoveToken } from './move/move.token';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}