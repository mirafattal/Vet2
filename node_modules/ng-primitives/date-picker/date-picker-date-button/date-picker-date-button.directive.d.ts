import { NgpCanDisable } from 'ng-primitives/internal';
import * as i0 from "@angular/core";
import * as i1 from "ng-primitives/button";
export declare class NgpDatePickerDateButton<T> implements NgpCanDisable {
    /**
     * Access the element ref.
     */
    private readonly elementRef;
    /**
     * Access the focus monitor.
     */
    private readonly focusMonitor;
    /**
     * Access the date picker.
     */
    private readonly datePicker;
    /**
     * Access the date adapter.
     */
    private readonly dateAdapter;
    /**
     * The date this cell represents.
     */
    private readonly date;
    /**
     * Determine if this is the focused date.
     */
    protected readonly focused: import("@angular/core").Signal<boolean>;
    /**
     * Determine if this is the selected date.
     * @internal
     */
    readonly selected: import("@angular/core").Signal<boolean | undefined>;
    /**
     * Determine if this date is outside the current month.
     */
    protected readonly outside: import("@angular/core").Signal<boolean>;
    /**
     * Determine if this date is today.
     */
    protected readonly today: import("@angular/core").Signal<boolean>;
    /**
     * Determine if this date is disabled.
     * @internal
     */
    readonly disabled: import("@angular/core").Signal<boolean>;
    /**
     * Determine if the element is a button.
     */
    protected readonly isButton: boolean;
    /**
     * When the button is clicked, select the date.
     */
    protected select(event?: KeyboardEvent): void;
    /**
     * Focus if this is the current focused date.
     * @internal
     */
    focus(): void;
    /**
     * Focus the previous cell.
     */
    protected focusPrevious(event: KeyboardEvent): void;
    /**
     * Focus the next cell.
     */
    protected focusNext(event: KeyboardEvent): void;
    /**
     * Focus the above cell.
     */
    protected focusAbove(event: KeyboardEvent): void;
    /**
     * Focus the below cell.
     */
    protected focusBelow(event: KeyboardEvent): void;
    /**
     * Focus the first date of the month.
     */
    protected focusFirst(event: KeyboardEvent): void;
    /**
     * Focus the last date of the month.
     */
    protected focusLast(event: KeyboardEvent): void;
    /**
     * Focus the same date in the previous month.
     */
    protected focusPreviousMonth(event: KeyboardEvent): void;
    /**
     * Focus the same date in the next month.
     */
    protected focusNextMonth(event: KeyboardEvent): void;
    private focusDate;
    /**
     * Get the direction of the element.
     */
    private getDirection;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpDatePickerDateButton<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpDatePickerDateButton<any>, "[ngpDatePickerDateButton]", ["ngpDatePickerDateButton"], {}, {}, never, never, true, [{ directive: typeof i1.NgpButton; inputs: {}; outputs: {}; }]>;
}
