/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { BooleanInput, NumberInput } from '@angular/cdk/coercion';
import { NgpCanDisable } from 'ng-primitives/internal';
import * as i0 from "@angular/core";
import * as i1 from "ng-primitives/form-field";
export declare class NgpSlider implements NgpCanDisable {
    /**
     * The value of the slider.
     */
    readonly value: import("@angular/core").ModelSignal<number>;
    /**
     * The minimum value of the slider.
     */
    readonly min: import("@angular/core").InputSignalWithTransform<number, NumberInput>;
    /**
     * The maximum value of the slider.
     */
    readonly max: import("@angular/core").InputSignalWithTransform<number, NumberInput>;
    /**
     * The step value of the slider.
     */
    readonly step: import("@angular/core").InputSignalWithTransform<number, NumberInput>;
    /**
     * The orientation of the slider.
     */
    readonly orientation: import("@angular/core").InputSignal<"horizontal" | "vertical">;
    /**
     * The disabled state of the slider.
     */
    readonly disabled: import("@angular/core").InputSignalWithTransform<boolean, BooleanInput>;
    /**
     * Access the slider track.
     */
    readonly track: import("@angular/core").Signal<import("ng-primitives/slider").NgpSliderTrack | undefined>;
    /**
     * The value as a percentage based on the min and max values.
     */
    protected readonly percentage: import("@angular/core").Signal<number>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpSlider, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpSlider, "[ngpSlider]", ["ngpSlider"], { "value": { "alias": "ngpSliderValue"; "required": false; "isSignal": true; }; "min": { "alias": "ngpSliderMin"; "required": false; "isSignal": true; }; "max": { "alias": "ngpSliderMax"; "required": false; "isSignal": true; }; "step": { "alias": "ngpSliderStep"; "required": false; "isSignal": true; }; "orientation": { "alias": "ngpSliderOrientation"; "required": false; "isSignal": true; }; "disabled": { "alias": "ngpSliderDisabled"; "required": false; "isSignal": true; }; }, { "value": "ngpSliderValueChange"; }, ["track"], never, true, [{ directive: typeof i1.NgpFormControl; inputs: {}; outputs: {}; }]>;
}
