/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { BooleanInput, NumberInput } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
export declare class NgpPagination {
    /**
     * The currently selected page.
     */
    readonly page: import("@angular/core").ModelSignal<number>;
    /**
     * The total number of pages.
     */
    readonly pageCount: import("@angular/core").InputSignalWithTransform<number, NumberInput>;
    /**
     * Whether the pagination is disabled.
     */
    readonly disabled: import("@angular/core").InputSignalWithTransform<boolean, BooleanInput>;
    /**
     * Determine if we are on the first page.
     * @internal
     */
    readonly firstPage: import("@angular/core").Signal<boolean>;
    /**
     * Determine if we are on the last page.
     * @internal
     */
    readonly lastPage: import("@angular/core").Signal<boolean>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpPagination, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpPagination, "[ngpPagination]", ["ngpPagination"], { "page": { "alias": "ngpPaginationPage"; "required": false; "isSignal": true; }; "pageCount": { "alias": "ngpPaginationPageCount"; "required": false; "isSignal": true; }; "disabled": { "alias": "ngpPaginationDisabled"; "required": false; "isSignal": true; }; }, { "page": "ngpPaginationPageChange"; }, never, never, true, never>;
}
