/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { BooleanInput } from '@angular/cdk/coercion';
import { NgpCanDisable } from 'ng-primitives/internal';
import * as i0 from "@angular/core";
export declare class NgpButton implements NgpCanDisable {
    /**
     * Get the native element of the button.
     */
    private readonly elementRef;
    /**
     * Whether the button is disabled.
     */
    readonly disabled: import("@angular/core").InputSignalWithTransform<boolean, BooleanInput>;
    /**
     * Detect if this is an HTML button element.
     */
    protected readonly isButton: boolean;
    constructor();
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpButton, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpButton, "[ngpButton]", ["ngpButton"], { "disabled": { "alias": "disabled"; "required": false; "isSignal": true; }; }, {}, never, never, true, never>;
}
