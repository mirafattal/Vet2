/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { BooleanInput } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
export declare class NgpToggle {
    /**
     * Access the element.
     */
    private readonly element;
    /**
     * Whether the toggle is selected.
     * @default false
     */
    readonly selected: import("@angular/core").ModelSignal<boolean>;
    /**
     * Whether the toggle is disabled.
     * @default false
     */
    readonly disabled: import("@angular/core").InputSignalWithTransform<boolean, BooleanInput>;
    /**
     * Determine if the element is a button.
     */
    protected isButton: boolean;
    /**
     * Toggle the selected state.
     */
    toggle(): void;
    /**
     * If the element is not a button or a link the space key should toggle the selected state.
     */
    protected onKeyDown(event: KeyboardEvent): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpToggle, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpToggle, "[ngpToggle]", ["ngpToggle"], { "selected": { "alias": "ngpToggleSelected"; "required": false; "isSignal": true; }; "disabled": { "alias": "ngpToggleDisabled"; "required": false; "isSignal": true; }; }, { "selected": "ngpToggleSelectedChange"; }, never, never, true, never>;
}
