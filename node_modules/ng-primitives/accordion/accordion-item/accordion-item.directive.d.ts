/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { BooleanInput } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
export declare class NgpAccordionItem<T> {
    /**
     * Access the accordion.
     */
    protected readonly accordion: import("ng-primitives/accordion").NgpAccordion<unknown>;
    /**
     * The value of the accordion item.
     */
    readonly value: import("@angular/core").InputSignal<T>;
    /**
     * Whether the accordion item is disabled.
     */
    readonly disabled: import("@angular/core").InputSignalWithTransform<boolean, BooleanInput>;
    /**
     * Access the accordion trigger
     */
    private readonly trigger;
    /**
     * Access the accordion content
     */
    private readonly content;
    /**
     * Whether the accordion item is expanded.
     */
    readonly open: import("@angular/core").Signal<boolean>;
    /**
     * The trigger id.
     */
    readonly triggerId: import("@angular/core").Signal<string | undefined>;
    /**
     * The content id.
     */
    readonly contentId: import("@angular/core").Signal<string | undefined>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpAccordionItem<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpAccordionItem<any>, "[ngpAccordionItem]", ["ngpAccordionItem"], { "value": { "alias": "ngpAccordionItemValue"; "required": true; "isSignal": true; }; "disabled": { "alias": "ngpAccordionItemDisabled"; "required": false; "isSignal": true; }; }, {}, ["trigger", "content"], never, true, never>;
}
