/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { BooleanInput } from '@angular/cdk/coercion';
import { OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "ng-primitives/focus-trap";
export declare class NgpDialog<T = unknown> implements OnDestroy {
    private readonly config;
    /** Access the dialog ref */
    private readonly dialogRef;
    /** The id of the dialog */
    readonly id: import("@angular/core").InputSignal<string>;
    /** The dialog role. */
    readonly role: import("@angular/core").InputSignal<import("../config/dialog.config").NgpDialogRole | undefined>;
    /** Whether the dialog is a modal. */
    readonly modal: import("@angular/core").InputSignalWithTransform<boolean, BooleanInput>;
    /** The labelledby ids */
    protected readonly labelledBy: import("@angular/core").WritableSignal<string[]>;
    /** The describedby ids */
    protected readonly describedBy: import("@angular/core").WritableSignal<string[]>;
    ngOnDestroy(): void;
    /** Close the dialog. */
    close(): void;
    /** Stop click events from propagating to the overlay */
    protected onClick(event: Event): void;
    /** @internal register a labelledby id */
    setLabelledBy(id: string): void;
    /** @internal register a describedby id */
    setDescribedBy(id: string): void;
    /** @internal remove a labelledby id */
    removeLabelledBy(id: string): void;
    /** @internal remove a describedby id */
    removeDescribedBy(id: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpDialog<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpDialog<any>, "[ngpDialog]", ["ngpDialog"], { "id": { "alias": "id"; "required": false; "isSignal": true; }; "role": { "alias": "ngpDialogRole"; "required": false; "isSignal": true; }; "modal": { "alias": "ngpDialogModal"; "required": false; "isSignal": true; }; }, {}, never, never, true, [{ directive: typeof i1.NgpFocusTrap; inputs: {}; outputs: {}; }]>;
}
