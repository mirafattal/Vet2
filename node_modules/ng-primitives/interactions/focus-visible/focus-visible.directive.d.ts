/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { BooleanInput } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
export declare class NgpFocusVisible {
    /**
     * Whether focus events are listened to.
     */
    readonly disabled: import("@angular/core").InputSignalWithTransform<boolean, BooleanInput>;
    /**
     * Access the disabled state from any parent.
     */
    private readonly isDisabled;
    /**
     * Emit when the element is visually focused.
     */
    readonly focusChange: import("@angular/core").OutputEmitterRef<boolean>;
    constructor();
    static ɵfac: i0.ɵɵFactoryDeclaration<NgpFocusVisible, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgpFocusVisible, "[ngpFocusVisible]", ["ngpFocusVisible"], { "disabled": { "alias": "ngpFocusVisibleDisabled"; "required": false; "isSignal": true; }; }, { "focusChange": "ngpFocusVisible"; }, never, never, true, never>;
}
