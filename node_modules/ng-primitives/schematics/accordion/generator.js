"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.accordionGenerator = accordionGenerator;
/**
 * Copyright Â© 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
const devkit_1 = require("@nx/devkit");
const path = require("path");
const item = 'item';
const accordionItemPath = 'accordion-item';
const accordionPath = 'accordion';
const accordionItemStyles = `
    :host {}

    [ngpAccordionContent] {}

    [ngpAccordionContent][data-open] {}

    [ngpAccordionTrigger][data-focus-visible] {}
`;
async function accordionGenerator(tree, options) {
    const { fileName } = (0, devkit_1.names)(options.name);
    (0, devkit_1.generateFiles)(tree, path.join(__dirname, `files/${accordionPath}`), options.directory, {
        ...options,
        ...(0, devkit_1.names)(options.name),
        selector: `${options.prefix}-${fileName}`,
        styles: `:host { }`,
        template: `<ng-content />`,
    });
    (0, devkit_1.generateFiles)(tree, path.join(__dirname, `files/${accordionItemPath}`), options.directory, {
        ...options,
        ...(0, devkit_1.names)(`${options.name}-${item}`),
        selector: `${options.prefix}-${fileName}-${item}`,
        styles: accordionItemStyles,
        template: `<ng-content />`,
    });
    if (options.inlineStyle) {
        tree.delete(path.join(options.directory, `${fileName}-${item}.component.${options.style}`));
        tree.delete(path.join(options.directory, `${fileName}.component.${options.style}`));
    }
    if (options.inlineTemplate) {
        tree.delete(path.join(options.directory, `${fileName}-${item}.component.html`));
        tree.delete(path.join(options.directory, `${fileName}.component.html`));
    }
    await (0, devkit_1.formatFiles)(tree);
}
exports.default = accordionGenerator;
//# sourceMappingURL=generator.js.map