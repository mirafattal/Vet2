import { InjectionToken, inject } from '@angular/core';
export const defaultDialogConfig = {
    role: 'dialog',
    modal: true,
    closeOnNavigation: true,
};
export const NgpDialogConfigToken = new InjectionToken('NgpDialogConfigToken');
/**
 * Provide the default Dialog configuration
 * @param config The Dialog configuration
 * @returns The provider
 */
export function provideDialogConfig(config) {
    return [
        {
            provide: NgpDialogConfigToken,
            useValue: { ...defaultDialogConfig, ...config },
        },
    ];
}
/**
 * Inject the Dialog configuration
 * @returns The global Dialog configuration
 */
export function injectDialogConfig() {
    return inject(NgpDialogConfigToken, { optional: true }) ?? defaultDialogConfig;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLmNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nLXByaW1pdGl2ZXMvZGlhbG9nL3NyYy9jb25maWcvZGlhbG9nLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQSxPQUFPLEVBQUUsY0FBYyxFQUF3QyxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFpQzdGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFvQjtJQUNsRCxJQUFJLEVBQUUsUUFBUTtJQUNkLEtBQUssRUFBRSxJQUFJO0lBQ1gsaUJBQWlCLEVBQUUsSUFBSTtDQUN4QixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsSUFBSSxjQUFjLENBQWtCLHNCQUFzQixDQUFDLENBQUM7QUFFaEc7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSxtQkFBbUIsQ0FBQyxNQUFnQztJQUNsRSxPQUFPO1FBQ0w7WUFDRSxPQUFPLEVBQUUsb0JBQW9CO1lBQzdCLFFBQVEsRUFBRSxFQUFFLEdBQUcsbUJBQW1CLEVBQUUsR0FBRyxNQUFNLEVBQUU7U0FDaEQ7S0FDRixDQUFDO0FBQ0osQ0FBQztBQUVEOzs7R0FHRztBQUNILE1BQU0sVUFBVSxrQkFBa0I7SUFDaEMsT0FBTyxNQUFNLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUMsSUFBSSxtQkFBbUIsQ0FBQztBQUNqRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgwqkgMjAyNCBBbmd1bGFyIFByaW1pdGl2ZXMuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbmctcHJpbWl0aXZlcy9uZy1wcmltaXRpdmVzXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIDIuMCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5pbXBvcnQgeyBTY3JvbGxTdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IEluamVjdGlvblRva2VuLCBJbmplY3RvciwgUHJvdmlkZXIsIFZpZXdDb250YWluZXJSZWYsIGluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKiogVmFsaWQgQVJJQSByb2xlcyBmb3IgYSBkaWFsb2cuICovXG5leHBvcnQgdHlwZSBOZ3BEaWFsb2dSb2xlID0gJ2RpYWxvZycgfCAnYWxlcnRkaWFsb2cnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE5ncERpYWxvZ0NvbmZpZzxUID0gYW55PiB7XG4gIC8qKiBUaGUgdmlldyBjb250YWluZXIgdG8gYXR0YWNoIHRoZSBkaWFsb2cgdG8uICovXG4gIHZpZXdDb250YWluZXJSZWY/OiBWaWV3Q29udGFpbmVyUmVmO1xuXG4gIC8qKiBUaGUgaW5qZWN0b3IgdG8gdXNlIGZvciB0aGUgZGlhbG9nLiBEZWZhdWx0cyB0byB0aGUgdmlldyBjb250YWluZXIncyBpbmplY3Rvci4qL1xuICBpbmplY3Rvcj86IEluamVjdG9yO1xuXG4gIC8qKiBJRCBmb3IgdGhlIGRpYWxvZy4gSWYgb21pdHRlZCwgYSB1bmlxdWUgb25lIHdpbGwgYmUgZ2VuZXJhdGVkLiAqL1xuICBpZD86IHN0cmluZztcblxuICAvKiogVGhlIHJvbGUgb2YgdGhlIGRpYWxvZy4gKi9cbiAgcm9sZT86IE5ncERpYWxvZ1JvbGU7XG5cbiAgLyoqIFdoZXRoZXIgdGhpcyBpcyBhIG1vZGFsIGRpYWxvZy4gVXNlZCB0byBzZXQgdGhlIGBhcmlhLW1vZGFsYCBhdHRyaWJ1dGUuICovXG4gIG1vZGFsPzogYm9vbGVhbjtcblxuICAvKiogU2Nyb2xsIHN0cmF0ZWd5IHRvIGJlIHVzZWQgZm9yIHRoZSBkaWFsb2cuIFRoaXMgZGV0ZXJtaW5lcyBob3cgdGhlIGRpYWxvZyByZXNwb25kcyB0byBzY3JvbGxpbmcgdW5kZXJuZWF0aCB0aGUgcGFuZWwgZWxlbWVudC4gKi9cbiAgc2Nyb2xsU3RyYXRlZ3k/OiBTY3JvbGxTdHJhdGVneTtcblxuICAvKipcbiAgICogV2hldGhlciB0aGUgZGlhbG9nIHNob3VsZCBjbG9zZSB3aGVuIHRoZSB1c2VyIG5hdmlnYXRlcyBiYWNrd2FyZHMgb3IgZm9yd2FyZHMgdGhyb3VnaCBicm93c2VyXG4gICAqIGhpc3RvcnkuXG4gICAqL1xuICBjbG9zZU9uTmF2aWdhdGlvbj86IGJvb2xlYW47XG5cbiAgZGF0YT86IFQ7XG59XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0RGlhbG9nQ29uZmlnOiBOZ3BEaWFsb2dDb25maWcgPSB7XG4gIHJvbGU6ICdkaWFsb2cnLFxuICBtb2RhbDogdHJ1ZSxcbiAgY2xvc2VPbk5hdmlnYXRpb246IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgTmdwRGlhbG9nQ29uZmlnVG9rZW4gPSBuZXcgSW5qZWN0aW9uVG9rZW48TmdwRGlhbG9nQ29uZmlnPignTmdwRGlhbG9nQ29uZmlnVG9rZW4nKTtcblxuLyoqXG4gKiBQcm92aWRlIHRoZSBkZWZhdWx0IERpYWxvZyBjb25maWd1cmF0aW9uXG4gKiBAcGFyYW0gY29uZmlnIFRoZSBEaWFsb2cgY29uZmlndXJhdGlvblxuICogQHJldHVybnMgVGhlIHByb3ZpZGVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlRGlhbG9nQ29uZmlnKGNvbmZpZzogUGFydGlhbDxOZ3BEaWFsb2dDb25maWc+KTogUHJvdmlkZXJbXSB7XG4gIHJldHVybiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogTmdwRGlhbG9nQ29uZmlnVG9rZW4sXG4gICAgICB1c2VWYWx1ZTogeyAuLi5kZWZhdWx0RGlhbG9nQ29uZmlnLCAuLi5jb25maWcgfSxcbiAgICB9LFxuICBdO1xufVxuXG4vKipcbiAqIEluamVjdCB0aGUgRGlhbG9nIGNvbmZpZ3VyYXRpb25cbiAqIEByZXR1cm5zIFRoZSBnbG9iYWwgRGlhbG9nIGNvbmZpZ3VyYXRpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluamVjdERpYWxvZ0NvbmZpZygpOiBOZ3BEaWFsb2dDb25maWcge1xuICByZXR1cm4gaW5qZWN0KE5ncERpYWxvZ0NvbmZpZ1Rva2VuLCB7IG9wdGlvbmFsOiB0cnVlIH0pID8/IGRlZmF1bHREaWFsb2dDb25maWc7XG59XG4iXX0=