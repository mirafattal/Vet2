/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Directive, effect, input } from '@angular/core';
import { uniqueId } from 'ng-primitives/utils';
import { injectFormField } from '../form-field/form-field.token';
import { NgpDescriptionToken } from './description.token';
import * as i0 from "@angular/core";
export class NgpDescription {
    constructor() {
        /**
         * Access the form field that the description is associated with.
         */
        this.formField = injectFormField();
        /**
         * The id of the description. If not provided, a unique id will be generated.
         */
        this.id = input(uniqueId('ngp-description'));
        effect(onCleanup => {
            this.formField?.addDescription(this.id());
            onCleanup(() => this.formField?.removeDescription(this.id()));
        }, { allowSignalWrites: true });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpDescription, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.13", type: NgpDescription, isStandalone: true, selector: "[ngpDescription]", inputs: { id: { classPropertyName: "id", publicName: "id", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "attr.id": "id()", "attr.data-invalid": "formField?.invalid() ? \"\" : null", "attr.data-valid": "formField?.valid() ? \"\" : null", "attr.data-touched": "formField?.touched() ? \"\" : null", "attr.data-pristine": "formField?.pristine() ? \"\" : null", "attr.data-dirty": "formField?.dirty() ? \"\" : null", "attr.data-pending": "formField?.pending() ? \"\" : null", "attr.data-disabled": "formField?.disabled() ? \"\" : null" } }, providers: [{ provide: NgpDescriptionToken, useExisting: NgpDescription }], exportAs: ["ngpDescription"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpDescription, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpDescription]',
                    exportAs: 'ngpDescription',
                    providers: [{ provide: NgpDescriptionToken, useExisting: NgpDescription }],
                    host: {
                        '[attr.id]': 'id()',
                        '[attr.data-invalid]': 'formField?.invalid() ? "" : null',
                        '[attr.data-valid]': 'formField?.valid() ? "" : null',
                        '[attr.data-touched]': 'formField?.touched() ? "" : null',
                        '[attr.data-pristine]': 'formField?.pristine() ? "" : null',
                        '[attr.data-dirty]': 'formField?.dirty() ? "" : null',
                        '[attr.data-pending]': 'formField?.pending() ? "" : null',
                        '[attr.data-disabled]': 'formField?.disabled() ? "" : null',
                    },
                }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzY3JpcHRpb24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmctcHJpbWl0aXZlcy9mb3JtLWZpZWxkL3NyYy9kZXNjcmlwdGlvbi9kZXNjcmlwdGlvbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDakUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7O0FBa0IxRCxNQUFNLE9BQU8sY0FBYztJQVd6QjtRQVZBOztXQUVHO1FBQ2dCLGNBQVMsR0FBRyxlQUFlLEVBQUUsQ0FBQztRQUVqRDs7V0FFRztRQUNNLE9BQUUsR0FBRyxLQUFLLENBQVMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztRQUd2RCxNQUFNLENBQ0osU0FBUyxDQUFDLEVBQUU7WUFDVixJQUFJLENBQUMsU0FBUyxFQUFFLGNBQWMsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUMxQyxTQUFTLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLENBQUMsRUFDRCxFQUFFLGlCQUFpQixFQUFFLElBQUksRUFBRSxDQUM1QixDQUFDO0lBQ0osQ0FBQzsrR0FuQlUsY0FBYzttR0FBZCxjQUFjLGdvQkFaZCxDQUFDLEVBQUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxjQUFjLEVBQUUsQ0FBQzs7NEZBWS9ELGNBQWM7a0JBaEIxQixTQUFTO21CQUFDO29CQUNULFVBQVUsRUFBRSxJQUFJO29CQUNoQixRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxXQUFXLGdCQUFnQixFQUFFLENBQUM7b0JBQzFFLElBQUksRUFBRTt3QkFDSixXQUFXLEVBQUUsTUFBTTt3QkFDbkIscUJBQXFCLEVBQUUsa0NBQWtDO3dCQUN6RCxtQkFBbUIsRUFBRSxnQ0FBZ0M7d0JBQ3JELHFCQUFxQixFQUFFLGtDQUFrQzt3QkFDekQsc0JBQXNCLEVBQUUsbUNBQW1DO3dCQUMzRCxtQkFBbUIsRUFBRSxnQ0FBZ0M7d0JBQ3JELHFCQUFxQixFQUFFLGtDQUFrQzt3QkFDekQsc0JBQXNCLEVBQUUsbUNBQW1DO3FCQUM1RDtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IMKpIDIwMjQgQW5ndWxhciBQcmltaXRpdmVzLlxuICogaHR0cHM6Ly9naXRodWIuY29tL25nLXByaW1pdGl2ZXMvbmctcHJpbWl0aXZlc1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSAyLjAgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBlZmZlY3QsIGlucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyB1bmlxdWVJZCB9IGZyb20gJ25nLXByaW1pdGl2ZXMvdXRpbHMnO1xuaW1wb3J0IHsgaW5qZWN0Rm9ybUZpZWxkIH0gZnJvbSAnLi4vZm9ybS1maWVsZC9mb3JtLWZpZWxkLnRva2VuJztcbmltcG9ydCB7IE5ncERlc2NyaXB0aW9uVG9rZW4gfSBmcm9tICcuL2Rlc2NyaXB0aW9uLnRva2VuJztcblxuQERpcmVjdGl2ZSh7XG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIHNlbGVjdG9yOiAnW25ncERlc2NyaXB0aW9uXScsXG4gIGV4cG9ydEFzOiAnbmdwRGVzY3JpcHRpb24nLFxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IE5ncERlc2NyaXB0aW9uVG9rZW4sIHVzZUV4aXN0aW5nOiBOZ3BEZXNjcmlwdGlvbiB9XSxcbiAgaG9zdDoge1xuICAgICdbYXR0ci5pZF0nOiAnaWQoKScsXG4gICAgJ1thdHRyLmRhdGEtaW52YWxpZF0nOiAnZm9ybUZpZWxkPy5pbnZhbGlkKCkgPyBcIlwiIDogbnVsbCcsXG4gICAgJ1thdHRyLmRhdGEtdmFsaWRdJzogJ2Zvcm1GaWVsZD8udmFsaWQoKSA/IFwiXCIgOiBudWxsJyxcbiAgICAnW2F0dHIuZGF0YS10b3VjaGVkXSc6ICdmb3JtRmllbGQ/LnRvdWNoZWQoKSA/IFwiXCIgOiBudWxsJyxcbiAgICAnW2F0dHIuZGF0YS1wcmlzdGluZV0nOiAnZm9ybUZpZWxkPy5wcmlzdGluZSgpID8gXCJcIiA6IG51bGwnLFxuICAgICdbYXR0ci5kYXRhLWRpcnR5XSc6ICdmb3JtRmllbGQ/LmRpcnR5KCkgPyBcIlwiIDogbnVsbCcsXG4gICAgJ1thdHRyLmRhdGEtcGVuZGluZ10nOiAnZm9ybUZpZWxkPy5wZW5kaW5nKCkgPyBcIlwiIDogbnVsbCcsXG4gICAgJ1thdHRyLmRhdGEtZGlzYWJsZWRdJzogJ2Zvcm1GaWVsZD8uZGlzYWJsZWQoKSA/IFwiXCIgOiBudWxsJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTmdwRGVzY3JpcHRpb24ge1xuICAvKipcbiAgICogQWNjZXNzIHRoZSBmb3JtIGZpZWxkIHRoYXQgdGhlIGRlc2NyaXB0aW9uIGlzIGFzc29jaWF0ZWQgd2l0aC5cbiAgICovXG4gIHByb3RlY3RlZCByZWFkb25seSBmb3JtRmllbGQgPSBpbmplY3RGb3JtRmllbGQoKTtcblxuICAvKipcbiAgICogVGhlIGlkIG9mIHRoZSBkZXNjcmlwdGlvbi4gSWYgbm90IHByb3ZpZGVkLCBhIHVuaXF1ZSBpZCB3aWxsIGJlIGdlbmVyYXRlZC5cbiAgICovXG4gIHJlYWRvbmx5IGlkID0gaW5wdXQ8c3RyaW5nPih1bmlxdWVJZCgnbmdwLWRlc2NyaXB0aW9uJykpO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGVmZmVjdChcbiAgICAgIG9uQ2xlYW51cCA9PiB7XG4gICAgICAgIHRoaXMuZm9ybUZpZWxkPy5hZGREZXNjcmlwdGlvbih0aGlzLmlkKCkpO1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gdGhpcy5mb3JtRmllbGQ/LnJlbW92ZURlc2NyaXB0aW9uKHRoaXMuaWQoKSkpO1xuICAgICAgfSxcbiAgICAgIHsgYWxsb3dTaWduYWxXcml0ZXM6IHRydWUgfSxcbiAgICApO1xuICB9XG59XG4iXX0=