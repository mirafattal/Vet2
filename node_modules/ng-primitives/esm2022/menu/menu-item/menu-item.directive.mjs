import { CdkMenuItem } from '@angular/cdk/menu';
import { booleanAttribute, Directive, input } from '@angular/core';
import { NgpFocusVisible, NgpHover, NgpPress } from 'ng-primitives/interactions';
import { NgpMenuItemToken } from './menu-item.token';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/menu";
import * as i2 from "ng-primitives/interactions";
export class NgpMenuItem {
    constructor() {
        /**
         * Whether the menu item is disabled.
         */
        this.disabled = input(false, {
            alias: 'ngpMenuItemDisabled',
            transform: booleanAttribute,
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpMenuItem, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.13", type: NgpMenuItem, isStandalone: true, selector: "[ngpMenuItem]", inputs: { disabled: { classPropertyName: "disabled", publicName: "ngpMenuItemDisabled", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "attr.data-disabled": "disabled() ? \"\" : null" } }, providers: [{ provide: NgpMenuItemToken, useExisting: NgpMenuItem }], exportAs: ["ngpMenuItem"], hostDirectives: [{ directive: i1.CdkMenuItem, inputs: ["cdkMenuItemDisabled", "ngpMenuItemDisabled"] }, { directive: i2.NgpFocusVisible }, { directive: i2.NgpHover }, { directive: i2.NgpPress }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpMenuItem, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpMenuItem]',
                    exportAs: 'ngpMenuItem',
                    providers: [{ provide: NgpMenuItemToken, useExisting: NgpMenuItem }],
                    hostDirectives: [
                        { directive: CdkMenuItem, inputs: ['cdkMenuItemDisabled:ngpMenuItemDisabled'] },
                        NgpFocusVisible,
                        NgpHover,
                        NgpPress,
                    ],
                    host: {
                        '[attr.data-disabled]': 'disabled() ? "" : null',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1pdGVtLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nLXByaW1pdGl2ZXMvbWVudS9zcmMvbWVudS1pdGVtL21lbnUtaXRlbS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ2pGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7O0FBaUJyRCxNQUFNLE9BQU8sV0FBVztJQWZ4QjtRQWdCRTs7V0FFRztRQUNNLGFBQVEsR0FBRyxLQUFLLENBQXdCLEtBQUssRUFBRTtZQUN0RCxLQUFLLEVBQUUscUJBQXFCO1lBQzVCLFNBQVMsRUFBRSxnQkFBZ0I7U0FDNUIsQ0FBQyxDQUFDO0tBQ0o7K0dBUlksV0FBVzttR0FBWCxXQUFXLGdTQVhYLENBQUMsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxDQUFDOzs0RkFXekQsV0FBVztrQkFmdkIsU0FBUzttQkFBQztvQkFDVCxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsUUFBUSxFQUFFLGVBQWU7b0JBQ3pCLFFBQVEsRUFBRSxhQUFhO29CQUN2QixTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLGFBQWEsRUFBRSxDQUFDO29CQUNwRSxjQUFjLEVBQUU7d0JBQ2QsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxDQUFDLHlDQUF5QyxDQUFDLEVBQUU7d0JBQy9FLGVBQWU7d0JBQ2YsUUFBUTt3QkFDUixRQUFRO3FCQUNUO29CQUNELElBQUksRUFBRTt3QkFDSixzQkFBc0IsRUFBRSx3QkFBd0I7cUJBQ2pEO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgwqkgMjAyNCBBbmd1bGFyIFByaW1pdGl2ZXMuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbmctcHJpbWl0aXZlcy9uZy1wcmltaXRpdmVzXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIDIuMCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5pbXBvcnQgeyBCb29sZWFuSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xuaW1wb3J0IHsgQ2RrTWVudUl0ZW0gfSBmcm9tICdAYW5ndWxhci9jZGsvbWVudSc7XG5pbXBvcnQgeyBib29sZWFuQXR0cmlidXRlLCBEaXJlY3RpdmUsIGlucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3BGb2N1c1Zpc2libGUsIE5ncEhvdmVyLCBOZ3BQcmVzcyB9IGZyb20gJ25nLXByaW1pdGl2ZXMvaW50ZXJhY3Rpb25zJztcbmltcG9ydCB7IE5ncE1lbnVJdGVtVG9rZW4gfSBmcm9tICcuL21lbnUtaXRlbS50b2tlbic7XG5cbkBEaXJlY3RpdmUoe1xuICBzdGFuZGFsb25lOiB0cnVlLFxuICBzZWxlY3RvcjogJ1tuZ3BNZW51SXRlbV0nLFxuICBleHBvcnRBczogJ25ncE1lbnVJdGVtJyxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBOZ3BNZW51SXRlbVRva2VuLCB1c2VFeGlzdGluZzogTmdwTWVudUl0ZW0gfV0sXG4gIGhvc3REaXJlY3RpdmVzOiBbXG4gICAgeyBkaXJlY3RpdmU6IENka01lbnVJdGVtLCBpbnB1dHM6IFsnY2RrTWVudUl0ZW1EaXNhYmxlZDpuZ3BNZW51SXRlbURpc2FibGVkJ10gfSxcbiAgICBOZ3BGb2N1c1Zpc2libGUsXG4gICAgTmdwSG92ZXIsXG4gICAgTmdwUHJlc3MsXG4gIF0sXG4gIGhvc3Q6IHtcbiAgICAnW2F0dHIuZGF0YS1kaXNhYmxlZF0nOiAnZGlzYWJsZWQoKSA/IFwiXCIgOiBudWxsJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTmdwTWVudUl0ZW0ge1xuICAvKipcbiAgICogV2hldGhlciB0aGUgbWVudSBpdGVtIGlzIGRpc2FibGVkLlxuICAgKi9cbiAgcmVhZG9ubHkgZGlzYWJsZWQgPSBpbnB1dDxib29sZWFuLCBCb29sZWFuSW5wdXQ+KGZhbHNlLCB7XG4gICAgYWxpYXM6ICduZ3BNZW51SXRlbURpc2FibGVkJyxcbiAgICB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUsXG4gIH0pO1xufVxuIl19