import { Directive, booleanAttribute, input, model } from '@angular/core';
import { NgpFormControl } from 'ng-primitives/form-field';
import { NgpDisabledToken } from 'ng-primitives/internal';
import { NgpRovingFocusGroup } from 'ng-primitives/roving-focus';
import { NgpRadioGroupToken } from './radio-group.token';
import * as i0 from "@angular/core";
import * as i1 from "ng-primitives/roving-focus";
import * as i2 from "ng-primitives/form-field";
export class NgpRadioGroup {
    constructor() {
        /**
         * The value of the radio group.
         */
        this.value = model(null, { alias: 'ngpRadioGroupValue' });
        /**
         * Whether the radio group is disabled.
         */
        this.disabled = input(false, {
            alias: 'ngpRadioGroupDisabled',
            transform: booleanAttribute,
        });
        /**
         * The orientation of the radio group.
         * @default 'horizontal'
         */
        this.orientation = input('horizontal', {
            alias: 'ngpRadioGroupOrientation',
        });
    }
    /**
     * Select a radio item.
     * @param value The value of the radio item to select.
     */
    select(value) {
        this.value.set(value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpRadioGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.13", type: NgpRadioGroup, isStandalone: true, selector: "[ngpRadioGroup]", inputs: { value: { classPropertyName: "value", publicName: "ngpRadioGroupValue", isSignal: true, isRequired: false, transformFunction: null }, disabled: { classPropertyName: "disabled", publicName: "ngpRadioGroupDisabled", isSignal: true, isRequired: false, transformFunction: null }, orientation: { classPropertyName: "orientation", publicName: "ngpRadioGroupOrientation", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { value: "ngpRadioGroupValueChange" }, host: { attributes: { "role": "radiogroup" }, properties: { "attr.aria-orientation": "orientation()", "attr.data-orientation": "orientation()" } }, providers: [
            { provide: NgpRadioGroupToken, useExisting: NgpRadioGroup },
            { provide: NgpDisabledToken, useExisting: NgpRadioGroup },
        ], hostDirectives: [{ directive: i1.NgpRovingFocusGroup }, { directive: i2.NgpFormControl }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpRadioGroup, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngpRadioGroup]',
                    standalone: true,
                    providers: [
                        { provide: NgpRadioGroupToken, useExisting: NgpRadioGroup },
                        { provide: NgpDisabledToken, useExisting: NgpRadioGroup },
                    ],
                    hostDirectives: [NgpRovingFocusGroup, NgpFormControl],
                    host: {
                        role: 'radiogroup',
                        '[attr.aria-orientation]': 'orientation()',
                        '[attr.data-orientation]': 'orientation()',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tZ3JvdXAuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmctcHJpbWl0aXZlcy9yYWRpby9zcmMvcmFkaW8tZ3JvdXAvcmFkaW8tZ3JvdXAuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDMUQsT0FBTyxFQUFpQixnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7O0FBZ0J6RCxNQUFNLE9BQU8sYUFBYTtJQWQxQjtRQWVFOztXQUVHO1FBQ00sVUFBSyxHQUFHLEtBQUssQ0FBZ0IsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLG9CQUFvQixFQUFFLENBQUMsQ0FBQztRQUU3RTs7V0FFRztRQUNNLGFBQVEsR0FBRyxLQUFLLENBQXdCLEtBQUssRUFBRTtZQUN0RCxLQUFLLEVBQUUsdUJBQXVCO1lBQzlCLFNBQVMsRUFBRSxnQkFBZ0I7U0FDNUIsQ0FBQyxDQUFDO1FBRUg7OztXQUdHO1FBQ00sZ0JBQVcsR0FBRyxLQUFLLENBQTRCLFlBQVksRUFBRTtZQUNwRSxLQUFLLEVBQUUsMEJBQTBCO1NBQ2xDLENBQUMsQ0FBQztLQVNKO0lBUEM7OztPQUdHO0lBQ0gsTUFBTSxDQUFDLEtBQWE7UUFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEIsQ0FBQzsrR0E1QlUsYUFBYTttR0FBYixhQUFhLHdyQkFYYjtZQUNULEVBQUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUU7WUFDM0QsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLGFBQWEsRUFBRTtTQUMxRDs7NEZBUVUsYUFBYTtrQkFkekIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixVQUFVLEVBQUUsSUFBSTtvQkFDaEIsU0FBUyxFQUFFO3dCQUNULEVBQUUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFdBQVcsZUFBZSxFQUFFO3dCQUMzRCxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxXQUFXLGVBQWUsRUFBRTtxQkFDMUQ7b0JBQ0QsY0FBYyxFQUFFLENBQUMsbUJBQW1CLEVBQUUsY0FBYyxDQUFDO29CQUNyRCxJQUFJLEVBQUU7d0JBQ0osSUFBSSxFQUFFLFlBQVk7d0JBQ2xCLHlCQUF5QixFQUFFLGVBQWU7d0JBQzFDLHlCQUF5QixFQUFFLGVBQWU7cUJBQzNDO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgwqkgMjAyNCBBbmd1bGFyIFByaW1pdGl2ZXMuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbmctcHJpbWl0aXZlcy9uZy1wcmltaXRpdmVzXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIDIuMCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5pbXBvcnQgeyBCb29sZWFuSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jZGsvY29lcmNpb24nO1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBib29sZWFuQXR0cmlidXRlLCBpbnB1dCwgbW9kZWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5ncEZvcm1Db250cm9sIH0gZnJvbSAnbmctcHJpbWl0aXZlcy9mb3JtLWZpZWxkJztcbmltcG9ydCB7IE5ncENhbkRpc2FibGUsIE5ncERpc2FibGVkVG9rZW4gfSBmcm9tICduZy1wcmltaXRpdmVzL2ludGVybmFsJztcbmltcG9ydCB7IE5ncFJvdmluZ0ZvY3VzR3JvdXAgfSBmcm9tICduZy1wcmltaXRpdmVzL3JvdmluZy1mb2N1cyc7XG5pbXBvcnQgeyBOZ3BSYWRpb0dyb3VwVG9rZW4gfSBmcm9tICcuL3JhZGlvLWdyb3VwLnRva2VuJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW25ncFJhZGlvR3JvdXBdJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgeyBwcm92aWRlOiBOZ3BSYWRpb0dyb3VwVG9rZW4sIHVzZUV4aXN0aW5nOiBOZ3BSYWRpb0dyb3VwIH0sXG4gICAgeyBwcm92aWRlOiBOZ3BEaXNhYmxlZFRva2VuLCB1c2VFeGlzdGluZzogTmdwUmFkaW9Hcm91cCB9LFxuICBdLFxuICBob3N0RGlyZWN0aXZlczogW05ncFJvdmluZ0ZvY3VzR3JvdXAsIE5ncEZvcm1Db250cm9sXSxcbiAgaG9zdDoge1xuICAgIHJvbGU6ICdyYWRpb2dyb3VwJyxcbiAgICAnW2F0dHIuYXJpYS1vcmllbnRhdGlvbl0nOiAnb3JpZW50YXRpb24oKScsXG4gICAgJ1thdHRyLmRhdGEtb3JpZW50YXRpb25dJzogJ29yaWVudGF0aW9uKCknLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBOZ3BSYWRpb0dyb3VwIGltcGxlbWVudHMgTmdwQ2FuRGlzYWJsZSB7XG4gIC8qKlxuICAgKiBUaGUgdmFsdWUgb2YgdGhlIHJhZGlvIGdyb3VwLlxuICAgKi9cbiAgcmVhZG9ubHkgdmFsdWUgPSBtb2RlbDxzdHJpbmcgfCBudWxsPihudWxsLCB7IGFsaWFzOiAnbmdwUmFkaW9Hcm91cFZhbHVlJyB9KTtcblxuICAvKipcbiAgICogV2hldGhlciB0aGUgcmFkaW8gZ3JvdXAgaXMgZGlzYWJsZWQuXG4gICAqL1xuICByZWFkb25seSBkaXNhYmxlZCA9IGlucHV0PGJvb2xlYW4sIEJvb2xlYW5JbnB1dD4oZmFsc2UsIHtcbiAgICBhbGlhczogJ25ncFJhZGlvR3JvdXBEaXNhYmxlZCcsXG4gICAgdHJhbnNmb3JtOiBib29sZWFuQXR0cmlidXRlLFxuICB9KTtcblxuICAvKipcbiAgICogVGhlIG9yaWVudGF0aW9uIG9mIHRoZSByYWRpbyBncm91cC5cbiAgICogQGRlZmF1bHQgJ2hvcml6b250YWwnXG4gICAqL1xuICByZWFkb25seSBvcmllbnRhdGlvbiA9IGlucHV0PCdob3Jpem9udGFsJyB8ICd2ZXJ0aWNhbCc+KCdob3Jpem9udGFsJywge1xuICAgIGFsaWFzOiAnbmdwUmFkaW9Hcm91cE9yaWVudGF0aW9uJyxcbiAgfSk7XG5cbiAgLyoqXG4gICAqIFNlbGVjdCBhIHJhZGlvIGl0ZW0uXG4gICAqIEBwYXJhbSB2YWx1ZSBUaGUgdmFsdWUgb2YgdGhlIHJhZGlvIGl0ZW0gdG8gc2VsZWN0LlxuICAgKi9cbiAgc2VsZWN0KHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLnZhbHVlLnNldCh2YWx1ZSk7XG4gIH1cbn1cbiJdfQ==