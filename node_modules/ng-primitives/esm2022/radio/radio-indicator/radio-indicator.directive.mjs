/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Directive, computed } from '@angular/core';
import { NgpHover, NgpPress } from 'ng-primitives/interactions';
import { injectRadioGroup } from '../radio-group/radio-group.token';
import { injectRadioItem } from '../radio-item/radio-item.token';
import * as i0 from "@angular/core";
import * as i1 from "ng-primitives/interactions";
export class NgpRadioIndicator {
    constructor() {
        /**
         * Access the radio group.
         */
        this.radioGroup = injectRadioGroup();
        /**
         * Access the radio group item.
         */
        this.radioItem = injectRadioItem();
        /**
         * Determine if the radio indicator is checked.
         */
        this.checked = computed(() => this.radioGroup.value() === this.radioItem.value());
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpRadioIndicator, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.13", type: NgpRadioIndicator, isStandalone: true, selector: "[ngpRadioIndicator]", host: { properties: { "attr.data-checked": "checked() ? \"\" : null", "attr.data-disabled": "radioItem.disabled() ? \"\" : null" } }, hostDirectives: [{ directive: i1.NgpHover }, { directive: i1.NgpPress }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpRadioIndicator, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngpRadioIndicator]',
                    standalone: true,
                    host: {
                        '[attr.data-checked]': 'checked() ? "" : null',
                        '[attr.data-disabled]': 'radioItem.disabled() ? "" : null',
                    },
                    hostDirectives: [NgpHover, NgpPress],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8taW5kaWNhdG9yLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nLXByaW1pdGl2ZXMvcmFkaW8vc3JjL3JhZGlvLWluZGljYXRvci9yYWRpby1pbmRpY2F0b3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDcEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOzs7QUFXakUsTUFBTSxPQUFPLGlCQUFpQjtJQVQ5QjtRQVVFOztXQUVHO1FBQ2dCLGVBQVUsR0FBRyxnQkFBZ0IsRUFBRSxDQUFDO1FBRW5EOztXQUVHO1FBQ2dCLGNBQVMsR0FBRyxlQUFlLEVBQUUsQ0FBQztRQUVqRDs7V0FFRztRQUNNLFlBQU8sR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7S0FDdkY7K0dBZlksaUJBQWlCO21HQUFqQixpQkFBaUI7OzRGQUFqQixpQkFBaUI7a0JBVDdCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLElBQUksRUFBRTt3QkFDSixxQkFBcUIsRUFBRSx1QkFBdUI7d0JBQzlDLHNCQUFzQixFQUFFLGtDQUFrQztxQkFDM0Q7b0JBQ0QsY0FBYyxFQUFFLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQztpQkFDckMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCDCqSAyMDI0IEFuZ3VsYXIgUHJpbWl0aXZlcy5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9uZy1wcmltaXRpdmVzL25nLXByaW1pdGl2ZXNcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgMi4wIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmltcG9ydCB7IERpcmVjdGl2ZSwgY29tcHV0ZWQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5ncEhvdmVyLCBOZ3BQcmVzcyB9IGZyb20gJ25nLXByaW1pdGl2ZXMvaW50ZXJhY3Rpb25zJztcbmltcG9ydCB7IGluamVjdFJhZGlvR3JvdXAgfSBmcm9tICcuLi9yYWRpby1ncm91cC9yYWRpby1ncm91cC50b2tlbic7XG5pbXBvcnQgeyBpbmplY3RSYWRpb0l0ZW0gfSBmcm9tICcuLi9yYWRpby1pdGVtL3JhZGlvLWl0ZW0udG9rZW4nO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbmdwUmFkaW9JbmRpY2F0b3JdJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaG9zdDoge1xuICAgICdbYXR0ci5kYXRhLWNoZWNrZWRdJzogJ2NoZWNrZWQoKSA/IFwiXCIgOiBudWxsJyxcbiAgICAnW2F0dHIuZGF0YS1kaXNhYmxlZF0nOiAncmFkaW9JdGVtLmRpc2FibGVkKCkgPyBcIlwiIDogbnVsbCcsXG4gIH0sXG4gIGhvc3REaXJlY3RpdmVzOiBbTmdwSG92ZXIsIE5ncFByZXNzXSxcbn0pXG5leHBvcnQgY2xhc3MgTmdwUmFkaW9JbmRpY2F0b3Ige1xuICAvKipcbiAgICogQWNjZXNzIHRoZSByYWRpbyBncm91cC5cbiAgICovXG4gIHByb3RlY3RlZCByZWFkb25seSByYWRpb0dyb3VwID0gaW5qZWN0UmFkaW9Hcm91cCgpO1xuXG4gIC8qKlxuICAgKiBBY2Nlc3MgdGhlIHJhZGlvIGdyb3VwIGl0ZW0uXG4gICAqL1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgcmFkaW9JdGVtID0gaW5qZWN0UmFkaW9JdGVtKCk7XG5cbiAgLyoqXG4gICAqIERldGVybWluZSBpZiB0aGUgcmFkaW8gaW5kaWNhdG9yIGlzIGNoZWNrZWQuXG4gICAqL1xuICByZWFkb25seSBjaGVja2VkID0gY29tcHV0ZWQoKCkgPT4gdGhpcy5yYWRpb0dyb3VwLnZhbHVlKCkgPT09IHRoaXMucmFkaW9JdGVtLnZhbHVlKCkpO1xufVxuIl19