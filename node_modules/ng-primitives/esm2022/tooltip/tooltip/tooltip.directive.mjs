/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { isPlatformBrowser } from '@angular/common';
import { Directive, ElementRef, PLATFORM_ID, computed, inject, isDevMode, } from '@angular/core';
import { injectTooltipTrigger } from '../tooltip-trigger/tooltip-trigger.token';
import { NgpTooltipToken } from './tooltip.token';
import * as i0 from "@angular/core";
export class NgpTooltip {
    constructor() {
        /**
         * Access the tooltip element.
         */
        this.tooltip = inject((ElementRef));
        /**
         * Access the platform.
         */
        this.platform = inject(PLATFORM_ID);
        /**
         * Access the trigger instance.
         */
        this.trigger = injectTooltipTrigger();
        /**
         * Compute the x position of the tooltip.
         */
        this.x = computed(() => this.trigger.position().x);
        /**
         * Compute the y position of the tooltip.
         */
        this.y = computed(() => this.trigger.position().y);
    }
    ngOnInit() {
        // if the element does not have a fixed position then throw a warning in dev mode
        if (isDevMode() && isPlatformBrowser(this.platform)) {
            const { position } = getComputedStyle(this.tooltip.nativeElement);
            if (position !== 'absolute') {
                console.warn(`The tooltip element must have an absolute position. The current position is ${position}.`);
            }
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpTooltip, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.13", type: NgpTooltip, isStandalone: true, selector: "[ngpTooltip]", host: { attributes: { "role": "tooltip" }, properties: { "style.left.px": "x()", "style.top.px": "y()" } }, providers: [{ provide: NgpTooltipToken, useExisting: NgpTooltip }], exportAs: ["ngpTooltip"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpTooltip, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpTooltip]',
                    exportAs: 'ngpTooltip',
                    providers: [{ provide: NgpTooltipToken, useExisting: NgpTooltip }],
                    host: {
                        role: 'tooltip',
                        '[style.left.px]': 'x()',
                        '[style.top.px]': 'y()',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy1wcmltaXRpdmVzL3Rvb2x0aXAvc3JjL3Rvb2x0aXAvdG9vbHRpcC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDcEQsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBRVYsV0FBVyxFQUNYLFFBQVEsRUFDUixNQUFNLEVBQ04sU0FBUyxHQUNWLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7QUFhbEQsTUFBTSxPQUFPLFVBQVU7SUFYdkI7UUFZRTs7V0FFRztRQUNjLFlBQU8sR0FBRyxNQUFNLENBQUMsQ0FBQSxVQUF1QixDQUFBLENBQUMsQ0FBQztRQUUzRDs7V0FFRztRQUNjLGFBQVEsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFaEQ7O1dBRUc7UUFDYyxZQUFPLEdBQUcsb0JBQW9CLEVBQUUsQ0FBQztRQUVsRDs7V0FFRztRQUNnQixNQUFDLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFakU7O1dBRUc7UUFDZ0IsTUFBQyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBY2xFO0lBWkMsUUFBUTtRQUNOLGlGQUFpRjtRQUNqRixJQUFJLFNBQVMsRUFBRSxJQUFJLGlCQUFpQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO1lBQ3BELE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBRWxFLElBQUksUUFBUSxLQUFLLFVBQVUsRUFBRSxDQUFDO2dCQUM1QixPQUFPLENBQUMsSUFBSSxDQUNWLCtFQUErRSxRQUFRLEdBQUcsQ0FDM0YsQ0FBQztZQUNKLENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQzsrR0FyQ1UsVUFBVTttR0FBVixVQUFVLHVLQVBWLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsQ0FBQzs7NEZBT3ZELFVBQVU7a0JBWHRCLFNBQVM7bUJBQUM7b0JBQ1QsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFFBQVEsRUFBRSxjQUFjO29CQUN4QixRQUFRLEVBQUUsWUFBWTtvQkFDdEIsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFdBQVcsWUFBWSxFQUFFLENBQUM7b0JBQ2xFLElBQUksRUFBRTt3QkFDSixJQUFJLEVBQUUsU0FBUzt3QkFDZixpQkFBaUIsRUFBRSxLQUFLO3dCQUN4QixnQkFBZ0IsRUFBRSxLQUFLO3FCQUN4QjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IMKpIDIwMjQgQW5ndWxhciBQcmltaXRpdmVzLlxuICogaHR0cHM6Ly9naXRodWIuY29tL25nLXByaW1pdGl2ZXMvbmctcHJpbWl0aXZlc1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSAyLjAgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuaW1wb3J0IHsgaXNQbGF0Zm9ybUJyb3dzZXIgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtcbiAgRGlyZWN0aXZlLFxuICBFbGVtZW50UmVmLFxuICBPbkluaXQsXG4gIFBMQVRGT1JNX0lELFxuICBjb21wdXRlZCxcbiAgaW5qZWN0LFxuICBpc0Rldk1vZGUsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaW5qZWN0VG9vbHRpcFRyaWdnZXIgfSBmcm9tICcuLi90b29sdGlwLXRyaWdnZXIvdG9vbHRpcC10cmlnZ2VyLnRva2VuJztcbmltcG9ydCB7IE5ncFRvb2x0aXBUb2tlbiB9IGZyb20gJy4vdG9vbHRpcC50b2tlbic7XG5cbkBEaXJlY3RpdmUoe1xuICBzdGFuZGFsb25lOiB0cnVlLFxuICBzZWxlY3RvcjogJ1tuZ3BUb29sdGlwXScsXG4gIGV4cG9ydEFzOiAnbmdwVG9vbHRpcCcsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogTmdwVG9vbHRpcFRva2VuLCB1c2VFeGlzdGluZzogTmdwVG9vbHRpcCB9XSxcbiAgaG9zdDoge1xuICAgIHJvbGU6ICd0b29sdGlwJyxcbiAgICAnW3N0eWxlLmxlZnQucHhdJzogJ3goKScsXG4gICAgJ1tzdHlsZS50b3AucHhdJzogJ3koKScsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIE5ncFRvb2x0aXAgaW1wbGVtZW50cyBPbkluaXQge1xuICAvKipcbiAgICogQWNjZXNzIHRoZSB0b29sdGlwIGVsZW1lbnQuXG4gICAqL1xuICBwcml2YXRlIHJlYWRvbmx5IHRvb2x0aXAgPSBpbmplY3QoRWxlbWVudFJlZjxIVE1MRWxlbWVudD4pO1xuXG4gIC8qKlxuICAgKiBBY2Nlc3MgdGhlIHBsYXRmb3JtLlxuICAgKi9cbiAgcHJpdmF0ZSByZWFkb25seSBwbGF0Zm9ybSA9IGluamVjdChQTEFURk9STV9JRCk7XG5cbiAgLyoqXG4gICAqIEFjY2VzcyB0aGUgdHJpZ2dlciBpbnN0YW5jZS5cbiAgICovXG4gIHByaXZhdGUgcmVhZG9ubHkgdHJpZ2dlciA9IGluamVjdFRvb2x0aXBUcmlnZ2VyKCk7XG5cbiAgLyoqXG4gICAqIENvbXB1dGUgdGhlIHggcG9zaXRpb24gb2YgdGhlIHRvb2x0aXAuXG4gICAqL1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgeCA9IGNvbXB1dGVkKCgpID0+IHRoaXMudHJpZ2dlci5wb3NpdGlvbigpLngpO1xuXG4gIC8qKlxuICAgKiBDb21wdXRlIHRoZSB5IHBvc2l0aW9uIG9mIHRoZSB0b29sdGlwLlxuICAgKi9cbiAgcHJvdGVjdGVkIHJlYWRvbmx5IHkgPSBjb21wdXRlZCgoKSA9PiB0aGlzLnRyaWdnZXIucG9zaXRpb24oKS55KTtcblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAvLyBpZiB0aGUgZWxlbWVudCBkb2VzIG5vdCBoYXZlIGEgZml4ZWQgcG9zaXRpb24gdGhlbiB0aHJvdyBhIHdhcm5pbmcgaW4gZGV2IG1vZGVcbiAgICBpZiAoaXNEZXZNb2RlKCkgJiYgaXNQbGF0Zm9ybUJyb3dzZXIodGhpcy5wbGF0Zm9ybSkpIHtcbiAgICAgIGNvbnN0IHsgcG9zaXRpb24gfSA9IGdldENvbXB1dGVkU3R5bGUodGhpcy50b29sdGlwLm5hdGl2ZUVsZW1lbnQpO1xuXG4gICAgICBpZiAocG9zaXRpb24gIT09ICdhYnNvbHV0ZScpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgIGBUaGUgdG9vbHRpcCBlbGVtZW50IG11c3QgaGF2ZSBhbiBhYnNvbHV0ZSBwb3NpdGlvbi4gVGhlIGN1cnJlbnQgcG9zaXRpb24gaXMgJHtwb3NpdGlvbn0uYCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ==