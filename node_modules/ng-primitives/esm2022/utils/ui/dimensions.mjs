/**
 * Copyright Â© 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { AfterRenderPhase, ElementRef, Renderer2, afterNextRender, inject, signal, } from '@angular/core';
/**
 * Injects the dimensions of the element
 * @returns The dimensions of the element
 */
export function injectDimensions() {
    const renderer = inject(Renderer2);
    const element = inject(ElementRef);
    const size = signal({
        width: 0,
        height: 0,
        mounted: false,
    });
    let transitionDuration, animationName;
    afterNextRender(() => {
        transitionDuration = element.nativeElement.style.transitionDuration;
        animationName = element.nativeElement.style.animationName;
    }, { phase: AfterRenderPhase.EarlyRead });
    afterNextRender(() => {
        // block any animations/transitions so the element renders at its full dimensions
        renderer.setStyle(element.nativeElement, 'transitionDuration', '0s');
        renderer.setStyle(element.nativeElement, 'animationName', 'none');
    }, { phase: AfterRenderPhase.Write });
    afterNextRender(() => {
        const { width, height } = element.nativeElement.getBoundingClientRect();
        size.set({ width, height, mounted: true });
        // restore the original transition duration and animation name
        renderer.setStyle(element.nativeElement, 'transitionDuration', transitionDuration);
        renderer.setStyle(element.nativeElement, 'animationName', animationName);
    }, { phase: AfterRenderPhase.Read });
    return size;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGltZW5zaW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nLXByaW1pdGl2ZXMvdXRpbHMvc3JjL3VpL2RpbWVuc2lvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gsT0FBTyxFQUNMLGdCQUFnQixFQUNoQixVQUFVLEVBQ1YsU0FBUyxFQUNULGVBQWUsRUFDZixNQUFNLEVBQ04sTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDO0FBRXZCOzs7R0FHRztBQUNILE1BQU0sVUFBVSxnQkFBZ0I7SUFDOUIsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ25DLE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBMEIsVUFBVSxDQUFDLENBQUM7SUFDNUQsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFzRDtRQUN2RSxLQUFLLEVBQUUsQ0FBQztRQUNSLE1BQU0sRUFBRSxDQUFDO1FBQ1QsT0FBTyxFQUFFLEtBQUs7S0FDZixDQUFDLENBQUM7SUFDSCxJQUFJLGtCQUFzQyxFQUFFLGFBQWlDLENBQUM7SUFFOUUsZUFBZSxDQUNiLEdBQUcsRUFBRTtRQUNILGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDO1FBQ3BFLGFBQWEsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUM7SUFDNUQsQ0FBQyxFQUNELEVBQUUsS0FBSyxFQUFFLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxDQUN0QyxDQUFDO0lBRUYsZUFBZSxDQUNiLEdBQUcsRUFBRTtRQUNILGlGQUFpRjtRQUNqRixRQUFRLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDckUsUUFBUSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLGVBQWUsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNwRSxDQUFDLEVBQ0QsRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQ2xDLENBQUM7SUFFRixlQUFlLENBQ2IsR0FBRyxFQUFFO1FBQ0gsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDeEUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFFM0MsOERBQThEO1FBQzlELFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxvQkFBb0IsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1FBQ25GLFFBQVEsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxlQUFlLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDM0UsQ0FBQyxFQUNELEVBQUUsS0FBSyxFQUFFLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUNqQyxDQUFDO0lBRUYsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgwqkgMjAyNCBBbmd1bGFyIFByaW1pdGl2ZXMuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbmctcHJpbWl0aXZlcy9uZy1wcmltaXRpdmVzXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIDIuMCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5pbXBvcnQge1xuICBBZnRlclJlbmRlclBoYXNlLFxuICBFbGVtZW50UmVmLFxuICBSZW5kZXJlcjIsXG4gIGFmdGVyTmV4dFJlbmRlcixcbiAgaW5qZWN0LFxuICBzaWduYWwsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEluamVjdHMgdGhlIGRpbWVuc2lvbnMgb2YgdGhlIGVsZW1lbnRcbiAqIEByZXR1cm5zIFRoZSBkaW1lbnNpb25zIG9mIHRoZSBlbGVtZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpbmplY3REaW1lbnNpb25zKCkge1xuICBjb25zdCByZW5kZXJlciA9IGluamVjdChSZW5kZXJlcjIpO1xuICBjb25zdCBlbGVtZW50ID0gaW5qZWN0PEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+PihFbGVtZW50UmVmKTtcbiAgY29uc3Qgc2l6ZSA9IHNpZ25hbDx7IHdpZHRoOiBudW1iZXI7IGhlaWdodDogbnVtYmVyOyBtb3VudGVkOiBib29sZWFuIH0+KHtcbiAgICB3aWR0aDogMCxcbiAgICBoZWlnaHQ6IDAsXG4gICAgbW91bnRlZDogZmFsc2UsXG4gIH0pO1xuICBsZXQgdHJhbnNpdGlvbkR1cmF0aW9uOiBzdHJpbmcgfCB1bmRlZmluZWQsIGFuaW1hdGlvbk5hbWU6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICBhZnRlck5leHRSZW5kZXIoXG4gICAgKCkgPT4ge1xuICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uID0gZWxlbWVudC5uYXRpdmVFbGVtZW50LnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbjtcbiAgICAgIGFuaW1hdGlvbk5hbWUgPSBlbGVtZW50Lm5hdGl2ZUVsZW1lbnQuc3R5bGUuYW5pbWF0aW9uTmFtZTtcbiAgICB9LFxuICAgIHsgcGhhc2U6IEFmdGVyUmVuZGVyUGhhc2UuRWFybHlSZWFkIH0sXG4gICk7XG5cbiAgYWZ0ZXJOZXh0UmVuZGVyKFxuICAgICgpID0+IHtcbiAgICAgIC8vIGJsb2NrIGFueSBhbmltYXRpb25zL3RyYW5zaXRpb25zIHNvIHRoZSBlbGVtZW50IHJlbmRlcnMgYXQgaXRzIGZ1bGwgZGltZW5zaW9uc1xuICAgICAgcmVuZGVyZXIuc2V0U3R5bGUoZWxlbWVudC5uYXRpdmVFbGVtZW50LCAndHJhbnNpdGlvbkR1cmF0aW9uJywgJzBzJyk7XG4gICAgICByZW5kZXJlci5zZXRTdHlsZShlbGVtZW50Lm5hdGl2ZUVsZW1lbnQsICdhbmltYXRpb25OYW1lJywgJ25vbmUnKTtcbiAgICB9LFxuICAgIHsgcGhhc2U6IEFmdGVyUmVuZGVyUGhhc2UuV3JpdGUgfSxcbiAgKTtcblxuICBhZnRlck5leHRSZW5kZXIoXG4gICAgKCkgPT4ge1xuICAgICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0IH0gPSBlbGVtZW50Lm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICBzaXplLnNldCh7IHdpZHRoLCBoZWlnaHQsIG1vdW50ZWQ6IHRydWUgfSk7XG5cbiAgICAgIC8vIHJlc3RvcmUgdGhlIG9yaWdpbmFsIHRyYW5zaXRpb24gZHVyYXRpb24gYW5kIGFuaW1hdGlvbiBuYW1lXG4gICAgICByZW5kZXJlci5zZXRTdHlsZShlbGVtZW50Lm5hdGl2ZUVsZW1lbnQsICd0cmFuc2l0aW9uRHVyYXRpb24nLCB0cmFuc2l0aW9uRHVyYXRpb24pO1xuICAgICAgcmVuZGVyZXIuc2V0U3R5bGUoZWxlbWVudC5uYXRpdmVFbGVtZW50LCAnYW5pbWF0aW9uTmFtZScsIGFuaW1hdGlvbk5hbWUpO1xuICAgIH0sXG4gICAgeyBwaGFzZTogQWZ0ZXJSZW5kZXJQaGFzZS5SZWFkIH0sXG4gICk7XG5cbiAgcmV0dXJuIHNpemU7XG59XG4iXX0=