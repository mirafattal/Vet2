/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Directive, input } from '@angular/core';
import { uniqueId } from 'ng-primitives/utils';
import { injectAccordionItem } from '../accordion-item/accordion-item.token';
import { injectAccordion } from '../accordion/accordion.token';
import { NgpAccordionContentToken } from './accordion-content.token';
import * as i0 from "@angular/core";
export class NgpAccordionContent {
    constructor() {
        /**
         * Access the accordion
         */
        this.accordion = injectAccordion();
        /**
         * Access the accordion item
         */
        this.accordionItem = injectAccordionItem();
        /**
         * The id of the content region
         */
        this.id = input(uniqueId('ngp-accordion-content'));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpAccordionContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.13", type: NgpAccordionContent, isStandalone: true, selector: "[ngpAccordionContent]", inputs: { id: { classPropertyName: "id", publicName: "id", isSignal: true, isRequired: false, transformFunction: null } }, host: { attributes: { "role": "region" }, properties: { "id": "id()", "attr.data-orientation": "accordion.orientation()", "attr.data-open": "accordionItem.open() ? \"\" : null", "attr.aria-labelledby": "accordionItem.triggerId()" } }, providers: [{ provide: NgpAccordionContentToken, useExisting: NgpAccordionContent }], exportAs: ["ngpAccordionContent"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpAccordionContent, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpAccordionContent]',
                    exportAs: 'ngpAccordionContent',
                    providers: [{ provide: NgpAccordionContentToken, useExisting: NgpAccordionContent }],
                    host: {
                        role: 'region',
                        '[id]': 'id()',
                        '[attr.data-orientation]': 'accordion.orientation()',
                        '[attr.data-open]': 'accordionItem.open() ? "" : null',
                        '[attr.aria-labelledby]': 'accordionItem.triggerId()',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLWNvbnRlbnQuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmctcHJpbWl0aXZlcy9hY2NvcmRpb24vc3JjL2FjY29yZGlvbi1jb250ZW50L2FjY29yZGlvbi1jb250ZW50LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFDSCxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDN0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQy9ELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDOztBQWVyRSxNQUFNLE9BQU8sbUJBQW1CO0lBYmhDO1FBY0U7O1dBRUc7UUFDZ0IsY0FBUyxHQUFHLGVBQWUsRUFBRSxDQUFDO1FBRWpEOztXQUVHO1FBQ2dCLGtCQUFhLEdBQUcsbUJBQW1CLEVBQUUsQ0FBQztRQUV6RDs7V0FFRztRQUNNLE9BQUUsR0FBRyxLQUFLLENBQVMsUUFBUSxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FBQztLQUNoRTsrR0FmWSxtQkFBbUI7bUdBQW5CLG1CQUFtQiwwYUFUbkIsQ0FBQyxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQzs7NEZBU3pFLG1CQUFtQjtrQkFiL0IsU0FBUzttQkFBQztvQkFDVCxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsV0FBVyxxQkFBcUIsRUFBRSxDQUFDO29CQUNwRixJQUFJLEVBQUU7d0JBQ0osSUFBSSxFQUFFLFFBQVE7d0JBQ2QsTUFBTSxFQUFFLE1BQU07d0JBQ2QseUJBQXlCLEVBQUUseUJBQXlCO3dCQUNwRCxrQkFBa0IsRUFBRSxrQ0FBa0M7d0JBQ3RELHdCQUF3QixFQUFFLDJCQUEyQjtxQkFDdEQ7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCDCqSAyMDI0IEFuZ3VsYXIgUHJpbWl0aXZlcy5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9uZy1wcmltaXRpdmVzL25nLXByaW1pdGl2ZXNcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgMi4wIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmltcG9ydCB7IERpcmVjdGl2ZSwgaW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHVuaXF1ZUlkIH0gZnJvbSAnbmctcHJpbWl0aXZlcy91dGlscyc7XG5pbXBvcnQgeyBpbmplY3RBY2NvcmRpb25JdGVtIH0gZnJvbSAnLi4vYWNjb3JkaW9uLWl0ZW0vYWNjb3JkaW9uLWl0ZW0udG9rZW4nO1xuaW1wb3J0IHsgaW5qZWN0QWNjb3JkaW9uIH0gZnJvbSAnLi4vYWNjb3JkaW9uL2FjY29yZGlvbi50b2tlbic7XG5pbXBvcnQgeyBOZ3BBY2NvcmRpb25Db250ZW50VG9rZW4gfSBmcm9tICcuL2FjY29yZGlvbi1jb250ZW50LnRva2VuJztcblxuQERpcmVjdGl2ZSh7XG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIHNlbGVjdG9yOiAnW25ncEFjY29yZGlvbkNvbnRlbnRdJyxcbiAgZXhwb3J0QXM6ICduZ3BBY2NvcmRpb25Db250ZW50JyxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBOZ3BBY2NvcmRpb25Db250ZW50VG9rZW4sIHVzZUV4aXN0aW5nOiBOZ3BBY2NvcmRpb25Db250ZW50IH1dLFxuICBob3N0OiB7XG4gICAgcm9sZTogJ3JlZ2lvbicsXG4gICAgJ1tpZF0nOiAnaWQoKScsXG4gICAgJ1thdHRyLmRhdGEtb3JpZW50YXRpb25dJzogJ2FjY29yZGlvbi5vcmllbnRhdGlvbigpJyxcbiAgICAnW2F0dHIuZGF0YS1vcGVuXSc6ICdhY2NvcmRpb25JdGVtLm9wZW4oKSA/IFwiXCIgOiBudWxsJyxcbiAgICAnW2F0dHIuYXJpYS1sYWJlbGxlZGJ5XSc6ICdhY2NvcmRpb25JdGVtLnRyaWdnZXJJZCgpJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTmdwQWNjb3JkaW9uQ29udGVudCB7XG4gIC8qKlxuICAgKiBBY2Nlc3MgdGhlIGFjY29yZGlvblxuICAgKi9cbiAgcHJvdGVjdGVkIHJlYWRvbmx5IGFjY29yZGlvbiA9IGluamVjdEFjY29yZGlvbigpO1xuXG4gIC8qKlxuICAgKiBBY2Nlc3MgdGhlIGFjY29yZGlvbiBpdGVtXG4gICAqL1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgYWNjb3JkaW9uSXRlbSA9IGluamVjdEFjY29yZGlvbkl0ZW0oKTtcblxuICAvKipcbiAgICogVGhlIGlkIG9mIHRoZSBjb250ZW50IHJlZ2lvblxuICAgKi9cbiAgcmVhZG9ubHkgaWQgPSBpbnB1dDxzdHJpbmc+KHVuaXF1ZUlkKCduZ3AtYWNjb3JkaW9uLWNvbnRlbnQnKSk7XG59XG4iXX0=