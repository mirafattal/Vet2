/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { computed, contentChild, Directive, HostListener } from '@angular/core';
import { NgpFormField } from 'ng-primitives/form-field';
import { NgpInputToken } from 'ng-primitives/input';
import { NgpSearchFieldToken } from './search-field.token';
import * as i0 from "@angular/core";
import * as i1 from "ng-primitives/form-field";
export class NgpSearchField {
    constructor() {
        /**
         * Access the child input field.
         */
        this.input = contentChild.required(NgpInputToken, { descendants: true });
        /**
         * Whether the input field is empty.
         */
        this.empty = computed(() => this.input().value() === '');
    }
    clear() {
        this.input().setInputValue('');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpSearchField, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.2.0", version: "18.2.13", type: NgpSearchField, isStandalone: true, selector: "[ngpSearchField]", host: { listeners: { "keydown.escape": "clear()" }, properties: { "attr.data-empty": "empty() ? \"\" : null" } }, providers: [{ provide: NgpSearchFieldToken, useExisting: NgpSearchField }], queries: [{ propertyName: "input", first: true, predicate: NgpInputToken, descendants: true, isSignal: true }], exportAs: ["ngpSearchField"], hostDirectives: [{ directive: i1.NgpFormField }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpSearchField, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpSearchField]',
                    exportAs: 'ngpSearchField',
                    providers: [{ provide: NgpSearchFieldToken, useExisting: NgpSearchField }],
                    hostDirectives: [NgpFormField],
                    host: {
                        '[attr.data-empty]': 'empty() ? "" : null',
                    },
                }]
        }], propDecorators: { clear: [{
                type: HostListener,
                args: ['keydown.escape']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWZpZWxkLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nLXByaW1pdGl2ZXMvc2VhcmNoL3NyYy9zZWFyY2gtZmllbGQvc2VhcmNoLWZpZWxkLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFDSCxPQUFPLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDcEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7OztBQVkzRCxNQUFNLE9BQU8sY0FBYztJQVYzQjtRQVdFOztXQUVHO1FBQ2dCLFVBQUssR0FBRyxZQUFZLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBRXZGOztXQUVHO1FBQ00sVUFBSyxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7S0FNOUQ7SUFIQyxLQUFLO1FBQ0gsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNqQyxDQUFDOytHQWRVLGNBQWM7bUdBQWQsY0FBYyxpTEFOZCxDQUFDLEVBQUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsRUFBRSxjQUFjLEVBQUUsQ0FBQyw2REFVekIsYUFBYTs7NEZBSm5ELGNBQWM7a0JBVjFCLFNBQVM7bUJBQUM7b0JBQ1QsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFdBQVcsZ0JBQWdCLEVBQUUsQ0FBQztvQkFDMUUsY0FBYyxFQUFFLENBQUMsWUFBWSxDQUFDO29CQUM5QixJQUFJLEVBQUU7d0JBQ0osbUJBQW1CLEVBQUUscUJBQXFCO3FCQUMzQztpQkFDRjs4QkFhQyxLQUFLO3NCQURKLFlBQVk7dUJBQUMsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgwqkgMjAyNCBBbmd1bGFyIFByaW1pdGl2ZXMuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbmctcHJpbWl0aXZlcy9uZy1wcmltaXRpdmVzXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIDIuMCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5pbXBvcnQgeyBjb21wdXRlZCwgY29udGVudENoaWxkLCBEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdwRm9ybUZpZWxkIH0gZnJvbSAnbmctcHJpbWl0aXZlcy9mb3JtLWZpZWxkJztcbmltcG9ydCB7IE5ncElucHV0VG9rZW4gfSBmcm9tICduZy1wcmltaXRpdmVzL2lucHV0JztcbmltcG9ydCB7IE5ncFNlYXJjaEZpZWxkVG9rZW4gfSBmcm9tICcuL3NlYXJjaC1maWVsZC50b2tlbic7XG5cbkBEaXJlY3RpdmUoe1xuICBzdGFuZGFsb25lOiB0cnVlLFxuICBzZWxlY3RvcjogJ1tuZ3BTZWFyY2hGaWVsZF0nLFxuICBleHBvcnRBczogJ25ncFNlYXJjaEZpZWxkJyxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBOZ3BTZWFyY2hGaWVsZFRva2VuLCB1c2VFeGlzdGluZzogTmdwU2VhcmNoRmllbGQgfV0sXG4gIGhvc3REaXJlY3RpdmVzOiBbTmdwRm9ybUZpZWxkXSxcbiAgaG9zdDoge1xuICAgICdbYXR0ci5kYXRhLWVtcHR5XSc6ICdlbXB0eSgpID8gXCJcIiA6IG51bGwnLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBOZ3BTZWFyY2hGaWVsZCB7XG4gIC8qKlxuICAgKiBBY2Nlc3MgdGhlIGNoaWxkIGlucHV0IGZpZWxkLlxuICAgKi9cbiAgcHJvdGVjdGVkIHJlYWRvbmx5IGlucHV0ID0gY29udGVudENoaWxkLnJlcXVpcmVkKE5ncElucHV0VG9rZW4sIHsgZGVzY2VuZGFudHM6IHRydWUgfSk7XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGlucHV0IGZpZWxkIGlzIGVtcHR5LlxuICAgKi9cbiAgcmVhZG9ubHkgZW1wdHkgPSBjb21wdXRlZCgoKSA9PiB0aGlzLmlucHV0KCkudmFsdWUoKSA9PT0gJycpO1xuXG4gIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24uZXNjYXBlJylcbiAgY2xlYXIoKTogdm9pZCB7XG4gICAgdGhpcy5pbnB1dCgpLnNldElucHV0VmFsdWUoJycpO1xuICB9XG59XG4iXX0=