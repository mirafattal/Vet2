/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Directive } from '@angular/core';
import { NgpFocusVisible, NgpHover, NgpPress } from 'ng-primitives/interactions';
import { injectSwitch } from '../switch/switch.token';
import * as i0 from "@angular/core";
import * as i1 from "ng-primitives/interactions";
export class NgpSwitchThumb {
    constructor() {
        /**
         * Access the switch directive.
         */
        this.switch = injectSwitch();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpSwitchThumb, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.13", type: NgpSwitchThumb, isStandalone: true, selector: "[ngpSwitchThumb]", host: { properties: { "attr.data-checked": "switch.checked() ? \"\" : null", "attr.data-disabled": "switch.disabled() ? \"\" : null" } }, hostDirectives: [{ directive: i1.NgpHover }, { directive: i1.NgpFocusVisible }, { directive: i1.NgpPress }], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpSwitchThumb, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngpSwitchThumb]',
                    standalone: true,
                    host: {
                        '[attr.data-checked]': 'switch.checked() ? "" : null',
                        '[attr.data-disabled]': 'switch.disabled() ? "" : null',
                    },
                    hostDirectives: [NgpHover, NgpFocusVisible, NgpPress],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpdGNoLXRodW1iLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nLXByaW1pdGl2ZXMvc3dpdGNoL3NyYy9zd2l0Y2gtdGh1bWIvc3dpdGNoLXRodW1iLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFDSCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFDLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ2pGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7O0FBV3RELE1BQU0sT0FBTyxjQUFjO0lBVDNCO1FBVUU7O1dBRUc7UUFDZ0IsV0FBTSxHQUFHLFlBQVksRUFBRSxDQUFDO0tBQzVDOytHQUxZLGNBQWM7bUdBQWQsY0FBYzs7NEZBQWQsY0FBYztrQkFUMUIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixVQUFVLEVBQUUsSUFBSTtvQkFDaEIsSUFBSSxFQUFFO3dCQUNKLHFCQUFxQixFQUFFLDhCQUE4Qjt3QkFDckQsc0JBQXNCLEVBQUUsK0JBQStCO3FCQUN4RDtvQkFDRCxjQUFjLEVBQUUsQ0FBQyxRQUFRLEVBQUUsZUFBZSxFQUFFLFFBQVEsQ0FBQztpQkFDdEQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCDCqSAyMDI0IEFuZ3VsYXIgUHJpbWl0aXZlcy5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9uZy1wcmltaXRpdmVzL25nLXByaW1pdGl2ZXNcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgMi4wIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmltcG9ydCB7IERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdwRm9jdXNWaXNpYmxlLCBOZ3BIb3ZlciwgTmdwUHJlc3MgfSBmcm9tICduZy1wcmltaXRpdmVzL2ludGVyYWN0aW9ucyc7XG5pbXBvcnQgeyBpbmplY3RTd2l0Y2ggfSBmcm9tICcuLi9zd2l0Y2gvc3dpdGNoLnRva2VuJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW25ncFN3aXRjaFRodW1iXScsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGhvc3Q6IHtcbiAgICAnW2F0dHIuZGF0YS1jaGVja2VkXSc6ICdzd2l0Y2guY2hlY2tlZCgpID8gXCJcIiA6IG51bGwnLFxuICAgICdbYXR0ci5kYXRhLWRpc2FibGVkXSc6ICdzd2l0Y2guZGlzYWJsZWQoKSA/IFwiXCIgOiBudWxsJyxcbiAgfSxcbiAgaG9zdERpcmVjdGl2ZXM6IFtOZ3BIb3ZlciwgTmdwRm9jdXNWaXNpYmxlLCBOZ3BQcmVzc10sXG59KVxuZXhwb3J0IGNsYXNzIE5ncFN3aXRjaFRodW1iIHtcbiAgLyoqXG4gICAqIEFjY2VzcyB0aGUgc3dpdGNoIGRpcmVjdGl2ZS5cbiAgICovXG4gIHByb3RlY3RlZCByZWFkb25seSBzd2l0Y2ggPSBpbmplY3RTd2l0Y2goKTtcbn1cbiJdfQ==