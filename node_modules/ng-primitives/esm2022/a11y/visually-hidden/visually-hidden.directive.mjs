/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Directive, computed, signal } from '@angular/core';
import { NgpVisuallyHiddenToken } from './visually-hidden.token';
import * as i0 from "@angular/core";
export class NgpVisuallyHidden {
    constructor() {
        /**
         * Whether the element is hidden.
         */
        this.hidden = signal(true);
        this.style = computed(() => {
            if (!this.hidden()) {
                return {};
            }
            return {
                position: 'absolute',
                width: '1px',
                height: '1px',
                margin: '-1px',
                padding: '0',
                overflow: 'hidden',
                clip: 'rect(0, 0, 0, 0)',
                whiteSpace: 'nowrap',
                border: '0',
                wordWrap: 'normal',
                outline: '0',
                '-webkit-appearance': 'none',
                '-moz-appearance': 'none',
                'inset-inline-start': '0',
            };
        });
    }
    /**
     * Set the element visibility.
     * @param visible
     */
    setVisibility(visible) {
        this.hidden.set(!visible);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpVisuallyHidden, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.13", type: NgpVisuallyHidden, isStandalone: true, selector: "[ngpVisuallyHidden]", host: { properties: { "style": "style()" } }, providers: [{ provide: NgpVisuallyHiddenToken, useExisting: NgpVisuallyHidden }], exportAs: ["ngpVisuallyHidden"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpVisuallyHidden, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpVisuallyHidden]',
                    exportAs: 'ngpVisuallyHidden',
                    providers: [{ provide: NgpVisuallyHiddenToken, useExisting: NgpVisuallyHidden }],
                    host: {
                        '[style]': 'style()',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlzdWFsbHktaGlkZGVuLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nLXByaW1pdGl2ZXMvYTExeS9zcmMvdmlzdWFsbHktaGlkZGVuL3Zpc3VhbGx5LWhpZGRlbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDOztBQVdqRSxNQUFNLE9BQU8saUJBQWlCO0lBVDlCO1FBVUU7O1dBRUc7UUFDZ0IsV0FBTSxHQUFHLE1BQU0sQ0FBVSxJQUFJLENBQUMsQ0FBQztRQUUvQixVQUFLLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRTtZQUN2QyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUM7Z0JBQ25CLE9BQU8sRUFBRSxDQUFDO1lBQ1osQ0FBQztZQUVELE9BQU87Z0JBQ0wsUUFBUSxFQUFFLFVBQVU7Z0JBQ3BCLEtBQUssRUFBRSxLQUFLO2dCQUNaLE1BQU0sRUFBRSxLQUFLO2dCQUNiLE1BQU0sRUFBRSxNQUFNO2dCQUNkLE9BQU8sRUFBRSxHQUFHO2dCQUNaLFFBQVEsRUFBRSxRQUFRO2dCQUNsQixJQUFJLEVBQUUsa0JBQWtCO2dCQUN4QixVQUFVLEVBQUUsUUFBUTtnQkFDcEIsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsUUFBUSxFQUFFLFFBQVE7Z0JBQ2xCLE9BQU8sRUFBRSxHQUFHO2dCQUNaLG9CQUFvQixFQUFFLE1BQU07Z0JBQzVCLGlCQUFpQixFQUFFLE1BQU07Z0JBQ3pCLG9CQUFvQixFQUFFLEdBQUc7YUFDMUIsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUFDO0tBU0o7SUFQQzs7O09BR0c7SUFDSCxhQUFhLENBQUMsT0FBZ0I7UUFDNUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM1QixDQUFDOytHQW5DVSxpQkFBaUI7bUdBQWpCLGlCQUFpQixnSEFMakIsQ0FBQyxFQUFFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxXQUFXLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQzs7NEZBS3JFLGlCQUFpQjtrQkFUN0IsU0FBUzttQkFBQztvQkFDVCxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsV0FBVyxtQkFBbUIsRUFBRSxDQUFDO29CQUNoRixJQUFJLEVBQUU7d0JBQ0osU0FBUyxFQUFFLFNBQVM7cUJBQ3JCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgwqkgMjAyNCBBbmd1bGFyIFByaW1pdGl2ZXMuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbmctcHJpbWl0aXZlcy9uZy1wcmltaXRpdmVzXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIDIuMCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5pbXBvcnQgeyBEaXJlY3RpdmUsIGNvbXB1dGVkLCBzaWduYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5ncFZpc3VhbGx5SGlkZGVuVG9rZW4gfSBmcm9tICcuL3Zpc3VhbGx5LWhpZGRlbi50b2tlbic7XG5cbkBEaXJlY3RpdmUoe1xuICBzdGFuZGFsb25lOiB0cnVlLFxuICBzZWxlY3RvcjogJ1tuZ3BWaXN1YWxseUhpZGRlbl0nLFxuICBleHBvcnRBczogJ25ncFZpc3VhbGx5SGlkZGVuJyxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBOZ3BWaXN1YWxseUhpZGRlblRva2VuLCB1c2VFeGlzdGluZzogTmdwVmlzdWFsbHlIaWRkZW4gfV0sXG4gIGhvc3Q6IHtcbiAgICAnW3N0eWxlXSc6ICdzdHlsZSgpJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTmdwVmlzdWFsbHlIaWRkZW4ge1xuICAvKipcbiAgICogV2hldGhlciB0aGUgZWxlbWVudCBpcyBoaWRkZW4uXG4gICAqL1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgaGlkZGVuID0gc2lnbmFsPGJvb2xlYW4+KHRydWUpO1xuXG4gIHByb3RlY3RlZCByZWFkb25seSBzdHlsZSA9IGNvbXB1dGVkKCgpID0+IHtcbiAgICBpZiAoIXRoaXMuaGlkZGVuKCkpIHtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICB3aWR0aDogJzFweCcsXG4gICAgICBoZWlnaHQ6ICcxcHgnLFxuICAgICAgbWFyZ2luOiAnLTFweCcsXG4gICAgICBwYWRkaW5nOiAnMCcsXG4gICAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gICAgICBjbGlwOiAncmVjdCgwLCAwLCAwLCAwKScsXG4gICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgICAgIGJvcmRlcjogJzAnLFxuICAgICAgd29yZFdyYXA6ICdub3JtYWwnLFxuICAgICAgb3V0bGluZTogJzAnLFxuICAgICAgJy13ZWJraXQtYXBwZWFyYW5jZSc6ICdub25lJyxcbiAgICAgICctbW96LWFwcGVhcmFuY2UnOiAnbm9uZScsXG4gICAgICAnaW5zZXQtaW5saW5lLXN0YXJ0JzogJzAnLFxuICAgIH07XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGVsZW1lbnQgdmlzaWJpbGl0eS5cbiAgICogQHBhcmFtIHZpc2libGVcbiAgICovXG4gIHNldFZpc2liaWxpdHkodmlzaWJsZTogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMuaGlkZGVuLnNldCghdmlzaWJsZSk7XG4gIH1cbn1cbiJdfQ==