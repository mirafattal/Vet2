/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Directive, computed, input } from '@angular/core';
import { injectTabset } from '../tabset/tabset.token';
import { NgpTabPanelToken } from './tab-panel.token';
import * as i0 from "@angular/core";
export class NgpTabPanel {
    constructor() {
        /**
         * Access the tabset
         */
        this.tabset = injectTabset();
        /**
         * The value of the tab
         */
        this.value = input.required({ alias: 'ngpTabPanelValue' });
        /**
         * Determine the id of the tab panel
         * @internal
         */
        this.id = input();
        /**
         * Determine a unique id for the tab panel if not provided
         * @internal
         */
        this.defaultId = computed(() => `${this.tabset.id()}-panel-${this.value()}`);
        /**
         * Determine the aria-labelledby of the tab panel
         * @internal
         */
        this.labelledBy = computed(() => `${this.tabset.id()}-button-${this.value()}`);
        /**
         * Whether the tab is active
         */
        this.active = computed(() => this.tabset.selectedTab() === this.value());
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpTabPanel, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.13", type: NgpTabPanel, isStandalone: true, selector: "[ngpTabPanel]", inputs: { value: { classPropertyName: "value", publicName: "ngpTabPanelValue", isSignal: true, isRequired: true, transformFunction: null }, id: { classPropertyName: "id", publicName: "id", isSignal: true, isRequired: false, transformFunction: null } }, host: { attributes: { "role": "tabpanel", "tabIndex": "0" }, properties: { "attr.aria-labelledby": "labelledBy()", "attr.data-active": "active() ? \"\" : null", "attr.data-orientation": "tabset.orientation()" } }, providers: [{ provide: NgpTabPanelToken, useExisting: NgpTabPanel }], exportAs: ["ngpTabPanel"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpTabPanel, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpTabPanel]',
                    exportAs: 'ngpTabPanel',
                    providers: [{ provide: NgpTabPanelToken, useExisting: NgpTabPanel }],
                    host: {
                        role: 'tabpanel',
                        tabIndex: '0',
                        '[attr.aria-labelledby]': 'labelledBy()',
                        '[attr.data-active]': 'active() ? "" : null',
                        '[attr.data-orientation]': 'tabset.orientation()',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLXBhbmVsLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nLXByaW1pdGl2ZXMvdGFicy9zcmMvdGFiLXBhbmVsL3RhYi1wYW5lbC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBQ0gsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7QUFlckQsTUFBTSxPQUFPLFdBQVc7SUFieEI7UUFjRTs7V0FFRztRQUNnQixXQUFNLEdBQUcsWUFBWSxFQUFFLENBQUM7UUFFM0M7O1dBRUc7UUFDTSxVQUFLLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBUyxFQUFFLEtBQUssRUFBRSxrQkFBa0IsRUFBRSxDQUFDLENBQUM7UUFFdkU7OztXQUdHO1FBQ00sT0FBRSxHQUFHLEtBQUssRUFBVSxDQUFDO1FBRTlCOzs7V0FHRztRQUNNLGNBQVMsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxVQUFVLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFakY7OztXQUdHO1FBQ00sZUFBVSxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLFdBQVcsSUFBSSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVuRjs7V0FFRztRQUNNLFdBQU0sR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsS0FBSyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztLQUM5RTsrR0FqQ1ksV0FBVzttR0FBWCxXQUFXLCtnQkFUWCxDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsQ0FBQzs7NEZBU3pELFdBQVc7a0JBYnZCLFNBQVM7bUJBQUM7b0JBQ1QsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFFBQVEsRUFBRSxlQUFlO29CQUN6QixRQUFRLEVBQUUsYUFBYTtvQkFDdkIsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxhQUFhLEVBQUUsQ0FBQztvQkFDcEUsSUFBSSxFQUFFO3dCQUNKLElBQUksRUFBRSxVQUFVO3dCQUNoQixRQUFRLEVBQUUsR0FBRzt3QkFDYix3QkFBd0IsRUFBRSxjQUFjO3dCQUN4QyxvQkFBb0IsRUFBRSxzQkFBc0I7d0JBQzVDLHlCQUF5QixFQUFFLHNCQUFzQjtxQkFDbEQ7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCDCqSAyMDI0IEFuZ3VsYXIgUHJpbWl0aXZlcy5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9uZy1wcmltaXRpdmVzL25nLXByaW1pdGl2ZXNcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgMi4wIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmltcG9ydCB7IERpcmVjdGl2ZSwgY29tcHV0ZWQsIGlucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpbmplY3RUYWJzZXQgfSBmcm9tICcuLi90YWJzZXQvdGFic2V0LnRva2VuJztcbmltcG9ydCB7IE5ncFRhYlBhbmVsVG9rZW4gfSBmcm9tICcuL3RhYi1wYW5lbC50b2tlbic7XG5cbkBEaXJlY3RpdmUoe1xuICBzdGFuZGFsb25lOiB0cnVlLFxuICBzZWxlY3RvcjogJ1tuZ3BUYWJQYW5lbF0nLFxuICBleHBvcnRBczogJ25ncFRhYlBhbmVsJyxcbiAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBOZ3BUYWJQYW5lbFRva2VuLCB1c2VFeGlzdGluZzogTmdwVGFiUGFuZWwgfV0sXG4gIGhvc3Q6IHtcbiAgICByb2xlOiAndGFicGFuZWwnLFxuICAgIHRhYkluZGV4OiAnMCcsXG4gICAgJ1thdHRyLmFyaWEtbGFiZWxsZWRieV0nOiAnbGFiZWxsZWRCeSgpJyxcbiAgICAnW2F0dHIuZGF0YS1hY3RpdmVdJzogJ2FjdGl2ZSgpID8gXCJcIiA6IG51bGwnLFxuICAgICdbYXR0ci5kYXRhLW9yaWVudGF0aW9uXSc6ICd0YWJzZXQub3JpZW50YXRpb24oKScsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIE5ncFRhYlBhbmVsIHtcbiAgLyoqXG4gICAqIEFjY2VzcyB0aGUgdGFic2V0XG4gICAqL1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgdGFic2V0ID0gaW5qZWN0VGFic2V0KCk7XG5cbiAgLyoqXG4gICAqIFRoZSB2YWx1ZSBvZiB0aGUgdGFiXG4gICAqL1xuICByZWFkb25seSB2YWx1ZSA9IGlucHV0LnJlcXVpcmVkPHN0cmluZz4oeyBhbGlhczogJ25ncFRhYlBhbmVsVmFsdWUnIH0pO1xuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmUgdGhlIGlkIG9mIHRoZSB0YWIgcGFuZWxcbiAgICogQGludGVybmFsXG4gICAqL1xuICByZWFkb25seSBpZCA9IGlucHV0PHN0cmluZz4oKTtcblxuICAvKipcbiAgICogRGV0ZXJtaW5lIGEgdW5pcXVlIGlkIGZvciB0aGUgdGFiIHBhbmVsIGlmIG5vdCBwcm92aWRlZFxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIHJlYWRvbmx5IGRlZmF1bHRJZCA9IGNvbXB1dGVkKCgpID0+IGAke3RoaXMudGFic2V0LmlkKCl9LXBhbmVsLSR7dGhpcy52YWx1ZSgpfWApO1xuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmUgdGhlIGFyaWEtbGFiZWxsZWRieSBvZiB0aGUgdGFiIHBhbmVsXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgcmVhZG9ubHkgbGFiZWxsZWRCeSA9IGNvbXB1dGVkKCgpID0+IGAke3RoaXMudGFic2V0LmlkKCl9LWJ1dHRvbi0ke3RoaXMudmFsdWUoKX1gKTtcblxuICAvKipcbiAgICogV2hldGhlciB0aGUgdGFiIGlzIGFjdGl2ZVxuICAgKi9cbiAgcmVhZG9ubHkgYWN0aXZlID0gY29tcHV0ZWQoKCkgPT4gdGhpcy50YWJzZXQuc2VsZWN0ZWRUYWIoKSA9PT0gdGhpcy52YWx1ZSgpKTtcbn1cbiJdfQ==