/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { computed, Directive } from '@angular/core';
import { injectDatePicker } from '../date-picker/date-picker.token';
import { NgpDatePickerGridToken } from './date-picker-grid.token';
import * as i0 from "@angular/core";
export class NgpDatePickerGrid {
    constructor() {
        /**
         * Access the date picker.
         */
        this.datePicker = injectDatePicker();
        /**
         * Determine the id for the label.
         */
        this.labelId = computed(() => this.datePicker.label()?.id());
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpDatePickerGrid, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.13", type: NgpDatePickerGrid, isStandalone: true, selector: "[ngpDatePickerGrid]", host: { attributes: { "role": "grid" }, properties: { "attr.aria-labelledby": "labelId()", "attr.data-disabled": "datePicker.disabled() ? \"\" : null" } }, providers: [{ provide: NgpDatePickerGridToken, useExisting: NgpDatePickerGrid }], exportAs: ["ngpDatePickerGrid"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpDatePickerGrid, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpDatePickerGrid]',
                    exportAs: 'ngpDatePickerGrid',
                    providers: [{ provide: NgpDatePickerGridToken, useExisting: NgpDatePickerGrid }],
                    host: {
                        role: 'grid',
                        '[attr.aria-labelledby]': 'labelId()',
                        '[attr.data-disabled]': 'datePicker.disabled() ? "" : null',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXItZ3JpZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy1wcmltaXRpdmVzL2RhdGUtcGlja2VyL3NyYy9kYXRlLXBpY2tlci1ncmlkL2RhdGUtcGlja2VyLWdyaWQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDOztBQWFsRSxNQUFNLE9BQU8saUJBQWlCO0lBWDlCO1FBWUU7O1dBRUc7UUFDYyxlQUFVLEdBQUcsZ0JBQWdCLEVBQUssQ0FBQztRQUVwRDs7V0FFRztRQUNnQixZQUFPLEdBQUcsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztLQUM1RTsrR0FWWSxpQkFBaUI7bUdBQWpCLGlCQUFpQiw4TkFQakIsQ0FBQyxFQUFFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxXQUFXLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQzs7NEZBT3JFLGlCQUFpQjtrQkFYN0IsU0FBUzttQkFBQztvQkFDVCxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsV0FBVyxtQkFBbUIsRUFBRSxDQUFDO29CQUNoRixJQUFJLEVBQUU7d0JBQ0osSUFBSSxFQUFFLE1BQU07d0JBQ1osd0JBQXdCLEVBQUUsV0FBVzt3QkFDckMsc0JBQXNCLEVBQUUsbUNBQW1DO3FCQUM1RDtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IMKpIDIwMjQgQW5ndWxhciBQcmltaXRpdmVzLlxuICogaHR0cHM6Ly9naXRodWIuY29tL25nLXByaW1pdGl2ZXMvbmctcHJpbWl0aXZlc1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSAyLjAgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuaW1wb3J0IHsgY29tcHV0ZWQsIERpcmVjdGl2ZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaW5qZWN0RGF0ZVBpY2tlciB9IGZyb20gJy4uL2RhdGUtcGlja2VyL2RhdGUtcGlja2VyLnRva2VuJztcbmltcG9ydCB7IE5ncERhdGVQaWNrZXJHcmlkVG9rZW4gfSBmcm9tICcuL2RhdGUtcGlja2VyLWdyaWQudG9rZW4nO1xuXG5ARGlyZWN0aXZlKHtcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgc2VsZWN0b3I6ICdbbmdwRGF0ZVBpY2tlckdyaWRdJyxcbiAgZXhwb3J0QXM6ICduZ3BEYXRlUGlja2VyR3JpZCcsXG4gIHByb3ZpZGVyczogW3sgcHJvdmlkZTogTmdwRGF0ZVBpY2tlckdyaWRUb2tlbiwgdXNlRXhpc3Rpbmc6IE5ncERhdGVQaWNrZXJHcmlkIH1dLFxuICBob3N0OiB7XG4gICAgcm9sZTogJ2dyaWQnLFxuICAgICdbYXR0ci5hcmlhLWxhYmVsbGVkYnldJzogJ2xhYmVsSWQoKScsXG4gICAgJ1thdHRyLmRhdGEtZGlzYWJsZWRdJzogJ2RhdGVQaWNrZXIuZGlzYWJsZWQoKSA/IFwiXCIgOiBudWxsJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTmdwRGF0ZVBpY2tlckdyaWQ8VD4ge1xuICAvKipcbiAgICogQWNjZXNzIHRoZSBkYXRlIHBpY2tlci5cbiAgICovXG4gIHByaXZhdGUgcmVhZG9ubHkgZGF0ZVBpY2tlciA9IGluamVjdERhdGVQaWNrZXI8VD4oKTtcblxuICAvKipcbiAgICogRGV0ZXJtaW5lIHRoZSBpZCBmb3IgdGhlIGxhYmVsLlxuICAgKi9cbiAgcHJvdGVjdGVkIHJlYWRvbmx5IGxhYmVsSWQgPSBjb21wdXRlZCgoKSA9PiB0aGlzLmRhdGVQaWNrZXIubGFiZWwoKT8uaWQoKSk7XG59XG4iXX0=