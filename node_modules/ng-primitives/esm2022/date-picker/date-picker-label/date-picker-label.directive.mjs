/**
 * Copyright © 2024 Angular Primitives.
 * https://github.com/ng-primitives/ng-primitives
 *
 * This source code is licensed under the Apache 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Directive, input } from '@angular/core';
import { uniqueId } from 'ng-primitives/utils';
import { injectDatePicker } from '../date-picker/date-picker.token';
import { NgpDatePickerLabelToken } from './date-picker-label.token';
import * as i0 from "@angular/core";
export class NgpDatePickerLabel {
    constructor() {
        /**
         * Access the date picker.
         */
        this.datePicker = injectDatePicker();
        /**
         * Define a unique id for the label.
         */
        this.id = input(uniqueId('ngp-date-picker-label'));
        /**
         * Define the aria live attribute.
         */
        this.ariaLive = input('polite', {
            alias: 'aria-live',
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpDatePickerLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "17.1.0", version: "18.2.13", type: NgpDatePickerLabel, isStandalone: true, selector: "[ngpDatePickerLabel]", inputs: { id: { classPropertyName: "id", publicName: "id", isSignal: true, isRequired: false, transformFunction: null }, ariaLive: { classPropertyName: "ariaLive", publicName: "aria-live", isSignal: true, isRequired: false, transformFunction: null } }, host: { properties: { "id": "id()", "attr.aria-live": "ariaLive()", "attr.data-disabled": "datePicker.disabled() ? \"\" : null" } }, providers: [{ provide: NgpDatePickerLabelToken, useExisting: NgpDatePickerLabel }], exportAs: ["ngpDatePickerLabel"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.13", ngImport: i0, type: NgpDatePickerLabel, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngpDatePickerLabel]',
                    exportAs: 'ngpDatePickerLabel',
                    providers: [{ provide: NgpDatePickerLabelToken, useExisting: NgpDatePickerLabel }],
                    host: {
                        '[id]': 'id()',
                        '[attr.aria-live]': 'ariaLive()',
                        '[attr.data-disabled]': 'datePicker.disabled() ? "" : null',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXItbGFiZWwuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmctcHJpbWl0aXZlcy9kYXRlLXBpY2tlci9zcmMvZGF0ZS1waWNrZXItbGFiZWwvZGF0ZS1waWNrZXItbGFiZWwuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUNILE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNwRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7QUFhcEUsTUFBTSxPQUFPLGtCQUFrQjtJQVgvQjtRQVlFOztXQUVHO1FBQ2dCLGVBQVUsR0FBRyxnQkFBZ0IsRUFBVyxDQUFDO1FBRTVEOztXQUVHO1FBQ00sT0FBRSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDO1FBRXZEOztXQUVHO1FBQ00sYUFBUSxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUU7WUFDbEMsS0FBSyxFQUFFLFdBQVc7U0FDbkIsQ0FBQyxDQUFDO0tBQ0o7K0dBakJZLGtCQUFrQjttR0FBbEIsa0JBQWtCLHFjQVBsQixDQUFDLEVBQUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFdBQVcsRUFBRSxrQkFBa0IsRUFBRSxDQUFDOzs0RkFPdkUsa0JBQWtCO2tCQVg5QixTQUFTO21CQUFDO29CQUNULFVBQVUsRUFBRSxJQUFJO29CQUNoQixRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixTQUFTLEVBQUUsQ0FBQyxFQUFFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxXQUFXLG9CQUFvQixFQUFFLENBQUM7b0JBQ2xGLElBQUksRUFBRTt3QkFDSixNQUFNLEVBQUUsTUFBTTt3QkFDZCxrQkFBa0IsRUFBRSxZQUFZO3dCQUNoQyxzQkFBc0IsRUFBRSxtQ0FBbUM7cUJBQzVEO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgwqkgMjAyNCBBbmd1bGFyIFByaW1pdGl2ZXMuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbmctcHJpbWl0aXZlcy9uZy1wcmltaXRpdmVzXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIDIuMCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5pbXBvcnQgeyBEaXJlY3RpdmUsIGlucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyB1bmlxdWVJZCB9IGZyb20gJ25nLXByaW1pdGl2ZXMvdXRpbHMnO1xuaW1wb3J0IHsgaW5qZWN0RGF0ZVBpY2tlciB9IGZyb20gJy4uL2RhdGUtcGlja2VyL2RhdGUtcGlja2VyLnRva2VuJztcbmltcG9ydCB7IE5ncERhdGVQaWNrZXJMYWJlbFRva2VuIH0gZnJvbSAnLi9kYXRlLXBpY2tlci1sYWJlbC50b2tlbic7XG5cbkBEaXJlY3RpdmUoe1xuICBzdGFuZGFsb25lOiB0cnVlLFxuICBzZWxlY3RvcjogJ1tuZ3BEYXRlUGlja2VyTGFiZWxdJyxcbiAgZXhwb3J0QXM6ICduZ3BEYXRlUGlja2VyTGFiZWwnLFxuICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IE5ncERhdGVQaWNrZXJMYWJlbFRva2VuLCB1c2VFeGlzdGluZzogTmdwRGF0ZVBpY2tlckxhYmVsIH1dLFxuICBob3N0OiB7XG4gICAgJ1tpZF0nOiAnaWQoKScsXG4gICAgJ1thdHRyLmFyaWEtbGl2ZV0nOiAnYXJpYUxpdmUoKScsXG4gICAgJ1thdHRyLmRhdGEtZGlzYWJsZWRdJzogJ2RhdGVQaWNrZXIuZGlzYWJsZWQoKSA/IFwiXCIgOiBudWxsJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTmdwRGF0ZVBpY2tlckxhYmVsIHtcbiAgLyoqXG4gICAqIEFjY2VzcyB0aGUgZGF0ZSBwaWNrZXIuXG4gICAqL1xuICBwcm90ZWN0ZWQgcmVhZG9ubHkgZGF0ZVBpY2tlciA9IGluamVjdERhdGVQaWNrZXI8dW5rbm93bj4oKTtcblxuICAvKipcbiAgICogRGVmaW5lIGEgdW5pcXVlIGlkIGZvciB0aGUgbGFiZWwuXG4gICAqL1xuICByZWFkb25seSBpZCA9IGlucHV0KHVuaXF1ZUlkKCduZ3AtZGF0ZS1waWNrZXItbGFiZWwnKSk7XG5cbiAgLyoqXG4gICAqIERlZmluZSB0aGUgYXJpYSBsaXZlIGF0dHJpYnV0ZS5cbiAgICovXG4gIHJlYWRvbmx5IGFyaWFMaXZlID0gaW5wdXQoJ3BvbGl0ZScsIHtcbiAgICBhbGlhczogJ2FyaWEtbGl2ZScsXG4gIH0pO1xufVxuIl19